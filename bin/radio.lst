                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module radio
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _spi_transfer
                                     12 	.globl _memcpy
                                     13 	.globl _RFRDY
                                     14 	.globl _rfcsn
                                     15 	.globl _rfce
                                     16 	.globl _ien1
                                     17 	.globl _ien0
                                     18 	.globl _REGXC
                                     19 	.globl _REGXL
                                     20 	.globl _REGXH
                                     21 	.globl _TICKDV
                                     22 	.globl _RFDAT
                                     23 	.globl _P0DIR
                                     24 	.globl _P0
                                     25 	.globl _AESIA1
                                     26 	.globl _AESIV
                                     27 	.globl _usbcon
                                     28 	.globl _rfcon
                                     29 	.globl _rfctl
                                     30 	.globl _handle_radio_request_PARM_2
                                     31 	.globl _crc_update_PARM_3
                                     32 	.globl _crc_update_PARM_2
                                     33 	.globl _write_register_byte_PARM_2
                                     34 	.globl _spi_read_PARM_3
                                     35 	.globl _spi_read_PARM_2
                                     36 	.globl _spi_write_PARM_3
                                     37 	.globl _spi_write_PARM_2
                                     38 	.globl _configure_phy_PARM_3
                                     39 	.globl _configure_phy_PARM_2
                                     40 	.globl _configure_mac_PARM_3
                                     41 	.globl _configure_mac_PARM_2
                                     42 	.globl _configure_address_PARM_2
                                     43 	.globl _enter_promiscuous_mode_generic_PARM_4
                                     44 	.globl _enter_promiscuous_mode_generic_PARM_3
                                     45 	.globl _enter_promiscuous_mode_generic_PARM_2
                                     46 	.globl _enter_promiscuous_mode_PARM_2
                                     47 	.globl _setupbuf
                                     48 	.globl _out1buf
                                     49 	.globl _in1buf
                                     50 	.globl _in0buf
                                     51 	.globl _enter_promiscuous_mode
                                     52 	.globl _enter_promiscuous_mode_generic
                                     53 	.globl _configure_address
                                     54 	.globl _configure_mac
                                     55 	.globl _configure_phy
                                     56 	.globl _spi_write
                                     57 	.globl _spi_read
                                     58 	.globl _write_register_byte
                                     59 	.globl _read_register_byte
                                     60 	.globl _crc_update
                                     61 	.globl _handle_radio_request
                                     62 ;--------------------------------------------------------
                                     63 ; special function registers
                                     64 ;--------------------------------------------------------
                                     65 	.area RSEG    (ABS,DATA)
      000000                         66 	.org 0x0000
                           0000E6    67 _rfctl	=	0x00e6
                           000090    68 _rfcon	=	0x0090
                           0000A0    69 _usbcon	=	0x00a0
                           0000F2    70 _AESIV	=	0x00f2
                           0000F5    71 _AESIA1	=	0x00f5
                           000080    72 _P0	=	0x0080
                           000094    73 _P0DIR	=	0x0094
                           0000E5    74 _RFDAT	=	0x00e5
                           0000AB    75 _TICKDV	=	0x00ab
                           0000AB    76 _REGXH	=	0x00ab
                           0000AC    77 _REGXL	=	0x00ac
                           0000AD    78 _REGXC	=	0x00ad
                           0000A8    79 _ien0	=	0x00a8
                           0000B8    80 _ien1	=	0x00b8
                                     81 ;--------------------------------------------------------
                                     82 ; special function bits
                                     83 ;--------------------------------------------------------
                                     84 	.area RSEG    (ABS,DATA)
      000000                         85 	.org 0x0000
                           000090    86 _rfce	=	0x0090
                           000091    87 _rfcsn	=	0x0091
                           0000C0    88 _RFRDY	=	0x00c0
                                     89 ;--------------------------------------------------------
                                     90 ; overlayable register banks
                                     91 ;--------------------------------------------------------
                                     92 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         93 	.ds 8
                                     94 ;--------------------------------------------------------
                                     95 ; internal ram data
                                     96 ;--------------------------------------------------------
                                     97 	.area DSEG    (DATA)
      000000                         98 _enter_promiscuous_mode_sloc0_1_0:
      000000                         99 	.ds 3
      000003                        100 _enter_promiscuous_mode_sloc1_1_0:
      000003                        101 	.ds 2
      000005                        102 _enter_promiscuous_mode_generic_sloc0_1_0:
      000005                        103 	.ds 3
      000008                        104 _enter_promiscuous_mode_generic_sloc1_1_0:
      000008                        105 	.ds 2
      00000A                        106 _spi_read_sloc0_1_0:
      00000A                        107 	.ds 3
      00000D                        108 _handle_radio_request_sloc0_1_0:
      00000D                        109 	.ds 1
      00000E                        110 _handle_radio_request_sloc1_1_0:
      00000E                        111 	.ds 3
      000011                        112 _handle_radio_request_sloc2_1_0:
      000011                        113 	.ds 2
      000013                        114 _handle_radio_request_sloc3_1_0:
      000013                        115 	.ds 2
                                    116 ;--------------------------------------------------------
                                    117 ; overlayable items in internal ram 
                                    118 ;--------------------------------------------------------
                                    119 ;--------------------------------------------------------
                                    120 ; indirectly addressable internal ram data
                                    121 ;--------------------------------------------------------
                                    122 	.area ISEG    (DATA)
                                    123 ;--------------------------------------------------------
                                    124 ; absolute internal ram data
                                    125 ;--------------------------------------------------------
                                    126 	.area IABS    (ABS,DATA)
                                    127 	.area IABS    (ABS,DATA)
                                    128 ;--------------------------------------------------------
                                    129 ; bit data
                                    130 ;--------------------------------------------------------
                                    131 	.area BSEG    (BIT)
                                    132 ;--------------------------------------------------------
                                    133 ; paged external ram data
                                    134 ;--------------------------------------------------------
                                    135 	.area PSEG    (PAG,XDATA)
                                    136 ;--------------------------------------------------------
                                    137 ; external ram data
                                    138 ;--------------------------------------------------------
                                    139 	.area XSEG    (XDATA)
                           00C700   140 _in0buf	=	0xc700
                           00C680   141 _in1buf	=	0xc680
                           00C640   142 _out1buf	=	0xc640
                           00C7E8   143 _setupbuf	=	0xc7e8
      000000                        144 _configured:
      000000                        145 	.ds 1
      000001                        146 _radio_mode:
      000001                        147 	.ds 1
      000002                        148 _pm_prefix_length:
      000002                        149 	.ds 2
      000004                        150 _pm_prefix:
      000004                        151 	.ds 5
      000009                        152 _pm_payload_length:
      000009                        153 	.ds 1
      00000A                        154 _enter_promiscuous_mode_PARM_2:
      00000A                        155 	.ds 1
      00000B                        156 _enter_promiscuous_mode_prefix_65536_34:
      00000B                        157 	.ds 3
      00000E                        158 _enter_promiscuous_mode_address_131072_37:
      00000E                        159 	.ds 2
      000010                        160 _enter_promiscuous_mode_generic_PARM_2:
      000010                        161 	.ds 1
      000011                        162 _enter_promiscuous_mode_generic_PARM_3:
      000011                        163 	.ds 1
      000012                        164 _enter_promiscuous_mode_generic_PARM_4:
      000012                        165 	.ds 1
      000013                        166 _enter_promiscuous_mode_generic_prefix_65536_38:
      000013                        167 	.ds 3
      000016                        168 _enter_promiscuous_mode_generic_address_131072_41:
      000016                        169 	.ds 2
      000018                        170 _configure_address_PARM_2:
      000018                        171 	.ds 1
      000019                        172 _configure_address_address_65536_43:
      000019                        173 	.ds 3
      00001C                        174 _configure_mac_PARM_2:
      00001C                        175 	.ds 1
      00001D                        176 _configure_mac_PARM_3:
      00001D                        177 	.ds 1
      00001E                        178 _configure_mac_feature_65536_45:
      00001E                        179 	.ds 1
      00001F                        180 _configure_phy_PARM_2:
      00001F                        181 	.ds 1
      000020                        182 _configure_phy_PARM_3:
      000020                        183 	.ds 1
      000021                        184 _configure_phy_config_65536_47:
      000021                        185 	.ds 1
      000022                        186 _spi_transfer_byte_65536_49:
      000022                        187 	.ds 1
      000023                        188 _spi_write_PARM_2:
      000023                        189 	.ds 3
      000026                        190 _spi_write_PARM_3:
      000026                        191 	.ds 1
      000027                        192 _spi_write_command_65536_51:
      000027                        193 	.ds 1
      000028                        194 _spi_read_PARM_2:
      000028                        195 	.ds 3
      00002B                        196 _spi_read_PARM_3:
      00002B                        197 	.ds 1
      00002C                        198 _spi_read_command_65536_54:
      00002C                        199 	.ds 1
      00002D                        200 _write_register_byte_PARM_2:
      00002D                        201 	.ds 1
      00002E                        202 _write_register_byte_reg_65536_57:
      00002E                        203 	.ds 1
      00002F                        204 _read_register_byte_reg_65536_59:
      00002F                        205 	.ds 1
      000030                        206 _read_register_byte_value_65536_60:
      000030                        207 	.ds 1
      000031                        208 _crc_update_PARM_2:
      000031                        209 	.ds 1
      000032                        210 _crc_update_PARM_3:
      000032                        211 	.ds 1
      000033                        212 _crc_update_crc_65536_61:
      000033                        213 	.ds 2
      000035                        214 _handle_radio_request_PARM_2:
      000035                        215 	.ds 3
      000038                        216 _handle_radio_request_request_65536_63:
      000038                        217 	.ds 1
      000039                        218 _handle_radio_request_command_131072_66:
      000039                        219 	.ds 9
      000042                        220 _handle_radio_request_value_131072_75:
      000042                        221 	.ds 1
      000043                        222 _handle_radio_request_crc_262144_80:
      000043                        223 	.ds 2
      000045                        224 _handle_radio_request_crc_given_262144_80:
      000045                        225 	.ds 2
      000047                        226 _handle_radio_request_payload_262144_80:
      000047                        227 	.ds 37
      00006C                        228 _handle_radio_request_payload_262144_91:
      00006C                        229 	.ds 37
                                    230 ;--------------------------------------------------------
                                    231 ; absolute external ram data
                                    232 ;--------------------------------------------------------
                                    233 	.area XABS    (ABS,XDATA)
                                    234 ;--------------------------------------------------------
                                    235 ; external initialized ram data
                                    236 ;--------------------------------------------------------
                                    237 	.area XISEG   (XDATA)
      000000                        238 _nordic_bootloader:
      000000                        239 	.ds 2
      000002                        240 _logitech_bootloader:
      000002                        241 	.ds 2
      000004                        242 _promiscuous_address:
      000004                        243 	.ds 2
                                    244 	.area HOME    (CODE)
                                    245 	.area GSINIT0 (CODE)
                                    246 	.area GSINIT1 (CODE)
                                    247 	.area GSINIT2 (CODE)
                                    248 	.area GSINIT3 (CODE)
                                    249 	.area GSINIT4 (CODE)
                                    250 	.area GSINIT5 (CODE)
                                    251 	.area GSINIT  (CODE)
                                    252 	.area GSFINAL (CODE)
                                    253 	.area CSEG    (CODE)
                                    254 ;--------------------------------------------------------
                                    255 ; global & static initialisations
                                    256 ;--------------------------------------------------------
                                    257 	.area HOME    (CODE)
                                    258 	.area GSINIT  (CODE)
                                    259 	.area GSFINAL (CODE)
                                    260 	.area GSINIT  (CODE)
                                    261 ;--------------------------------------------------------
                                    262 ; Home
                                    263 ;--------------------------------------------------------
                                    264 	.area HOME    (CODE)
                                    265 	.area HOME    (CODE)
                                    266 ;--------------------------------------------------------
                                    267 ; code
                                    268 ;--------------------------------------------------------
                                    269 	.area CSEG    (CODE)
                                    270 ;------------------------------------------------------------
                                    271 ;Allocation info for local variables in function 'enter_promiscuous_mode'
                                    272 ;------------------------------------------------------------
                                    273 ;sloc0                     Allocated with name '_enter_promiscuous_mode_sloc0_1_0'
                                    274 ;sloc1                     Allocated with name '_enter_promiscuous_mode_sloc1_1_0'
                                    275 ;prefix_length             Allocated with name '_enter_promiscuous_mode_PARM_2'
                                    276 ;prefix                    Allocated with name '_enter_promiscuous_mode_prefix_65536_34'
                                    277 ;x                         Allocated with name '_enter_promiscuous_mode_x_65536_35'
                                    278 ;address                   Allocated with name '_enter_promiscuous_mode_address_131072_37'
                                    279 ;------------------------------------------------------------
                                    280 ;	src/radio.c:9: void enter_promiscuous_mode(uint8_t * prefix, uint8_t prefix_length)
                                    281 ;	-----------------------------------------
                                    282 ;	 function enter_promiscuous_mode
                                    283 ;	-----------------------------------------
      000000                        284 _enter_promiscuous_mode:
                           000007   285 	ar7 = 0x07
                           000006   286 	ar6 = 0x06
                           000005   287 	ar5 = 0x05
                           000004   288 	ar4 = 0x04
                           000003   289 	ar3 = 0x03
                           000002   290 	ar2 = 0x02
                           000001   291 	ar1 = 0x01
                           000000   292 	ar0 = 0x00
      000000 AF F0            [24]  293 	mov	r7,b
      000002 AE 83            [24]  294 	mov	r6,dph
      000004 E5 82            [12]  295 	mov	a,dpl
      000006 90r00r0B         [24]  296 	mov	dptr,#_enter_promiscuous_mode_prefix_65536_34
      000009 F0               [24]  297 	movx	@dptr,a
      00000A EE               [12]  298 	mov	a,r6
      00000B A3               [24]  299 	inc	dptr
      00000C F0               [24]  300 	movx	@dptr,a
      00000D EF               [12]  301 	mov	a,r7
      00000E A3               [24]  302 	inc	dptr
      00000F F0               [24]  303 	movx	@dptr,a
                                    304 ;	src/radio.c:13: for(x = 0; x < prefix_length; x++) pm_prefix[prefix_length - 1 - x] = prefix[x];
      000010 90r00r0B         [24]  305 	mov	dptr,#_enter_promiscuous_mode_prefix_65536_34
      000013 E0               [24]  306 	movx	a,@dptr
      000014 F5*00            [12]  307 	mov	_enter_promiscuous_mode_sloc0_1_0,a
      000016 A3               [24]  308 	inc	dptr
      000017 E0               [24]  309 	movx	a,@dptr
      000018 F5*01            [12]  310 	mov	(_enter_promiscuous_mode_sloc0_1_0 + 1),a
      00001A A3               [24]  311 	inc	dptr
      00001B E0               [24]  312 	movx	a,@dptr
      00001C F5*02            [12]  313 	mov	(_enter_promiscuous_mode_sloc0_1_0 + 2),a
      00001E 90r00r0A         [24]  314 	mov	dptr,#_enter_promiscuous_mode_PARM_2
      000021 E0               [24]  315 	movx	a,@dptr
      000022 FC               [12]  316 	mov	r4,a
      000023 7A 00            [12]  317 	mov	r2,#0x00
      000025 7B 00            [12]  318 	mov	r3,#0x00
      000027                        319 00109$:
      000027 8C 00            [24]  320 	mov	ar0,r4
      000029 79 00            [12]  321 	mov	r1,#0x00
      00002B C3               [12]  322 	clr	c
      00002C EA               [12]  323 	mov	a,r2
      00002D 98               [12]  324 	subb	a,r0
      00002E EB               [12]  325 	mov	a,r3
      00002F 64 80            [12]  326 	xrl	a,#0x80
      000031 89 F0            [24]  327 	mov	b,r1
      000033 63 F0 80         [24]  328 	xrl	b,#0x80
      000036 95 F0            [12]  329 	subb	a,b
      000038 50 3C            [24]  330 	jnc	00101$
      00003A 8C 07            [24]  331 	mov	ar7,r4
      00003C 1F               [12]  332 	dec	r7
      00003D 8A 06            [24]  333 	mov	ar6,r2
      00003F EF               [12]  334 	mov	a,r7
      000040 C3               [12]  335 	clr	c
      000041 9E               [12]  336 	subb	a,r6
      000042 FF               [12]  337 	mov	r7,a
      000043 33               [12]  338 	rlc	a
      000044 95 E0            [12]  339 	subb	a,acc
      000046 FE               [12]  340 	mov	r6,a
      000047 EF               [12]  341 	mov	a,r7
      000048 24r04            [12]  342 	add	a,#_pm_prefix
      00004A F5*03            [12]  343 	mov	_enter_promiscuous_mode_sloc1_1_0,a
      00004C EE               [12]  344 	mov	a,r6
      00004D 34s00            [12]  345 	addc	a,#(_pm_prefix >> 8)
      00004F F5*04            [12]  346 	mov	(_enter_promiscuous_mode_sloc1_1_0 + 1),a
      000051 C0 04            [24]  347 	push	ar4
      000053 EA               [12]  348 	mov	a,r2
      000054 25*00            [12]  349 	add	a,_enter_promiscuous_mode_sloc0_1_0
      000056 FC               [12]  350 	mov	r4,a
      000057 EB               [12]  351 	mov	a,r3
      000058 35*01            [12]  352 	addc	a,(_enter_promiscuous_mode_sloc0_1_0 + 1)
      00005A FD               [12]  353 	mov	r5,a
      00005B AF*02            [24]  354 	mov	r7,(_enter_promiscuous_mode_sloc0_1_0 + 2)
      00005D 8C 82            [24]  355 	mov	dpl,r4
      00005F 8D 83            [24]  356 	mov	dph,r5
      000061 8F F0            [24]  357 	mov	b,r7
      000063 12r00r00         [24]  358 	lcall	__gptrget
      000066 85*03 82         [24]  359 	mov	dpl,_enter_promiscuous_mode_sloc1_1_0
      000069 85*04 83         [24]  360 	mov	dph,(_enter_promiscuous_mode_sloc1_1_0 + 1)
      00006C F0               [24]  361 	movx	@dptr,a
      00006D 0A               [12]  362 	inc	r2
      00006E BA 00 01         [24]  363 	cjne	r2,#0x00,00143$
      000071 0B               [12]  364 	inc	r3
      000072                        365 00143$:
      000072 D0 04            [24]  366 	pop	ar4
      000074 80 B1            [24]  367 	sjmp	00109$
      000076                        368 00101$:
                                    369 ;	src/radio.c:14: pm_prefix_length = prefix_length > 5 ? 5 : prefix_length;
      000076 EC               [12]  370 	mov	a,r4
      000077 24 FA            [12]  371 	add	a,#0xff - 0x05
      000079 50 06            [24]  372 	jnc	00113$
      00007B 7E 05            [12]  373 	mov	r6,#0x05
      00007D 7F 00            [12]  374 	mov	r7,#0x00
      00007F 80 04            [24]  375 	sjmp	00114$
      000081                        376 00113$:
      000081 88 06            [24]  377 	mov	ar6,r0
      000083 89 07            [24]  378 	mov	ar7,r1
      000085                        379 00114$:
      000085 90r00r02         [24]  380 	mov	dptr,#_pm_prefix_length
      000088 EE               [12]  381 	mov	a,r6
      000089 F0               [24]  382 	movx	@dptr,a
      00008A EF               [12]  383 	mov	a,r7
      00008B A3               [24]  384 	inc	dptr
      00008C F0               [24]  385 	movx	@dptr,a
                                    386 ;	src/radio.c:15: radio_mode = promiscuous;
      00008D 90r00r01         [24]  387 	mov	dptr,#_radio_mode
      000090 74 01            [12]  388 	mov	a,#0x01
      000092 F0               [24]  389 	movx	@dptr,a
                                    390 ;	src/radio.c:16: pm_payload_length = 32;
      000093 90r00r09         [24]  391 	mov	dptr,#_pm_payload_length
      000096 74 20            [12]  392 	mov	a,#0x20
      000098 F0               [24]  393 	movx	@dptr,a
                                    394 ;	src/radio.c:19: rfce = 0;
                                    395 ;	assignBit
      000099 C2 90            [12]  396 	clr	_rfce
                                    397 ;	src/radio.c:22: write_register_byte(EN_RXADDR, ENRX_P0);
      00009B 90r00r2D         [24]  398 	mov	dptr,#_write_register_byte_PARM_2
      00009E 74 01            [12]  399 	mov	a,#0x01
      0000A0 F0               [24]  400 	movx	@dptr,a
      0000A1 75 82 02         [24]  401 	mov	dpl,#0x02
      0000A4 12r04r88         [24]  402 	lcall	_write_register_byte
                                    403 ;	src/radio.c:25: if(pm_prefix_length == 0) configure_address(promiscuous_address, 2);
      0000A7 90r00r02         [24]  404 	mov	dptr,#_pm_prefix_length
      0000AA E0               [24]  405 	movx	a,@dptr
      0000AB FE               [12]  406 	mov	r6,a
      0000AC A3               [24]  407 	inc	dptr
      0000AD E0               [24]  408 	movx	a,@dptr
      0000AE FF               [12]  409 	mov	r7,a
      0000AF 4E               [12]  410 	orl	a,r6
      0000B0 70 11            [24]  411 	jnz	00106$
      0000B2 90r00r18         [24]  412 	mov	dptr,#_configure_address_PARM_2
      0000B5 74 02            [12]  413 	mov	a,#0x02
      0000B7 F0               [24]  414 	movx	@dptr,a
      0000B8 90r00r04         [24]  415 	mov	dptr,#_promiscuous_address
      0000BB 75 F0 00         [24]  416 	mov	b,#0x00
      0000BE 12r02rB6         [24]  417 	lcall	_configure_address
      0000C1 80 4C            [24]  418 	sjmp	00107$
      0000C3                        419 00106$:
                                    420 ;	src/radio.c:28: else if(pm_prefix_length == 1)
      0000C3 BE 01 3B         [24]  421 	cjne	r6,#0x01,00103$
      0000C6 BF 00 38         [24]  422 	cjne	r7,#0x00,00103$
                                    423 ;	src/radio.c:30: uint8_t address[2] = { pm_prefix[0], (pm_prefix[0] & 0x80) == 0x80 ? 0xAA : 0x55 };
      0000C9 90r00r04         [24]  424 	mov	dptr,#_pm_prefix
      0000CC E0               [24]  425 	movx	a,@dptr
      0000CD 90r00r0E         [24]  426 	mov	dptr,#_enter_promiscuous_mode_address_131072_37
      0000D0 F0               [24]  427 	movx	@dptr,a
      0000D1 90r00r04         [24]  428 	mov	dptr,#_pm_prefix
      0000D4 E0               [24]  429 	movx	a,@dptr
      0000D5 FD               [12]  430 	mov	r5,a
      0000D6 53 05 80         [24]  431 	anl	ar5,#0x80
      0000D9 7C 00            [12]  432 	mov	r4,#0x00
      0000DB BD 80 09         [24]  433 	cjne	r5,#0x80,00115$
      0000DE BC 00 06         [24]  434 	cjne	r4,#0x00,00115$
      0000E1 7C AA            [12]  435 	mov	r4,#0xaa
      0000E3 7D 00            [12]  436 	mov	r5,#0x00
      0000E5 80 04            [24]  437 	sjmp	00116$
      0000E7                        438 00115$:
      0000E7 7C 55            [12]  439 	mov	r4,#0x55
      0000E9 7D 00            [12]  440 	mov	r5,#0x00
      0000EB                        441 00116$:
      0000EB 90r00r0F         [24]  442 	mov	dptr,#(_enter_promiscuous_mode_address_131072_37 + 0x0001)
      0000EE EC               [12]  443 	mov	a,r4
      0000EF F0               [24]  444 	movx	@dptr,a
                                    445 ;	src/radio.c:31: configure_address(address, 2);
      0000F0 90r00r18         [24]  446 	mov	dptr,#_configure_address_PARM_2
      0000F3 74 02            [12]  447 	mov	a,#0x02
      0000F5 F0               [24]  448 	movx	@dptr,a
      0000F6 90r00r0E         [24]  449 	mov	dptr,#_enter_promiscuous_mode_address_131072_37
      0000F9 75 F0 00         [24]  450 	mov	b,#0x00
      0000FC 12r02rB6         [24]  451 	lcall	_configure_address
      0000FF 80 0E            [24]  452 	sjmp	00107$
      000101                        453 00103$:
                                    454 ;	src/radio.c:35: else configure_address(pm_prefix, pm_prefix_length);
      000101 90r00r18         [24]  455 	mov	dptr,#_configure_address_PARM_2
      000104 EE               [12]  456 	mov	a,r6
      000105 F0               [24]  457 	movx	@dptr,a
      000106 90r00r04         [24]  458 	mov	dptr,#_pm_prefix
      000109 75 F0 00         [24]  459 	mov	b,#0x00
      00010C 12r02rB6         [24]  460 	lcall	_configure_address
      00010F                        461 00107$:
                                    462 ;	src/radio.c:38: configure_mac(0, 0, ENAA_NONE);
      00010F 90r00r1C         [24]  463 	mov	dptr,#_configure_mac_PARM_2
      000112 E4               [12]  464 	clr	a
      000113 F0               [24]  465 	movx	@dptr,a
      000114 90r00r1D         [24]  466 	mov	dptr,#_configure_mac_PARM_3
      000117 F0               [24]  467 	movx	@dptr,a
      000118 75 82 00         [24]  468 	mov	dpl,#0x00
      00011B 12r03r2F         [24]  469 	lcall	_configure_mac
                                    470 ;	src/radio.c:41: configure_phy(PRIM_RX | PWR_UP, RATE_2M, pm_payload_length);
      00011E 90r00r09         [24]  471 	mov	dptr,#_pm_payload_length
      000121 E0               [24]  472 	movx	a,@dptr
      000122 FF               [12]  473 	mov	r7,a
      000123 90r00r1F         [24]  474 	mov	dptr,#_configure_phy_PARM_2
      000126 74 08            [12]  475 	mov	a,#0x08
      000128 F0               [24]  476 	movx	@dptr,a
      000129 90r00r20         [24]  477 	mov	dptr,#_configure_phy_PARM_3
      00012C EF               [12]  478 	mov	a,r7
      00012D F0               [24]  479 	movx	@dptr,a
      00012E 75 82 03         [24]  480 	mov	dpl,#0x03
      000131 12r03r5C         [24]  481 	lcall	_configure_phy
                                    482 ;	src/radio.c:44: rfce = 1;
                                    483 ;	assignBit
      000134 D2 90            [12]  484 	setb	_rfce
                                    485 ;	src/radio.c:45: in1bc = 0;
      000136 90 C7 B7         [24]  486 	mov	dptr,#0xc7b7
      000139 E4               [12]  487 	clr	a
      00013A F0               [24]  488 	movx	@dptr,a
                                    489 ;	src/radio.c:46: }
      00013B 22               [24]  490 	ret
                                    491 ;------------------------------------------------------------
                                    492 ;Allocation info for local variables in function 'enter_promiscuous_mode_generic'
                                    493 ;------------------------------------------------------------
                                    494 ;sloc0                     Allocated with name '_enter_promiscuous_mode_generic_sloc0_1_0'
                                    495 ;sloc1                     Allocated with name '_enter_promiscuous_mode_generic_sloc1_1_0'
                                    496 ;prefix_length             Allocated with name '_enter_promiscuous_mode_generic_PARM_2'
                                    497 ;rate                      Allocated with name '_enter_promiscuous_mode_generic_PARM_3'
                                    498 ;payload_length            Allocated with name '_enter_promiscuous_mode_generic_PARM_4'
                                    499 ;prefix                    Allocated with name '_enter_promiscuous_mode_generic_prefix_65536_38'
                                    500 ;x                         Allocated with name '_enter_promiscuous_mode_generic_x_65536_39'
                                    501 ;address                   Allocated with name '_enter_promiscuous_mode_generic_address_131072_41'
                                    502 ;------------------------------------------------------------
                                    503 ;	src/radio.c:49: void enter_promiscuous_mode_generic(uint8_t * prefix, uint8_t prefix_length, uint8_t rate, uint8_t payload_length)
                                    504 ;	-----------------------------------------
                                    505 ;	 function enter_promiscuous_mode_generic
                                    506 ;	-----------------------------------------
      00013C                        507 _enter_promiscuous_mode_generic:
      00013C AF F0            [24]  508 	mov	r7,b
      00013E AE 83            [24]  509 	mov	r6,dph
      000140 E5 82            [12]  510 	mov	a,dpl
      000142 90r00r13         [24]  511 	mov	dptr,#_enter_promiscuous_mode_generic_prefix_65536_38
      000145 F0               [24]  512 	movx	@dptr,a
      000146 EE               [12]  513 	mov	a,r6
      000147 A3               [24]  514 	inc	dptr
      000148 F0               [24]  515 	movx	@dptr,a
      000149 EF               [12]  516 	mov	a,r7
      00014A A3               [24]  517 	inc	dptr
      00014B F0               [24]  518 	movx	@dptr,a
                                    519 ;	src/radio.c:53: for(x = 0; x < prefix_length; x++) pm_prefix[prefix_length - 1 - x] = prefix[x];
      00014C 90r00r13         [24]  520 	mov	dptr,#_enter_promiscuous_mode_generic_prefix_65536_38
      00014F E0               [24]  521 	movx	a,@dptr
      000150 F5*05            [12]  522 	mov	_enter_promiscuous_mode_generic_sloc0_1_0,a
      000152 A3               [24]  523 	inc	dptr
      000153 E0               [24]  524 	movx	a,@dptr
      000154 F5*06            [12]  525 	mov	(_enter_promiscuous_mode_generic_sloc0_1_0 + 1),a
      000156 A3               [24]  526 	inc	dptr
      000157 E0               [24]  527 	movx	a,@dptr
      000158 F5*07            [12]  528 	mov	(_enter_promiscuous_mode_generic_sloc0_1_0 + 2),a
      00015A 90r00r10         [24]  529 	mov	dptr,#_enter_promiscuous_mode_generic_PARM_2
      00015D E0               [24]  530 	movx	a,@dptr
      00015E FC               [12]  531 	mov	r4,a
      00015F 7A 00            [12]  532 	mov	r2,#0x00
      000161 7B 00            [12]  533 	mov	r3,#0x00
      000163                        534 00113$:
      000163 8C 00            [24]  535 	mov	ar0,r4
      000165 79 00            [12]  536 	mov	r1,#0x00
      000167 C3               [12]  537 	clr	c
      000168 EA               [12]  538 	mov	a,r2
      000169 98               [12]  539 	subb	a,r0
      00016A EB               [12]  540 	mov	a,r3
      00016B 64 80            [12]  541 	xrl	a,#0x80
      00016D 89 F0            [24]  542 	mov	b,r1
      00016F 63 F0 80         [24]  543 	xrl	b,#0x80
      000172 95 F0            [12]  544 	subb	a,b
      000174 50 3C            [24]  545 	jnc	00101$
      000176 8C 07            [24]  546 	mov	ar7,r4
      000178 1F               [12]  547 	dec	r7
      000179 8A 06            [24]  548 	mov	ar6,r2
      00017B EF               [12]  549 	mov	a,r7
      00017C C3               [12]  550 	clr	c
      00017D 9E               [12]  551 	subb	a,r6
      00017E FF               [12]  552 	mov	r7,a
      00017F 33               [12]  553 	rlc	a
      000180 95 E0            [12]  554 	subb	a,acc
      000182 FE               [12]  555 	mov	r6,a
      000183 EF               [12]  556 	mov	a,r7
      000184 24r04            [12]  557 	add	a,#_pm_prefix
      000186 F5*08            [12]  558 	mov	_enter_promiscuous_mode_generic_sloc1_1_0,a
      000188 EE               [12]  559 	mov	a,r6
      000189 34s00            [12]  560 	addc	a,#(_pm_prefix >> 8)
      00018B F5*09            [12]  561 	mov	(_enter_promiscuous_mode_generic_sloc1_1_0 + 1),a
      00018D C0 04            [24]  562 	push	ar4
      00018F EA               [12]  563 	mov	a,r2
      000190 25*05            [12]  564 	add	a,_enter_promiscuous_mode_generic_sloc0_1_0
      000192 FC               [12]  565 	mov	r4,a
      000193 EB               [12]  566 	mov	a,r3
      000194 35*06            [12]  567 	addc	a,(_enter_promiscuous_mode_generic_sloc0_1_0 + 1)
      000196 FD               [12]  568 	mov	r5,a
      000197 AF*07            [24]  569 	mov	r7,(_enter_promiscuous_mode_generic_sloc0_1_0 + 2)
      000199 8C 82            [24]  570 	mov	dpl,r4
      00019B 8D 83            [24]  571 	mov	dph,r5
      00019D 8F F0            [24]  572 	mov	b,r7
      00019F 12r00r00         [24]  573 	lcall	__gptrget
      0001A2 85*08 82         [24]  574 	mov	dpl,_enter_promiscuous_mode_generic_sloc1_1_0
      0001A5 85*09 83         [24]  575 	mov	dph,(_enter_promiscuous_mode_generic_sloc1_1_0 + 1)
      0001A8 F0               [24]  576 	movx	@dptr,a
      0001A9 0A               [12]  577 	inc	r2
      0001AA BA 00 01         [24]  578 	cjne	r2,#0x00,00155$
      0001AD 0B               [12]  579 	inc	r3
      0001AE                        580 00155$:
      0001AE D0 04            [24]  581 	pop	ar4
      0001B0 80 B1            [24]  582 	sjmp	00113$
      0001B2                        583 00101$:
                                    584 ;	src/radio.c:54: pm_prefix_length = prefix_length > 5 ? 5 : prefix_length;
      0001B2 EC               [12]  585 	mov	a,r4
      0001B3 24 FA            [12]  586 	add	a,#0xff - 0x05
      0001B5 50 06            [24]  587 	jnc	00117$
      0001B7 7E 05            [12]  588 	mov	r6,#0x05
      0001B9 7F 00            [12]  589 	mov	r7,#0x00
      0001BB 80 04            [24]  590 	sjmp	00118$
      0001BD                        591 00117$:
      0001BD 88 06            [24]  592 	mov	ar6,r0
      0001BF 89 07            [24]  593 	mov	ar7,r1
      0001C1                        594 00118$:
      0001C1 90r00r02         [24]  595 	mov	dptr,#_pm_prefix_length
      0001C4 EE               [12]  596 	mov	a,r6
      0001C5 F0               [24]  597 	movx	@dptr,a
      0001C6 EF               [12]  598 	mov	a,r7
      0001C7 A3               [24]  599 	inc	dptr
      0001C8 F0               [24]  600 	movx	@dptr,a
                                    601 ;	src/radio.c:55: radio_mode = promiscuous_generic;
      0001C9 90r00r01         [24]  602 	mov	dptr,#_radio_mode
      0001CC 74 02            [12]  603 	mov	a,#0x02
      0001CE F0               [24]  604 	movx	@dptr,a
                                    605 ;	src/radio.c:56: pm_payload_length = payload_length;
      0001CF 90r00r12         [24]  606 	mov	dptr,#_enter_promiscuous_mode_generic_PARM_4
      0001D2 E0               [24]  607 	movx	a,@dptr
      0001D3 90r00r09         [24]  608 	mov	dptr,#_pm_payload_length
      0001D6 F0               [24]  609 	movx	@dptr,a
                                    610 ;	src/radio.c:59: rfce = 0;
                                    611 ;	assignBit
      0001D7 C2 90            [12]  612 	clr	_rfce
                                    613 ;	src/radio.c:62: write_register_byte(EN_RXADDR, ENRX_P0);
      0001D9 90r00r2D         [24]  614 	mov	dptr,#_write_register_byte_PARM_2
      0001DC 74 01            [12]  615 	mov	a,#0x01
      0001DE F0               [24]  616 	movx	@dptr,a
      0001DF 75 82 02         [24]  617 	mov	dpl,#0x02
      0001E2 12r04r88         [24]  618 	lcall	_write_register_byte
                                    619 ;	src/radio.c:65: if(pm_prefix_length == 0) configure_address(promiscuous_address, 2);
      0001E5 90r00r02         [24]  620 	mov	dptr,#_pm_prefix_length
      0001E8 E0               [24]  621 	movx	a,@dptr
      0001E9 FE               [12]  622 	mov	r6,a
      0001EA A3               [24]  623 	inc	dptr
      0001EB E0               [24]  624 	movx	a,@dptr
      0001EC FF               [12]  625 	mov	r7,a
      0001ED 4E               [12]  626 	orl	a,r6
      0001EE 70 11            [24]  627 	jnz	00106$
      0001F0 90r00r18         [24]  628 	mov	dptr,#_configure_address_PARM_2
      0001F3 74 02            [12]  629 	mov	a,#0x02
      0001F5 F0               [24]  630 	movx	@dptr,a
      0001F6 90r00r04         [24]  631 	mov	dptr,#_promiscuous_address
      0001F9 75 F0 00         [24]  632 	mov	b,#0x00
      0001FC 12r02rB6         [24]  633 	lcall	_configure_address
      0001FF 80 4C            [24]  634 	sjmp	00107$
      000201                        635 00106$:
                                    636 ;	src/radio.c:68: else if(pm_prefix_length == 1)
      000201 BE 01 3B         [24]  637 	cjne	r6,#0x01,00103$
      000204 BF 00 38         [24]  638 	cjne	r7,#0x00,00103$
                                    639 ;	src/radio.c:70: uint8_t address[2] = { pm_prefix[0], (pm_prefix[0] & 0x80) == 0x80 ? 0xAA : 0x55 };
      000207 90r00r04         [24]  640 	mov	dptr,#_pm_prefix
      00020A E0               [24]  641 	movx	a,@dptr
      00020B 90r00r16         [24]  642 	mov	dptr,#_enter_promiscuous_mode_generic_address_131072_41
      00020E F0               [24]  643 	movx	@dptr,a
      00020F 90r00r04         [24]  644 	mov	dptr,#_pm_prefix
      000212 E0               [24]  645 	movx	a,@dptr
      000213 FD               [12]  646 	mov	r5,a
      000214 53 05 80         [24]  647 	anl	ar5,#0x80
      000217 7C 00            [12]  648 	mov	r4,#0x00
      000219 BD 80 09         [24]  649 	cjne	r5,#0x80,00119$
      00021C BC 00 06         [24]  650 	cjne	r4,#0x00,00119$
      00021F 7C AA            [12]  651 	mov	r4,#0xaa
      000221 7D 00            [12]  652 	mov	r5,#0x00
      000223 80 04            [24]  653 	sjmp	00120$
      000225                        654 00119$:
      000225 7C 55            [12]  655 	mov	r4,#0x55
      000227 7D 00            [12]  656 	mov	r5,#0x00
      000229                        657 00120$:
      000229 90r00r17         [24]  658 	mov	dptr,#(_enter_promiscuous_mode_generic_address_131072_41 + 0x0001)
      00022C EC               [12]  659 	mov	a,r4
      00022D F0               [24]  660 	movx	@dptr,a
                                    661 ;	src/radio.c:71: configure_address(address, 2);
      00022E 90r00r18         [24]  662 	mov	dptr,#_configure_address_PARM_2
      000231 74 02            [12]  663 	mov	a,#0x02
      000233 F0               [24]  664 	movx	@dptr,a
      000234 90r00r16         [24]  665 	mov	dptr,#_enter_promiscuous_mode_generic_address_131072_41
      000237 75 F0 00         [24]  666 	mov	b,#0x00
      00023A 12r02rB6         [24]  667 	lcall	_configure_address
      00023D 80 0E            [24]  668 	sjmp	00107$
      00023F                        669 00103$:
                                    670 ;	src/radio.c:75: else configure_address(pm_prefix, pm_prefix_length);
      00023F 90r00r18         [24]  671 	mov	dptr,#_configure_address_PARM_2
      000242 EE               [12]  672 	mov	a,r6
      000243 F0               [24]  673 	movx	@dptr,a
      000244 90r00r04         [24]  674 	mov	dptr,#_pm_prefix
      000247 75 F0 00         [24]  675 	mov	b,#0x00
      00024A 12r02rB6         [24]  676 	lcall	_configure_address
      00024D                        677 00107$:
                                    678 ;	src/radio.c:78: configure_mac(0, 0, ENAA_NONE);
      00024D 90r00r1C         [24]  679 	mov	dptr,#_configure_mac_PARM_2
      000250 E4               [12]  680 	clr	a
      000251 F0               [24]  681 	movx	@dptr,a
      000252 90r00r1D         [24]  682 	mov	dptr,#_configure_mac_PARM_3
      000255 F0               [24]  683 	movx	@dptr,a
      000256 75 82 00         [24]  684 	mov	dpl,#0x00
      000259 12r03r2F         [24]  685 	lcall	_configure_mac
                                    686 ;	src/radio.c:81: switch(rate)
      00025C 90r00r11         [24]  687 	mov	dptr,#_enter_promiscuous_mode_generic_PARM_3
      00025F E0               [24]  688 	movx	a,@dptr
      000260 FF               [12]  689 	mov	r7,a
      000261 60 05            [24]  690 	jz	00108$
                                    691 ;	src/radio.c:83: case 0:  configure_phy(PRIM_RX | PWR_UP, RF_PWR_4 | RATE_250K, pm_payload_length); break;
      000263 BF 01 32         [24]  692 	cjne	r7,#0x01,00110$
      000266 80 18            [24]  693 	sjmp	00109$
      000268                        694 00108$:
      000268 90r00r09         [24]  695 	mov	dptr,#_pm_payload_length
      00026B E0               [24]  696 	movx	a,@dptr
      00026C FF               [12]  697 	mov	r7,a
      00026D 90r00r1F         [24]  698 	mov	dptr,#_configure_phy_PARM_2
      000270 74 26            [12]  699 	mov	a,#0x26
      000272 F0               [24]  700 	movx	@dptr,a
      000273 90r00r20         [24]  701 	mov	dptr,#_configure_phy_PARM_3
      000276 EF               [12]  702 	mov	a,r7
      000277 F0               [24]  703 	movx	@dptr,a
      000278 75 82 03         [24]  704 	mov	dpl,#0x03
      00027B 12r03r5C         [24]  705 	lcall	_configure_phy
                                    706 ;	src/radio.c:84: case 1:  configure_phy(PRIM_RX | PWR_UP, RF_PWR_4 | RATE_1M, pm_payload_length); break;
      00027E 80 2E            [24]  707 	sjmp	00111$
      000280                        708 00109$:
      000280 90r00r09         [24]  709 	mov	dptr,#_pm_payload_length
      000283 E0               [24]  710 	movx	a,@dptr
      000284 FF               [12]  711 	mov	r7,a
      000285 90r00r1F         [24]  712 	mov	dptr,#_configure_phy_PARM_2
      000288 74 06            [12]  713 	mov	a,#0x06
      00028A F0               [24]  714 	movx	@dptr,a
      00028B 90r00r20         [24]  715 	mov	dptr,#_configure_phy_PARM_3
      00028E EF               [12]  716 	mov	a,r7
      00028F F0               [24]  717 	movx	@dptr,a
      000290 75 82 03         [24]  718 	mov	dpl,#0x03
      000293 12r03r5C         [24]  719 	lcall	_configure_phy
                                    720 ;	src/radio.c:85: default: configure_phy(PRIM_RX | PWR_UP, RF_PWR_4 | RATE_2M, pm_payload_length); break;
      000296 80 16            [24]  721 	sjmp	00111$
      000298                        722 00110$:
      000298 90r00r09         [24]  723 	mov	dptr,#_pm_payload_length
      00029B E0               [24]  724 	movx	a,@dptr
      00029C FF               [12]  725 	mov	r7,a
      00029D 90r00r1F         [24]  726 	mov	dptr,#_configure_phy_PARM_2
      0002A0 74 0E            [12]  727 	mov	a,#0x0e
      0002A2 F0               [24]  728 	movx	@dptr,a
      0002A3 90r00r20         [24]  729 	mov	dptr,#_configure_phy_PARM_3
      0002A6 EF               [12]  730 	mov	a,r7
      0002A7 F0               [24]  731 	movx	@dptr,a
      0002A8 75 82 03         [24]  732 	mov	dpl,#0x03
      0002AB 12r03r5C         [24]  733 	lcall	_configure_phy
                                    734 ;	src/radio.c:86: }
      0002AE                        735 00111$:
                                    736 ;	src/radio.c:89: rfce = 1;
                                    737 ;	assignBit
      0002AE D2 90            [12]  738 	setb	_rfce
                                    739 ;	src/radio.c:90: in1bc = 0;
      0002B0 90 C7 B7         [24]  740 	mov	dptr,#0xc7b7
      0002B3 E4               [12]  741 	clr	a
      0002B4 F0               [24]  742 	movx	@dptr,a
                                    743 ;	src/radio.c:91: }
      0002B5 22               [24]  744 	ret
                                    745 ;------------------------------------------------------------
                                    746 ;Allocation info for local variables in function 'configure_address'
                                    747 ;------------------------------------------------------------
                                    748 ;length                    Allocated with name '_configure_address_PARM_2'
                                    749 ;address                   Allocated with name '_configure_address_address_65536_43'
                                    750 ;------------------------------------------------------------
                                    751 ;	src/radio.c:94: void configure_address(uint8_t * address, uint8_t length)
                                    752 ;	-----------------------------------------
                                    753 ;	 function configure_address
                                    754 ;	-----------------------------------------
      0002B6                        755 _configure_address:
      0002B6 AF F0            [24]  756 	mov	r7,b
      0002B8 AE 83            [24]  757 	mov	r6,dph
      0002BA E5 82            [12]  758 	mov	a,dpl
      0002BC 90r00r19         [24]  759 	mov	dptr,#_configure_address_address_65536_43
      0002BF F0               [24]  760 	movx	@dptr,a
      0002C0 EE               [12]  761 	mov	a,r6
      0002C1 A3               [24]  762 	inc	dptr
      0002C2 F0               [24]  763 	movx	@dptr,a
      0002C3 EF               [12]  764 	mov	a,r7
      0002C4 A3               [24]  765 	inc	dptr
      0002C5 F0               [24]  766 	movx	@dptr,a
                                    767 ;	src/radio.c:96: write_register_byte(EN_RXADDR, ENRX_P0);
      0002C6 90r00r2D         [24]  768 	mov	dptr,#_write_register_byte_PARM_2
      0002C9 74 01            [12]  769 	mov	a,#0x01
      0002CB F0               [24]  770 	movx	@dptr,a
      0002CC 75 82 02         [24]  771 	mov	dpl,#0x02
      0002CF 12r04r88         [24]  772 	lcall	_write_register_byte
                                    773 ;	src/radio.c:97: write_register_byte(SETUP_AW, length - 2);
      0002D2 90r00r18         [24]  774 	mov	dptr,#_configure_address_PARM_2
      0002D5 E0               [24]  775 	movx	a,@dptr
      0002D6 FF               [12]  776 	mov	r7,a
      0002D7 FE               [12]  777 	mov	r6,a
      0002D8 1E               [12]  778 	dec	r6
      0002D9 1E               [12]  779 	dec	r6
      0002DA 90r00r2D         [24]  780 	mov	dptr,#_write_register_byte_PARM_2
      0002DD EE               [12]  781 	mov	a,r6
      0002DE F0               [24]  782 	movx	@dptr,a
      0002DF 75 82 03         [24]  783 	mov	dpl,#0x03
      0002E2 C0 07            [24]  784 	push	ar7
      0002E4 12r04r88         [24]  785 	lcall	_write_register_byte
      0002E7 D0 07            [24]  786 	pop	ar7
                                    787 ;	src/radio.c:98: write_register(TX_ADDR, address, length);
      0002E9 90r00r19         [24]  788 	mov	dptr,#_configure_address_address_65536_43
      0002EC E0               [24]  789 	movx	a,@dptr
      0002ED FC               [12]  790 	mov	r4,a
      0002EE A3               [24]  791 	inc	dptr
      0002EF E0               [24]  792 	movx	a,@dptr
      0002F0 FD               [12]  793 	mov	r5,a
      0002F1 A3               [24]  794 	inc	dptr
      0002F2 E0               [24]  795 	movx	a,@dptr
      0002F3 FE               [12]  796 	mov	r6,a
      0002F4 90r00r23         [24]  797 	mov	dptr,#_spi_write_PARM_2
      0002F7 EC               [12]  798 	mov	a,r4
      0002F8 F0               [24]  799 	movx	@dptr,a
      0002F9 ED               [12]  800 	mov	a,r5
      0002FA A3               [24]  801 	inc	dptr
      0002FB F0               [24]  802 	movx	@dptr,a
      0002FC EE               [12]  803 	mov	a,r6
      0002FD A3               [24]  804 	inc	dptr
      0002FE F0               [24]  805 	movx	@dptr,a
      0002FF 90r00r26         [24]  806 	mov	dptr,#_spi_write_PARM_3
      000302 EF               [12]  807 	mov	a,r7
      000303 F0               [24]  808 	movx	@dptr,a
      000304 75 82 30         [24]  809 	mov	dpl,#0x30
      000307 C0 07            [24]  810 	push	ar7
      000309 12r03r9B         [24]  811 	lcall	_spi_write
      00030C D0 07            [24]  812 	pop	ar7
                                    813 ;	src/radio.c:99: write_register(RX_ADDR_P0, address, length);
      00030E 90r00r19         [24]  814 	mov	dptr,#_configure_address_address_65536_43
      000311 E0               [24]  815 	movx	a,@dptr
      000312 FC               [12]  816 	mov	r4,a
      000313 A3               [24]  817 	inc	dptr
      000314 E0               [24]  818 	movx	a,@dptr
      000315 FD               [12]  819 	mov	r5,a
      000316 A3               [24]  820 	inc	dptr
      000317 E0               [24]  821 	movx	a,@dptr
      000318 FE               [12]  822 	mov	r6,a
      000319 90r00r23         [24]  823 	mov	dptr,#_spi_write_PARM_2
      00031C EC               [12]  824 	mov	a,r4
      00031D F0               [24]  825 	movx	@dptr,a
      00031E ED               [12]  826 	mov	a,r5
      00031F A3               [24]  827 	inc	dptr
      000320 F0               [24]  828 	movx	@dptr,a
      000321 EE               [12]  829 	mov	a,r6
      000322 A3               [24]  830 	inc	dptr
      000323 F0               [24]  831 	movx	@dptr,a
      000324 90r00r26         [24]  832 	mov	dptr,#_spi_write_PARM_3
      000327 EF               [12]  833 	mov	a,r7
      000328 F0               [24]  834 	movx	@dptr,a
      000329 75 82 2A         [24]  835 	mov	dpl,#0x2a
                                    836 ;	src/radio.c:100: }
      00032C 02r03r9B         [24]  837 	ljmp	_spi_write
                                    838 ;------------------------------------------------------------
                                    839 ;Allocation info for local variables in function 'configure_mac'
                                    840 ;------------------------------------------------------------
                                    841 ;dynpd                     Allocated with name '_configure_mac_PARM_2'
                                    842 ;en_aa                     Allocated with name '_configure_mac_PARM_3'
                                    843 ;feature                   Allocated with name '_configure_mac_feature_65536_45'
                                    844 ;------------------------------------------------------------
                                    845 ;	src/radio.c:103: void configure_mac(uint8_t feature, uint8_t dynpd, uint8_t en_aa)
                                    846 ;	-----------------------------------------
                                    847 ;	 function configure_mac
                                    848 ;	-----------------------------------------
      00032F                        849 _configure_mac:
      00032F E5 82            [12]  850 	mov	a,dpl
      000331 90r00r1E         [24]  851 	mov	dptr,#_configure_mac_feature_65536_45
      000334 F0               [24]  852 	movx	@dptr,a
                                    853 ;	src/radio.c:105: write_register_byte(FEATURE, feature);
      000335 E0               [24]  854 	movx	a,@dptr
      000336 90r00r2D         [24]  855 	mov	dptr,#_write_register_byte_PARM_2
      000339 F0               [24]  856 	movx	@dptr,a
      00033A 75 82 1D         [24]  857 	mov	dpl,#0x1d
      00033D 12r04r88         [24]  858 	lcall	_write_register_byte
                                    859 ;	src/radio.c:106: write_register_byte(DYNPD, dynpd);
      000340 90r00r1C         [24]  860 	mov	dptr,#_configure_mac_PARM_2
      000343 E0               [24]  861 	movx	a,@dptr
      000344 90r00r2D         [24]  862 	mov	dptr,#_write_register_byte_PARM_2
      000347 F0               [24]  863 	movx	@dptr,a
      000348 75 82 1C         [24]  864 	mov	dpl,#0x1c
      00034B 12r04r88         [24]  865 	lcall	_write_register_byte
                                    866 ;	src/radio.c:107: write_register_byte(EN_AA, en_aa);
      00034E 90r00r1D         [24]  867 	mov	dptr,#_configure_mac_PARM_3
      000351 E0               [24]  868 	movx	a,@dptr
      000352 90r00r2D         [24]  869 	mov	dptr,#_write_register_byte_PARM_2
      000355 F0               [24]  870 	movx	@dptr,a
      000356 75 82 01         [24]  871 	mov	dpl,#0x01
                                    872 ;	src/radio.c:108: }
      000359 02r04r88         [24]  873 	ljmp	_write_register_byte
                                    874 ;------------------------------------------------------------
                                    875 ;Allocation info for local variables in function 'configure_phy'
                                    876 ;------------------------------------------------------------
                                    877 ;rf_setup                  Allocated with name '_configure_phy_PARM_2'
                                    878 ;rx_pw                     Allocated with name '_configure_phy_PARM_3'
                                    879 ;config                    Allocated with name '_configure_phy_config_65536_47'
                                    880 ;------------------------------------------------------------
                                    881 ;	src/radio.c:111: void configure_phy(uint8_t config, uint8_t rf_setup, uint8_t rx_pw)
                                    882 ;	-----------------------------------------
                                    883 ;	 function configure_phy
                                    884 ;	-----------------------------------------
      00035C                        885 _configure_phy:
      00035C E5 82            [12]  886 	mov	a,dpl
      00035E 90r00r21         [24]  887 	mov	dptr,#_configure_phy_config_65536_47
      000361 F0               [24]  888 	movx	@dptr,a
                                    889 ;	src/radio.c:113: write_register_byte(CONFIG, config);
      000362 E0               [24]  890 	movx	a,@dptr
      000363 90r00r2D         [24]  891 	mov	dptr,#_write_register_byte_PARM_2
      000366 F0               [24]  892 	movx	@dptr,a
      000367 75 82 00         [24]  893 	mov	dpl,#0x00
      00036A 12r04r88         [24]  894 	lcall	_write_register_byte
                                    895 ;	src/radio.c:114: write_register_byte(RF_SETUP, rf_setup);
      00036D 90r00r1F         [24]  896 	mov	dptr,#_configure_phy_PARM_2
      000370 E0               [24]  897 	movx	a,@dptr
      000371 90r00r2D         [24]  898 	mov	dptr,#_write_register_byte_PARM_2
      000374 F0               [24]  899 	movx	@dptr,a
      000375 75 82 06         [24]  900 	mov	dpl,#0x06
      000378 12r04r88         [24]  901 	lcall	_write_register_byte
                                    902 ;	src/radio.c:115: write_register_byte(RX_PW_P0, rx_pw);
      00037B 90r00r20         [24]  903 	mov	dptr,#_configure_phy_PARM_3
      00037E E0               [24]  904 	movx	a,@dptr
      00037F 90r00r2D         [24]  905 	mov	dptr,#_write_register_byte_PARM_2
      000382 F0               [24]  906 	movx	@dptr,a
      000383 75 82 11         [24]  907 	mov	dpl,#0x11
                                    908 ;	src/radio.c:116: }
      000386 02r04r88         [24]  909 	ljmp	_write_register_byte
                                    910 ;------------------------------------------------------------
                                    911 ;Allocation info for local variables in function 'spi_transfer'
                                    912 ;------------------------------------------------------------
                                    913 ;byte                      Allocated with name '_spi_transfer_byte_65536_49'
                                    914 ;------------------------------------------------------------
                                    915 ;	src/radio.c:119: uint8_t spi_transfer(uint8_t byte)
                                    916 ;	-----------------------------------------
                                    917 ;	 function spi_transfer
                                    918 ;	-----------------------------------------
      000389                        919 _spi_transfer:
      000389 E5 82            [12]  920 	mov	a,dpl
      00038B 90r00r22         [24]  921 	mov	dptr,#_spi_transfer_byte_65536_49
      00038E F0               [24]  922 	movx	@dptr,a
                                    923 ;	src/radio.c:121: RFDAT = byte;
      00038F E0               [24]  924 	movx	a,@dptr
      000390 F5 E5            [12]  925 	mov	_RFDAT,a
                                    926 ;	src/radio.c:122: RFRDY = 0;
                                    927 ;	assignBit
      000392 C2 C0            [12]  928 	clr	_RFRDY
                                    929 ;	src/radio.c:123: while(!RFRDY);
      000394                        930 00101$:
      000394 30 C0 FD         [24]  931 	jnb	_RFRDY,00101$
                                    932 ;	src/radio.c:124: return RFDAT;
      000397 85 E5 82         [24]  933 	mov	dpl,_RFDAT
                                    934 ;	src/radio.c:125: }
      00039A 22               [24]  935 	ret
                                    936 ;------------------------------------------------------------
                                    937 ;Allocation info for local variables in function 'spi_write'
                                    938 ;------------------------------------------------------------
                                    939 ;buffer                    Allocated with name '_spi_write_PARM_2'
                                    940 ;length                    Allocated with name '_spi_write_PARM_3'
                                    941 ;command                   Allocated with name '_spi_write_command_65536_51'
                                    942 ;x                         Allocated with name '_spi_write_x_65536_52'
                                    943 ;------------------------------------------------------------
                                    944 ;	src/radio.c:128: void spi_write(uint8_t command, uint8_t * buffer, uint8_t length)
                                    945 ;	-----------------------------------------
                                    946 ;	 function spi_write
                                    947 ;	-----------------------------------------
      00039B                        948 _spi_write:
      00039B E5 82            [12]  949 	mov	a,dpl
      00039D 90r00r27         [24]  950 	mov	dptr,#_spi_write_command_65536_51
      0003A0 F0               [24]  951 	movx	@dptr,a
                                    952 ;	src/radio.c:131: rfcsn = 0;
                                    953 ;	assignBit
      0003A1 C2 91            [12]  954 	clr	_rfcsn
                                    955 ;	src/radio.c:132: spi_transfer(command);
      0003A3 90r00r27         [24]  956 	mov	dptr,#_spi_write_command_65536_51
      0003A6 E0               [24]  957 	movx	a,@dptr
      0003A7 F5 82            [12]  958 	mov	dpl,a
      0003A9 12r03r89         [24]  959 	lcall	_spi_transfer
                                    960 ;	src/radio.c:133: for(x = 0; x < length; x++) spi_transfer(buffer[x]);
      0003AC 90r00r23         [24]  961 	mov	dptr,#_spi_write_PARM_2
      0003AF E0               [24]  962 	movx	a,@dptr
      0003B0 FD               [12]  963 	mov	r5,a
      0003B1 A3               [24]  964 	inc	dptr
      0003B2 E0               [24]  965 	movx	a,@dptr
      0003B3 FE               [12]  966 	mov	r6,a
      0003B4 A3               [24]  967 	inc	dptr
      0003B5 E0               [24]  968 	movx	a,@dptr
      0003B6 FF               [12]  969 	mov	r7,a
      0003B7 90r00r26         [24]  970 	mov	dptr,#_spi_write_PARM_3
      0003BA E0               [24]  971 	movx	a,@dptr
      0003BB FC               [12]  972 	mov	r4,a
      0003BC 7A 00            [12]  973 	mov	r2,#0x00
      0003BE 7B 00            [12]  974 	mov	r3,#0x00
      0003C0                        975 00103$:
      0003C0 8C 00            [24]  976 	mov	ar0,r4
      0003C2 79 00            [12]  977 	mov	r1,#0x00
      0003C4 C3               [12]  978 	clr	c
      0003C5 EA               [12]  979 	mov	a,r2
      0003C6 98               [12]  980 	subb	a,r0
      0003C7 EB               [12]  981 	mov	a,r3
      0003C8 64 80            [12]  982 	xrl	a,#0x80
      0003CA 89 F0            [24]  983 	mov	b,r1
      0003CC 63 F0 80         [24]  984 	xrl	b,#0x80
      0003CF 95 F0            [12]  985 	subb	a,b
      0003D1 50 39            [24]  986 	jnc	00101$
      0003D3 C0 04            [24]  987 	push	ar4
      0003D5 EA               [12]  988 	mov	a,r2
      0003D6 2D               [12]  989 	add	a,r5
      0003D7 F8               [12]  990 	mov	r0,a
      0003D8 EB               [12]  991 	mov	a,r3
      0003D9 3E               [12]  992 	addc	a,r6
      0003DA F9               [12]  993 	mov	r1,a
      0003DB 8F 04            [24]  994 	mov	ar4,r7
      0003DD 88 82            [24]  995 	mov	dpl,r0
      0003DF 89 83            [24]  996 	mov	dph,r1
      0003E1 8C F0            [24]  997 	mov	b,r4
      0003E3 12r00r00         [24]  998 	lcall	__gptrget
      0003E6 F5 82            [12]  999 	mov	dpl,a
      0003E8 C0 07            [24] 1000 	push	ar7
      0003EA C0 06            [24] 1001 	push	ar6
      0003EC C0 05            [24] 1002 	push	ar5
      0003EE C0 04            [24] 1003 	push	ar4
      0003F0 C0 03            [24] 1004 	push	ar3
      0003F2 C0 02            [24] 1005 	push	ar2
      0003F4 12r03r89         [24] 1006 	lcall	_spi_transfer
      0003F7 D0 02            [24] 1007 	pop	ar2
      0003F9 D0 03            [24] 1008 	pop	ar3
      0003FB D0 04            [24] 1009 	pop	ar4
      0003FD D0 05            [24] 1010 	pop	ar5
      0003FF D0 06            [24] 1011 	pop	ar6
      000401 D0 07            [24] 1012 	pop	ar7
      000403 0A               [12] 1013 	inc	r2
      000404 BA 00 01         [24] 1014 	cjne	r2,#0x00,00117$
      000407 0B               [12] 1015 	inc	r3
      000408                       1016 00117$:
      000408 D0 04            [24] 1017 	pop	ar4
      00040A 80 B4            [24] 1018 	sjmp	00103$
      00040C                       1019 00101$:
                                   1020 ;	src/radio.c:134: rfcsn = 1;
                                   1021 ;	assignBit
      00040C D2 91            [12] 1022 	setb	_rfcsn
                                   1023 ;	src/radio.c:135: }
      00040E 22               [24] 1024 	ret
                                   1025 ;------------------------------------------------------------
                                   1026 ;Allocation info for local variables in function 'spi_read'
                                   1027 ;------------------------------------------------------------
                                   1028 ;sloc0                     Allocated with name '_spi_read_sloc0_1_0'
                                   1029 ;buffer                    Allocated with name '_spi_read_PARM_2'
                                   1030 ;length                    Allocated with name '_spi_read_PARM_3'
                                   1031 ;command                   Allocated with name '_spi_read_command_65536_54'
                                   1032 ;x                         Allocated with name '_spi_read_x_65536_55'
                                   1033 ;------------------------------------------------------------
                                   1034 ;	src/radio.c:138: void spi_read(uint8_t command, uint8_t * buffer, uint8_t length)
                                   1035 ;	-----------------------------------------
                                   1036 ;	 function spi_read
                                   1037 ;	-----------------------------------------
      00040F                       1038 _spi_read:
      00040F E5 82            [12] 1039 	mov	a,dpl
      000411 90r00r2C         [24] 1040 	mov	dptr,#_spi_read_command_65536_54
      000414 F0               [24] 1041 	movx	@dptr,a
                                   1042 ;	src/radio.c:141: rfcsn = 0;
                                   1043 ;	assignBit
      000415 C2 91            [12] 1044 	clr	_rfcsn
                                   1045 ;	src/radio.c:142: spi_transfer(command);
      000417 90r00r2C         [24] 1046 	mov	dptr,#_spi_read_command_65536_54
      00041A E0               [24] 1047 	movx	a,@dptr
      00041B F5 82            [12] 1048 	mov	dpl,a
      00041D 12r03r89         [24] 1049 	lcall	_spi_transfer
                                   1050 ;	src/radio.c:143: for(x = 0; x < length; x++) buffer[x] = spi_transfer(0xFF);
      000420 90r00r28         [24] 1051 	mov	dptr,#_spi_read_PARM_2
      000423 E0               [24] 1052 	movx	a,@dptr
      000424 FD               [12] 1053 	mov	r5,a
      000425 A3               [24] 1054 	inc	dptr
      000426 E0               [24] 1055 	movx	a,@dptr
      000427 FE               [12] 1056 	mov	r6,a
      000428 A3               [24] 1057 	inc	dptr
      000429 E0               [24] 1058 	movx	a,@dptr
      00042A FF               [12] 1059 	mov	r7,a
      00042B 90r00r2B         [24] 1060 	mov	dptr,#_spi_read_PARM_3
      00042E E0               [24] 1061 	movx	a,@dptr
      00042F FC               [12] 1062 	mov	r4,a
      000430 7A 00            [12] 1063 	mov	r2,#0x00
      000432 7B 00            [12] 1064 	mov	r3,#0x00
      000434                       1065 00103$:
      000434 8C 00            [24] 1066 	mov	ar0,r4
      000436 79 00            [12] 1067 	mov	r1,#0x00
      000438 C3               [12] 1068 	clr	c
      000439 EA               [12] 1069 	mov	a,r2
      00043A 98               [12] 1070 	subb	a,r0
      00043B EB               [12] 1071 	mov	a,r3
      00043C 64 80            [12] 1072 	xrl	a,#0x80
      00043E 89 F0            [24] 1073 	mov	b,r1
      000440 63 F0 80         [24] 1074 	xrl	b,#0x80
      000443 95 F0            [12] 1075 	subb	a,b
      000445 50 3E            [24] 1076 	jnc	00101$
      000447 C0 04            [24] 1077 	push	ar4
      000449 EA               [12] 1078 	mov	a,r2
      00044A 2D               [12] 1079 	add	a,r5
      00044B F5*0A            [12] 1080 	mov	_spi_read_sloc0_1_0,a
      00044D EB               [12] 1081 	mov	a,r3
      00044E 3E               [12] 1082 	addc	a,r6
      00044F F5*0B            [12] 1083 	mov	(_spi_read_sloc0_1_0 + 1),a
      000451 8F*0C            [24] 1084 	mov	(_spi_read_sloc0_1_0 + 2),r7
      000453 75 82 FF         [24] 1085 	mov	dpl,#0xff
      000456 C0 07            [24] 1086 	push	ar7
      000458 C0 06            [24] 1087 	push	ar6
      00045A C0 05            [24] 1088 	push	ar5
      00045C C0 03            [24] 1089 	push	ar3
      00045E C0 02            [24] 1090 	push	ar2
      000460 12r03r89         [24] 1091 	lcall	_spi_transfer
      000463 AC 82            [24] 1092 	mov	r4,dpl
      000465 D0 02            [24] 1093 	pop	ar2
      000467 D0 03            [24] 1094 	pop	ar3
      000469 D0 05            [24] 1095 	pop	ar5
      00046B D0 06            [24] 1096 	pop	ar6
      00046D D0 07            [24] 1097 	pop	ar7
      00046F 85*0A 82         [24] 1098 	mov	dpl,_spi_read_sloc0_1_0
      000472 85*0B 83         [24] 1099 	mov	dph,(_spi_read_sloc0_1_0 + 1)
      000475 85*0C F0         [24] 1100 	mov	b,(_spi_read_sloc0_1_0 + 2)
      000478 EC               [12] 1101 	mov	a,r4
      000479 12r00r00         [24] 1102 	lcall	__gptrput
      00047C 0A               [12] 1103 	inc	r2
      00047D BA 00 01         [24] 1104 	cjne	r2,#0x00,00117$
      000480 0B               [12] 1105 	inc	r3
      000481                       1106 00117$:
      000481 D0 04            [24] 1107 	pop	ar4
      000483 80 AF            [24] 1108 	sjmp	00103$
      000485                       1109 00101$:
                                   1110 ;	src/radio.c:144: rfcsn = 1;
                                   1111 ;	assignBit
      000485 D2 91            [12] 1112 	setb	_rfcsn
                                   1113 ;	src/radio.c:145: }
      000487 22               [24] 1114 	ret
                                   1115 ;------------------------------------------------------------
                                   1116 ;Allocation info for local variables in function 'write_register_byte'
                                   1117 ;------------------------------------------------------------
                                   1118 ;byte                      Allocated with name '_write_register_byte_PARM_2'
                                   1119 ;reg                       Allocated with name '_write_register_byte_reg_65536_57'
                                   1120 ;------------------------------------------------------------
                                   1121 ;	src/radio.c:148: void write_register_byte(uint8_t reg, uint8_t byte)
                                   1122 ;	-----------------------------------------
                                   1123 ;	 function write_register_byte
                                   1124 ;	-----------------------------------------
      000488                       1125 _write_register_byte:
      000488 E5 82            [12] 1126 	mov	a,dpl
      00048A 90r00r2E         [24] 1127 	mov	dptr,#_write_register_byte_reg_65536_57
      00048D F0               [24] 1128 	movx	@dptr,a
                                   1129 ;	src/radio.c:150: write_register(reg, &byte, 1);
      00048E E0               [24] 1130 	movx	a,@dptr
      00048F FF               [12] 1131 	mov	r7,a
      000490 43 07 20         [24] 1132 	orl	ar7,#0x20
      000493 90r00r23         [24] 1133 	mov	dptr,#_spi_write_PARM_2
      000496 74r2D            [12] 1134 	mov	a,#_write_register_byte_PARM_2
      000498 F0               [24] 1135 	movx	@dptr,a
      000499 74s00            [12] 1136 	mov	a,#(_write_register_byte_PARM_2 >> 8)
      00049B A3               [24] 1137 	inc	dptr
      00049C F0               [24] 1138 	movx	@dptr,a
      00049D E4               [12] 1139 	clr	a
      00049E A3               [24] 1140 	inc	dptr
      00049F F0               [24] 1141 	movx	@dptr,a
      0004A0 90r00r26         [24] 1142 	mov	dptr,#_spi_write_PARM_3
      0004A3 04               [12] 1143 	inc	a
      0004A4 F0               [24] 1144 	movx	@dptr,a
      0004A5 8F 82            [24] 1145 	mov	dpl,r7
                                   1146 ;	src/radio.c:151: }
      0004A7 02r03r9B         [24] 1147 	ljmp	_spi_write
                                   1148 ;------------------------------------------------------------
                                   1149 ;Allocation info for local variables in function 'read_register_byte'
                                   1150 ;------------------------------------------------------------
                                   1151 ;reg                       Allocated with name '_read_register_byte_reg_65536_59'
                                   1152 ;value                     Allocated with name '_read_register_byte_value_65536_60'
                                   1153 ;------------------------------------------------------------
                                   1154 ;	src/radio.c:154: uint8_t read_register_byte(uint8_t reg)
                                   1155 ;	-----------------------------------------
                                   1156 ;	 function read_register_byte
                                   1157 ;	-----------------------------------------
      0004AA                       1158 _read_register_byte:
      0004AA E5 82            [12] 1159 	mov	a,dpl
      0004AC 90r00r2F         [24] 1160 	mov	dptr,#_read_register_byte_reg_65536_59
      0004AF F0               [24] 1161 	movx	@dptr,a
                                   1162 ;	src/radio.c:157: read_register(reg, &value, 1);
      0004B0 E0               [24] 1163 	movx	a,@dptr
      0004B1 FF               [12] 1164 	mov	r7,a
      0004B2 90r00r28         [24] 1165 	mov	dptr,#_spi_read_PARM_2
      0004B5 74r30            [12] 1166 	mov	a,#_read_register_byte_value_65536_60
      0004B7 F0               [24] 1167 	movx	@dptr,a
      0004B8 74s00            [12] 1168 	mov	a,#(_read_register_byte_value_65536_60 >> 8)
      0004BA A3               [24] 1169 	inc	dptr
      0004BB F0               [24] 1170 	movx	@dptr,a
      0004BC E4               [12] 1171 	clr	a
      0004BD A3               [24] 1172 	inc	dptr
      0004BE F0               [24] 1173 	movx	@dptr,a
      0004BF 90r00r2B         [24] 1174 	mov	dptr,#_spi_read_PARM_3
      0004C2 04               [12] 1175 	inc	a
      0004C3 F0               [24] 1176 	movx	@dptr,a
      0004C4 8F 82            [24] 1177 	mov	dpl,r7
      0004C6 12r04r0F         [24] 1178 	lcall	_spi_read
                                   1179 ;	src/radio.c:158: return value;
      0004C9 90r00r30         [24] 1180 	mov	dptr,#_read_register_byte_value_65536_60
      0004CC E0               [24] 1181 	movx	a,@dptr
                                   1182 ;	src/radio.c:159: }
      0004CD F5 82            [12] 1183 	mov	dpl,a
      0004CF 22               [24] 1184 	ret
                                   1185 ;------------------------------------------------------------
                                   1186 ;Allocation info for local variables in function 'crc_update'
                                   1187 ;------------------------------------------------------------
                                   1188 ;byte                      Allocated with name '_crc_update_PARM_2'
                                   1189 ;bits                      Allocated with name '_crc_update_PARM_3'
                                   1190 ;crc                       Allocated with name '_crc_update_crc_65536_61'
                                   1191 ;------------------------------------------------------------
                                   1192 ;	src/radio.c:162: uint16_t crc_update(uint16_t crc, uint8_t byte, uint8_t bits)
                                   1193 ;	-----------------------------------------
                                   1194 ;	 function crc_update
                                   1195 ;	-----------------------------------------
      0004D0                       1196 _crc_update:
      0004D0 AF 83            [24] 1197 	mov	r7,dph
      0004D2 E5 82            [12] 1198 	mov	a,dpl
      0004D4 90r00r33         [24] 1199 	mov	dptr,#_crc_update_crc_65536_61
      0004D7 F0               [24] 1200 	movx	@dptr,a
      0004D8 EF               [12] 1201 	mov	a,r7
      0004D9 A3               [24] 1202 	inc	dptr
      0004DA F0               [24] 1203 	movx	@dptr,a
                                   1204 ;	src/radio.c:164: crc = crc ^ (byte << 8);
      0004DB 90r00r31         [24] 1205 	mov	dptr,#_crc_update_PARM_2
      0004DE E0               [24] 1206 	movx	a,@dptr
      0004DF FE               [12] 1207 	mov	r6,a
      0004E0 7F 00            [12] 1208 	mov	r7,#0x00
      0004E2 90r00r33         [24] 1209 	mov	dptr,#_crc_update_crc_65536_61
      0004E5 E0               [24] 1210 	movx	a,@dptr
      0004E6 FC               [12] 1211 	mov	r4,a
      0004E7 A3               [24] 1212 	inc	dptr
      0004E8 E0               [24] 1213 	movx	a,@dptr
      0004E9 FD               [12] 1214 	mov	r5,a
      0004EA 90r00r33         [24] 1215 	mov	dptr,#_crc_update_crc_65536_61
      0004ED EF               [12] 1216 	mov	a,r7
      0004EE 6C               [12] 1217 	xrl	a,r4
      0004EF F0               [24] 1218 	movx	@dptr,a
      0004F0 EE               [12] 1219 	mov	a,r6
      0004F1 6D               [12] 1220 	xrl	a,r5
      0004F2 A3               [24] 1221 	inc	dptr
      0004F3 F0               [24] 1222 	movx	@dptr,a
                                   1223 ;	src/radio.c:165: while(bits--)
      0004F4 90r00r32         [24] 1224 	mov	dptr,#_crc_update_PARM_3
      0004F7 E0               [24] 1225 	movx	a,@dptr
      0004F8 FF               [12] 1226 	mov	r7,a
      0004F9                       1227 00104$:
      0004F9 8F 06            [24] 1228 	mov	ar6,r7
      0004FB 1F               [12] 1229 	dec	r7
      0004FC EE               [12] 1230 	mov	a,r6
      0004FD 60 38            [24] 1231 	jz	00106$
                                   1232 ;	src/radio.c:166: if((crc & 0x8000) == 0x8000) crc = (crc << 1) ^ 0x1021;
      0004FF 90r00r33         [24] 1233 	mov	dptr,#_crc_update_crc_65536_61
      000502 E0               [24] 1234 	movx	a,@dptr
      000503 FD               [12] 1235 	mov	r5,a
      000504 A3               [24] 1236 	inc	dptr
      000505 E0               [24] 1237 	movx	a,@dptr
      000506 FE               [12] 1238 	mov	r6,a
      000507 7B 00            [12] 1239 	mov	r3,#0x00
      000509 74 80            [12] 1240 	mov	a,#0x80
      00050B 5E               [12] 1241 	anl	a,r6
      00050C FC               [12] 1242 	mov	r4,a
      00050D BB 00 17         [24] 1243 	cjne	r3,#0x00,00102$
      000510 BC 80 14         [24] 1244 	cjne	r4,#0x80,00102$
      000513 ED               [12] 1245 	mov	a,r5
      000514 2D               [12] 1246 	add	a,r5
      000515 FB               [12] 1247 	mov	r3,a
      000516 EE               [12] 1248 	mov	a,r6
      000517 33               [12] 1249 	rlc	a
      000518 FC               [12] 1250 	mov	r4,a
      000519 90r00r33         [24] 1251 	mov	dptr,#_crc_update_crc_65536_61
      00051C 74 21            [12] 1252 	mov	a,#0x21
      00051E 6B               [12] 1253 	xrl	a,r3
      00051F F0               [24] 1254 	movx	@dptr,a
      000520 74 10            [12] 1255 	mov	a,#0x10
      000522 6C               [12] 1256 	xrl	a,r4
      000523 A3               [24] 1257 	inc	dptr
      000524 F0               [24] 1258 	movx	@dptr,a
      000525 80 D2            [24] 1259 	sjmp	00104$
      000527                       1260 00102$:
                                   1261 ;	src/radio.c:167: else crc = crc << 1;
      000527 ED               [12] 1262 	mov	a,r5
      000528 2D               [12] 1263 	add	a,r5
      000529 FD               [12] 1264 	mov	r5,a
      00052A EE               [12] 1265 	mov	a,r6
      00052B 33               [12] 1266 	rlc	a
      00052C FE               [12] 1267 	mov	r6,a
      00052D 90r00r33         [24] 1268 	mov	dptr,#_crc_update_crc_65536_61
      000530 ED               [12] 1269 	mov	a,r5
      000531 F0               [24] 1270 	movx	@dptr,a
      000532 EE               [12] 1271 	mov	a,r6
      000533 A3               [24] 1272 	inc	dptr
      000534 F0               [24] 1273 	movx	@dptr,a
      000535 80 C2            [24] 1274 	sjmp	00104$
      000537                       1275 00106$:
                                   1276 ;	src/radio.c:168: crc = crc & 0xFFFF;
                                   1277 ;	src/radio.c:169: return crc;
      000537 90r00r33         [24] 1278 	mov	dptr,#_crc_update_crc_65536_61
      00053A E0               [24] 1279 	movx	a,@dptr
      00053B FE               [12] 1280 	mov	r6,a
      00053C A3               [24] 1281 	inc	dptr
      00053D E0               [24] 1282 	movx	a,@dptr
                                   1283 ;	src/radio.c:170: }
      00053E 8E 82            [24] 1284 	mov	dpl,r6
      000540 F5 83            [12] 1285 	mov	dph,a
      000542 22               [24] 1286 	ret
                                   1287 ;------------------------------------------------------------
                                   1288 ;Allocation info for local variables in function 'handle_radio_request'
                                   1289 ;------------------------------------------------------------
                                   1290 ;sloc0                     Allocated with name '_handle_radio_request_sloc0_1_0'
                                   1291 ;sloc1                     Allocated with name '_handle_radio_request_sloc1_1_0'
                                   1292 ;sloc2                     Allocated with name '_handle_radio_request_sloc2_1_0'
                                   1293 ;sloc3                     Allocated with name '_handle_radio_request_sloc3_1_0'
                                   1294 ;data                      Allocated with name '_handle_radio_request_PARM_2'
                                   1295 ;request                   Allocated with name '_handle_radio_request_request_65536_63'
                                   1296 ;command                   Allocated with name '_handle_radio_request_command_131072_66'
                                   1297 ;command_length            Allocated with name '_handle_radio_request_command_length_131072_66'
                                   1298 ;x                         Allocated with name '_handle_radio_request_x_131072_66'
                                   1299 ;value                     Allocated with name '_handle_radio_request_value_131072_75'
                                   1300 ;x                         Allocated with name '_handle_radio_request_x_262144_80'
                                   1301 ;offset                    Allocated with name '_handle_radio_request_offset_262144_80'
                                   1302 ;payload_length            Allocated with name '_handle_radio_request_payload_length_262144_80'
                                   1303 ;crc                       Allocated with name '_handle_radio_request_crc_262144_80'
                                   1304 ;crc_given                 Allocated with name '_handle_radio_request_crc_given_262144_80'
                                   1305 ;payload                   Allocated with name '_handle_radio_request_payload_262144_80'
                                   1306 ;x                         Allocated with name '_handle_radio_request_x_262144_91'
                                   1307 ;payload                   Allocated with name '_handle_radio_request_payload_262144_91'
                                   1308 ;elapsed                   Allocated with name '_handle_radio_request_elapsed_131072_94'
                                   1309 ;status                    Allocated with name '_handle_radio_request_status_131072_94'
                                   1310 ;__2621440005              Allocated with name '_handle_radio_request___2621440005_262144_104'
                                   1311 ;us                        Allocated with name '_handle_radio_request_us_327680_105'
                                   1312 ;__1966080007              Allocated with name '_handle_radio_request___1966080007_196608_107'
                                   1313 ;us                        Allocated with name '_handle_radio_request_us_262144_108'
                                   1314 ;address_start             Allocated with name '_handle_radio_request_address_start_131072_101'
                                   1315 ;__1966080009              Allocated with name '_handle_radio_request___1966080009_196608_110'
                                   1316 ;us                        Allocated with name '_handle_radio_request_us_262144_111'
                                   1317 ;------------------------------------------------------------
                                   1318 ;	src/radio.c:173: void handle_radio_request(uint8_t request, uint8_t * data)
                                   1319 ;	-----------------------------------------
                                   1320 ;	 function handle_radio_request
                                   1321 ;	-----------------------------------------
      000543                       1322 _handle_radio_request:
      000543 E5 82            [12] 1323 	mov	a,dpl
      000545 90r00r38         [24] 1324 	mov	dptr,#_handle_radio_request_request_65536_63
      000548 F0               [24] 1325 	movx	@dptr,a
                                   1326 ;	src/radio.c:176: if(request == LAUNCH_NORDIC_BOOTLOADER)
      000549 E0               [24] 1327 	movx	a,@dptr
      00054A FF               [12] 1328 	mov	r7,a
      00054B BF FF 0E         [24] 1329 	cjne	r7,#0xff,00102$
                                   1330 ;	src/radio.c:178: nordic_bootloader();
      00054E 90r00r00         [24] 1331 	mov	dptr,#_nordic_bootloader
      000551 E0               [24] 1332 	movx	a,@dptr
      000552 F8               [12] 1333 	mov	r0,a
      000553 A3               [24] 1334 	inc	dptr
      000554 E0               [24] 1335 	movx	a,@dptr
      000555 F5 83            [12] 1336 	mov	dph,a
      000557 88 82            [24] 1337 	mov	dpl,r0
                                   1338 ;	src/radio.c:179: return;
      000559 02r00r00         [24] 1339 	ljmp	__sdcc_call_dptr
      00055C                       1340 00102$:
                                   1341 ;	src/radio.c:183: if(request == LAUNCH_LOGITECH_BOOTLOADER)
      00055C BF FE 69         [24] 1342 	cjne	r7,#0xfe,00210$
                                   1343 ;	src/radio.c:185: const uint8_t command[9] = {'E', 'n', 't', 'e', 'r', ' ', 'I', 'C', 'P'};
      00055F 90r00r39         [24] 1344 	mov	dptr,#_handle_radio_request_command_131072_66
      000562 74 45            [12] 1345 	mov	a,#0x45
      000564 F0               [24] 1346 	movx	@dptr,a
      000565 90r00r3A         [24] 1347 	mov	dptr,#(_handle_radio_request_command_131072_66 + 0x0001)
      000568 74 6E            [12] 1348 	mov	a,#0x6e
      00056A F0               [24] 1349 	movx	@dptr,a
      00056B 90r00r3B         [24] 1350 	mov	dptr,#(_handle_radio_request_command_131072_66 + 0x0002)
      00056E 74 74            [12] 1351 	mov	a,#0x74
      000570 F0               [24] 1352 	movx	@dptr,a
      000571 90r00r3C         [24] 1353 	mov	dptr,#(_handle_radio_request_command_131072_66 + 0x0003)
      000574 74 65            [12] 1354 	mov	a,#0x65
      000576 F0               [24] 1355 	movx	@dptr,a
      000577 90r00r3D         [24] 1356 	mov	dptr,#(_handle_radio_request_command_131072_66 + 0x0004)
      00057A 74 72            [12] 1357 	mov	a,#0x72
      00057C F0               [24] 1358 	movx	@dptr,a
      00057D 90r00r3E         [24] 1359 	mov	dptr,#(_handle_radio_request_command_131072_66 + 0x0005)
      000580 74 20            [12] 1360 	mov	a,#0x20
      000582 F0               [24] 1361 	movx	@dptr,a
      000583 90r00r3F         [24] 1362 	mov	dptr,#(_handle_radio_request_command_131072_66 + 0x0006)
      000586 74 49            [12] 1363 	mov	a,#0x49
      000588 F0               [24] 1364 	movx	@dptr,a
      000589 90r00r40         [24] 1365 	mov	dptr,#(_handle_radio_request_command_131072_66 + 0x0007)
      00058C 74 43            [12] 1366 	mov	a,#0x43
      00058E F0               [24] 1367 	movx	@dptr,a
      00058F 90r00r41         [24] 1368 	mov	dptr,#(_handle_radio_request_command_131072_66 + 0x0008)
      000592 74 50            [12] 1369 	mov	a,#0x50
      000594 F0               [24] 1370 	movx	@dptr,a
                                   1371 ;	src/radio.c:188: for(x = 0; x < command_length; x++)
      000595 7D 00            [12] 1372 	mov	r5,#0x00
      000597 7E 00            [12] 1373 	mov	r6,#0x00
      000599                       1374 00225$:
      000599 C3               [12] 1375 	clr	c
      00059A ED               [12] 1376 	mov	a,r5
      00059B 94 09            [12] 1377 	subb	a,#0x09
      00059D EE               [12] 1378 	mov	a,r6
      00059E 64 80            [12] 1379 	xrl	a,#0x80
      0005A0 94 80            [12] 1380 	subb	a,#0x80
      0005A2 50 16            [24] 1381 	jnc	00103$
                                   1382 ;	src/radio.c:190: AESIA1 = x;
                                   1383 ;	src/radio.c:191: AESIV = command[x];
      0005A4 ED               [12] 1384 	mov	a,r5
      0005A5 F5 F5            [12] 1385 	mov	_AESIA1,a
      0005A7 24r39            [12] 1386 	add	a,#_handle_radio_request_command_131072_66
      0005A9 F5 82            [12] 1387 	mov	dpl,a
      0005AB EE               [12] 1388 	mov	a,r6
      0005AC 34s00            [12] 1389 	addc	a,#(_handle_radio_request_command_131072_66 >> 8)
      0005AE F5 83            [12] 1390 	mov	dph,a
      0005B0 E0               [24] 1391 	movx	a,@dptr
      0005B1 F5 F2            [12] 1392 	mov	_AESIV,a
                                   1393 ;	src/radio.c:188: for(x = 0; x < command_length; x++)
      0005B3 0D               [12] 1394 	inc	r5
      0005B4 BD 00 E2         [24] 1395 	cjne	r5,#0x00,00225$
      0005B7 0E               [12] 1396 	inc	r6
      0005B8 80 DF            [24] 1397 	sjmp	00225$
      0005BA                       1398 00103$:
                                   1399 ;	src/radio.c:193: logitech_bootloader();
      0005BA 90r00r02         [24] 1400 	mov	dptr,#_logitech_bootloader
      0005BD E0               [24] 1401 	movx	a,@dptr
      0005BE F8               [12] 1402 	mov	r0,a
      0005BF A3               [24] 1403 	inc	dptr
      0005C0 E0               [24] 1404 	movx	a,@dptr
      0005C1 F5 83            [12] 1405 	mov	dph,a
      0005C3 88 82            [24] 1406 	mov	dpl,r0
                                   1407 ;	src/radio.c:194: return;
      0005C5 02r00r00         [24] 1408 	ljmp	__sdcc_call_dptr
      0005C8                       1409 00210$:
                                   1410 ;	src/radio.c:198: else if(request == ENABLE_LNA)
      0005C8 BF 0B 10         [24] 1411 	cjne	r7,#0x0b,00207$
                                   1412 ;	src/radio.c:200: P0DIR &= ~0x10;
      0005CB 53 94 EF         [24] 1413 	anl	_P0DIR,#0xef
                                   1414 ;	src/radio.c:201: P0 |= 0x10;
      0005CE AD 80            [24] 1415 	mov	r5,_P0
      0005D0 43 05 10         [24] 1416 	orl	ar5,#0x10
      0005D3 8D 80            [24] 1417 	mov	_P0,r5
                                   1418 ;	src/radio.c:202: in1bc = 0;
      0005D5 90 C7 B7         [24] 1419 	mov	dptr,#0xc7b7
      0005D8 E4               [12] 1420 	clr	a
      0005D9 F0               [24] 1421 	movx	@dptr,a
                                   1422 ;	src/radio.c:203: return;
      0005DA 22               [24] 1423 	ret
      0005DB                       1424 00207$:
                                   1425 ;	src/radio.c:207: else if(request == SET_CHANNEL)
      0005DB BF 09 68         [24] 1426 	cjne	r7,#0x09,00204$
                                   1427 ;	src/radio.c:209: rfce = 0;
                                   1428 ;	assignBit
      0005DE C2 90            [12] 1429 	clr	_rfce
                                   1430 ;	src/radio.c:210: write_register_byte(RF_CH, data[0]);
      0005E0 90r00r35         [24] 1431 	mov	dptr,#_handle_radio_request_PARM_2
      0005E3 E0               [24] 1432 	movx	a,@dptr
      0005E4 FC               [12] 1433 	mov	r4,a
      0005E5 A3               [24] 1434 	inc	dptr
      0005E6 E0               [24] 1435 	movx	a,@dptr
      0005E7 FD               [12] 1436 	mov	r5,a
      0005E8 A3               [24] 1437 	inc	dptr
      0005E9 E0               [24] 1438 	movx	a,@dptr
      0005EA FE               [12] 1439 	mov	r6,a
      0005EB 8C 82            [24] 1440 	mov	dpl,r4
      0005ED 8D 83            [24] 1441 	mov	dph,r5
      0005EF 8E F0            [24] 1442 	mov	b,r6
      0005F1 12r00r00         [24] 1443 	lcall	__gptrget
      0005F4 90r00r2D         [24] 1444 	mov	dptr,#_write_register_byte_PARM_2
      0005F7 F0               [24] 1445 	movx	@dptr,a
      0005F8 75 82 05         [24] 1446 	mov	dpl,#0x05
      0005FB C0 06            [24] 1447 	push	ar6
      0005FD C0 05            [24] 1448 	push	ar5
      0005FF C0 04            [24] 1449 	push	ar4
      000601 12r04r88         [24] 1450 	lcall	_write_register_byte
      000604 D0 04            [24] 1451 	pop	ar4
      000606 D0 05            [24] 1452 	pop	ar5
      000608 D0 06            [24] 1453 	pop	ar6
                                   1454 ;	src/radio.c:211: in1bc = 1;
      00060A 90 C7 B7         [24] 1455 	mov	dptr,#0xc7b7
      00060D 74 01            [12] 1456 	mov	a,#0x01
      00060F F0               [24] 1457 	movx	@dptr,a
                                   1458 ;	src/radio.c:212: in1buf[0] = data[0];
      000610 8C 82            [24] 1459 	mov	dpl,r4
      000612 8D 83            [24] 1460 	mov	dph,r5
      000614 8E F0            [24] 1461 	mov	b,r6
      000616 12r00r00         [24] 1462 	lcall	__gptrget
      000619 90 C6 80         [24] 1463 	mov	dptr,#_in1buf
      00061C F0               [24] 1464 	movx	@dptr,a
                                   1465 ;	src/radio.c:213: flush_rx();
      00061D 90r00r23         [24] 1466 	mov	dptr,#_spi_write_PARM_2
      000620 E4               [12] 1467 	clr	a
      000621 F0               [24] 1468 	movx	@dptr,a
      000622 A3               [24] 1469 	inc	dptr
      000623 F0               [24] 1470 	movx	@dptr,a
      000624 A3               [24] 1471 	inc	dptr
      000625 F0               [24] 1472 	movx	@dptr,a
      000626 90r00r26         [24] 1473 	mov	dptr,#_spi_write_PARM_3
      000629 F0               [24] 1474 	movx	@dptr,a
      00062A 75 82 E2         [24] 1475 	mov	dpl,#0xe2
      00062D 12r03r9B         [24] 1476 	lcall	_spi_write
                                   1477 ;	src/radio.c:214: flush_tx();
      000630 90r00r23         [24] 1478 	mov	dptr,#_spi_write_PARM_2
      000633 E4               [12] 1479 	clr	a
      000634 F0               [24] 1480 	movx	@dptr,a
      000635 A3               [24] 1481 	inc	dptr
      000636 F0               [24] 1482 	movx	@dptr,a
      000637 A3               [24] 1483 	inc	dptr
      000638 F0               [24] 1484 	movx	@dptr,a
      000639 90r00r26         [24] 1485 	mov	dptr,#_spi_write_PARM_3
      00063C F0               [24] 1486 	movx	@dptr,a
      00063D 75 82 E1         [24] 1487 	mov	dpl,#0xe1
      000640 12r03r9B         [24] 1488 	lcall	_spi_write
                                   1489 ;	src/radio.c:215: rfce = 1;
                                   1490 ;	assignBit
      000643 D2 90            [12] 1491 	setb	_rfce
                                   1492 ;	src/radio.c:216: return;
      000645 22               [24] 1493 	ret
      000646                       1494 00204$:
                                   1495 ;	src/radio.c:220: else if(request == GET_CHANNEL)
      000646 BF 0A 1F         [24] 1496 	cjne	r7,#0x0a,00201$
                                   1497 ;	src/radio.c:222: spi_read(RF_CH, in1buf, 1);
      000649 90r00r28         [24] 1498 	mov	dptr,#_spi_read_PARM_2
      00064C 74 80            [12] 1499 	mov	a,#_in1buf
      00064E F0               [24] 1500 	movx	@dptr,a
      00064F 74 C6            [12] 1501 	mov	a,#(_in1buf >> 8)
      000651 A3               [24] 1502 	inc	dptr
      000652 F0               [24] 1503 	movx	@dptr,a
      000653 E4               [12] 1504 	clr	a
      000654 A3               [24] 1505 	inc	dptr
      000655 F0               [24] 1506 	movx	@dptr,a
      000656 90r00r2B         [24] 1507 	mov	dptr,#_spi_read_PARM_3
      000659 04               [12] 1508 	inc	a
      00065A F0               [24] 1509 	movx	@dptr,a
      00065B 75 82 05         [24] 1510 	mov	dpl,#0x05
      00065E 12r04r0F         [24] 1511 	lcall	_spi_read
                                   1512 ;	src/radio.c:223: in1bc = 1;
      000661 90 C7 B7         [24] 1513 	mov	dptr,#0xc7b7
      000664 74 01            [12] 1514 	mov	a,#0x01
      000666 F0               [24] 1515 	movx	@dptr,a
                                   1516 ;	src/radio.c:224: return;
      000667 22               [24] 1517 	ret
      000668                       1518 00201$:
                                   1519 ;	src/radio.c:228: else if(request == ENTER_PROMISCUOUS_MODE)
      000668 BF 06 2A         [24] 1520 	cjne	r7,#0x06,00198$
                                   1521 ;	src/radio.c:230: enter_promiscuous_mode(&data[1] /* address prefix */, data[0] /* prefix length */);
      00066B 90r00r35         [24] 1522 	mov	dptr,#_handle_radio_request_PARM_2
      00066E E0               [24] 1523 	movx	a,@dptr
      00066F FC               [12] 1524 	mov	r4,a
      000670 A3               [24] 1525 	inc	dptr
      000671 E0               [24] 1526 	movx	a,@dptr
      000672 FD               [12] 1527 	mov	r5,a
      000673 A3               [24] 1528 	inc	dptr
      000674 E0               [24] 1529 	movx	a,@dptr
      000675 FE               [12] 1530 	mov	r6,a
      000676 74 01            [12] 1531 	mov	a,#0x01
      000678 2C               [12] 1532 	add	a,r4
      000679 F9               [12] 1533 	mov	r1,a
      00067A E4               [12] 1534 	clr	a
      00067B 3D               [12] 1535 	addc	a,r5
      00067C FA               [12] 1536 	mov	r2,a
      00067D 8E 03            [24] 1537 	mov	ar3,r6
      00067F 8C 82            [24] 1538 	mov	dpl,r4
      000681 8D 83            [24] 1539 	mov	dph,r5
      000683 8E F0            [24] 1540 	mov	b,r6
      000685 12r00r00         [24] 1541 	lcall	__gptrget
      000688 90r00r0A         [24] 1542 	mov	dptr,#_enter_promiscuous_mode_PARM_2
      00068B F0               [24] 1543 	movx	@dptr,a
      00068C 89 82            [24] 1544 	mov	dpl,r1
      00068E 8A 83            [24] 1545 	mov	dph,r2
      000690 8B F0            [24] 1546 	mov	b,r3
      000692 02r00r00         [24] 1547 	ljmp	_enter_promiscuous_mode
      000695                       1548 00198$:
                                   1549 ;	src/radio.c:234: else if(request == ENTER_PROMISCUOUS_MODE_GENERIC)
      000695 BF 0D 61         [24] 1550 	cjne	r7,#0x0d,00195$
                                   1551 ;	src/radio.c:236: enter_promiscuous_mode_generic(&data[3] /* address prefix */, data[0] /* prefix length */, data[1] /* rate */, data[2] /* payload length */);
      000698 90r00r35         [24] 1552 	mov	dptr,#_handle_radio_request_PARM_2
      00069B E0               [24] 1553 	movx	a,@dptr
      00069C FC               [12] 1554 	mov	r4,a
      00069D A3               [24] 1555 	inc	dptr
      00069E E0               [24] 1556 	movx	a,@dptr
      00069F FD               [12] 1557 	mov	r5,a
      0006A0 A3               [24] 1558 	inc	dptr
      0006A1 E0               [24] 1559 	movx	a,@dptr
      0006A2 FE               [12] 1560 	mov	r6,a
      0006A3 74 03            [12] 1561 	mov	a,#0x03
      0006A5 2C               [12] 1562 	add	a,r4
      0006A6 F5*0E            [12] 1563 	mov	_handle_radio_request_sloc1_1_0,a
      0006A8 E4               [12] 1564 	clr	a
      0006A9 3D               [12] 1565 	addc	a,r5
      0006AA F5*0F            [12] 1566 	mov	(_handle_radio_request_sloc1_1_0 + 1),a
      0006AC 8E*10            [24] 1567 	mov	(_handle_radio_request_sloc1_1_0 + 2),r6
      0006AE 8C 82            [24] 1568 	mov	dpl,r4
      0006B0 8D 83            [24] 1569 	mov	dph,r5
      0006B2 8E F0            [24] 1570 	mov	b,r6
      0006B4 12r00r00         [24] 1571 	lcall	__gptrget
      0006B7 F5*0D            [12] 1572 	mov	_handle_radio_request_sloc0_1_0,a
      0006B9 74 01            [12] 1573 	mov	a,#0x01
      0006BB 2C               [12] 1574 	add	a,r4
      0006BC F8               [12] 1575 	mov	r0,a
      0006BD E4               [12] 1576 	clr	a
      0006BE 3D               [12] 1577 	addc	a,r5
      0006BF FA               [12] 1578 	mov	r2,a
      0006C0 8E 03            [24] 1579 	mov	ar3,r6
      0006C2 88 82            [24] 1580 	mov	dpl,r0
      0006C4 8A 83            [24] 1581 	mov	dph,r2
      0006C6 8B F0            [24] 1582 	mov	b,r3
      0006C8 12r00r00         [24] 1583 	lcall	__gptrget
      0006CB F8               [12] 1584 	mov	r0,a
      0006CC 74 02            [12] 1585 	mov	a,#0x02
      0006CE 2C               [12] 1586 	add	a,r4
      0006CF FC               [12] 1587 	mov	r4,a
      0006D0 E4               [12] 1588 	clr	a
      0006D1 3D               [12] 1589 	addc	a,r5
      0006D2 FD               [12] 1590 	mov	r5,a
      0006D3 8C 82            [24] 1591 	mov	dpl,r4
      0006D5 8D 83            [24] 1592 	mov	dph,r5
      0006D7 8E F0            [24] 1593 	mov	b,r6
      0006D9 12r00r00         [24] 1594 	lcall	__gptrget
      0006DC FC               [12] 1595 	mov	r4,a
      0006DD 90r00r10         [24] 1596 	mov	dptr,#_enter_promiscuous_mode_generic_PARM_2
      0006E0 E5*0D            [12] 1597 	mov	a,_handle_radio_request_sloc0_1_0
      0006E2 F0               [24] 1598 	movx	@dptr,a
      0006E3 90r00r11         [24] 1599 	mov	dptr,#_enter_promiscuous_mode_generic_PARM_3
      0006E6 E8               [12] 1600 	mov	a,r0
      0006E7 F0               [24] 1601 	movx	@dptr,a
      0006E8 90r00r12         [24] 1602 	mov	dptr,#_enter_promiscuous_mode_generic_PARM_4
      0006EB EC               [12] 1603 	mov	a,r4
      0006EC F0               [24] 1604 	movx	@dptr,a
      0006ED 85*0E 82         [24] 1605 	mov	dpl,_handle_radio_request_sloc1_1_0
      0006F0 85*0F 83         [24] 1606 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      0006F3 85*10 F0         [24] 1607 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      0006F6 02r01r3C         [24] 1608 	ljmp	_enter_promiscuous_mode_generic
      0006F9                       1609 00195$:
                                   1610 ;	src/radio.c:240: else if(request == ENTER_TONE_TEST_MODE)
      0006F9 BF 07 17         [24] 1611 	cjne	r7,#0x07,00192$
                                   1612 ;	src/radio.c:242: configure_phy(PWR_UP, CONT_WAVE | PLL_LOCK, 0);
      0006FC 90r00r1F         [24] 1613 	mov	dptr,#_configure_phy_PARM_2
      0006FF 74 90            [12] 1614 	mov	a,#0x90
      000701 F0               [24] 1615 	movx	@dptr,a
      000702 90r00r20         [24] 1616 	mov	dptr,#_configure_phy_PARM_3
      000705 E4               [12] 1617 	clr	a
      000706 F0               [24] 1618 	movx	@dptr,a
      000707 75 82 02         [24] 1619 	mov	dpl,#0x02
      00070A 12r03r5C         [24] 1620 	lcall	_configure_phy
                                   1621 ;	src/radio.c:243: in1bc = 0;
      00070D 90 C7 B7         [24] 1622 	mov	dptr,#0xc7b7
      000710 E4               [12] 1623 	clr	a
      000711 F0               [24] 1624 	movx	@dptr,a
                                   1625 ;	src/radio.c:244: return;
      000712 22               [24] 1626 	ret
      000713                       1627 00192$:
                                   1628 ;	src/radio.c:248: else if(request == RECEIVE_PACKET)
      000713 BF 12 02         [24] 1629 	cjne	r7,#0x12,00528$
      000716 80 03            [24] 1630 	sjmp	00529$
      000718                       1631 00528$:
      000718 02r0BrEC         [24] 1632 	ljmp	00189$
      00071B                       1633 00529$:
                                   1634 ;	src/radio.c:253: read_register(FIFO_STATUS, &value, 1);
      00071B 90r00r28         [24] 1635 	mov	dptr,#_spi_read_PARM_2
      00071E 74r42            [12] 1636 	mov	a,#_handle_radio_request_value_131072_75
      000720 F0               [24] 1637 	movx	@dptr,a
      000721 74s00            [12] 1638 	mov	a,#(_handle_radio_request_value_131072_75 >> 8)
      000723 A3               [24] 1639 	inc	dptr
      000724 F0               [24] 1640 	movx	@dptr,a
      000725 E4               [12] 1641 	clr	a
      000726 A3               [24] 1642 	inc	dptr
      000727 F0               [24] 1643 	movx	@dptr,a
      000728 90r00r2B         [24] 1644 	mov	dptr,#_spi_read_PARM_3
      00072B 04               [12] 1645 	inc	a
      00072C F0               [24] 1646 	movx	@dptr,a
      00072D 75 82 17         [24] 1647 	mov	dpl,#0x17
      000730 12r04r0F         [24] 1648 	lcall	_spi_read
                                   1649 ;	src/radio.c:254: if((value & 1) == 0)
      000733 90r00r42         [24] 1650 	mov	dptr,#_handle_radio_request_value_131072_75
      000736 E0               [24] 1651 	movx	a,@dptr
      000737 30 E0 03         [24] 1652 	jnb	acc.0,00530$
      00073A 02r0BrDF         [24] 1653 	ljmp	00133$
      00073D                       1654 00530$:
                                   1655 ;	src/radio.c:257: if(radio_mode == sniffer)
      00073D 90r00r01         [24] 1656 	mov	dptr,#_radio_mode
      000740 E0               [24] 1657 	movx	a,@dptr
      000741 FE               [12] 1658 	mov	r6,a
      000742 70 7B            [24] 1659 	jnz	00130$
                                   1660 ;	src/radio.c:260: read_register(R_RX_PL_WID, &value, 1);
      000744 90r00r28         [24] 1661 	mov	dptr,#_spi_read_PARM_2
      000747 74r42            [12] 1662 	mov	a,#_handle_radio_request_value_131072_75
      000749 F0               [24] 1663 	movx	@dptr,a
      00074A 74s00            [12] 1664 	mov	a,#(_handle_radio_request_value_131072_75 >> 8)
      00074C A3               [24] 1665 	inc	dptr
      00074D F0               [24] 1666 	movx	@dptr,a
      00074E E4               [12] 1667 	clr	a
      00074F A3               [24] 1668 	inc	dptr
      000750 F0               [24] 1669 	movx	@dptr,a
      000751 90r00r2B         [24] 1670 	mov	dptr,#_spi_read_PARM_3
      000754 04               [12] 1671 	inc	a
      000755 F0               [24] 1672 	movx	@dptr,a
      000756 75 82 60         [24] 1673 	mov	dpl,#0x60
      000759 12r04r0F         [24] 1674 	lcall	_spi_read
                                   1675 ;	src/radio.c:261: if(value <= 32)
      00075C 90r00r42         [24] 1676 	mov	dptr,#_handle_radio_request_value_131072_75
      00075F E0               [24] 1677 	movx	a,@dptr
      000760 FD               [12] 1678 	mov  r5,a
      000761 24 DF            [12] 1679 	add	a,#0xff - 0x20
      000763 40 3B            [24] 1680 	jc	00105$
                                   1681 ;	src/radio.c:264: read_register(R_RX_PAYLOAD, &in1buf[1], value);
      000765 90r00r28         [24] 1682 	mov	dptr,#_spi_read_PARM_2
      000768 74 81            [12] 1683 	mov	a,#(_in1buf + 0x0001)
      00076A F0               [24] 1684 	movx	@dptr,a
      00076B 74 C6            [12] 1685 	mov	a,#((_in1buf + 0x0001) >> 8)
      00076D A3               [24] 1686 	inc	dptr
      00076E F0               [24] 1687 	movx	@dptr,a
      00076F E4               [12] 1688 	clr	a
      000770 A3               [24] 1689 	inc	dptr
      000771 F0               [24] 1690 	movx	@dptr,a
      000772 90r00r2B         [24] 1691 	mov	dptr,#_spi_read_PARM_3
      000775 ED               [12] 1692 	mov	a,r5
      000776 F0               [24] 1693 	movx	@dptr,a
      000777 75 82 61         [24] 1694 	mov	dpl,#0x61
      00077A 12r04r0F         [24] 1695 	lcall	_spi_read
                                   1696 ;	src/radio.c:265: in1buf[0] = 0;
      00077D 90 C6 80         [24] 1697 	mov	dptr,#_in1buf
      000780 E4               [12] 1698 	clr	a
      000781 F0               [24] 1699 	movx	@dptr,a
                                   1700 ;	src/radio.c:266: in1bc = value + 1;
      000782 90r00r42         [24] 1701 	mov	dptr,#_handle_radio_request_value_131072_75
      000785 E0               [24] 1702 	movx	a,@dptr
      000786 FD               [12] 1703 	mov	r5,a
      000787 0D               [12] 1704 	inc	r5
      000788 90 C7 B7         [24] 1705 	mov	dptr,#0xc7b7
      00078B ED               [12] 1706 	mov	a,r5
      00078C F0               [24] 1707 	movx	@dptr,a
                                   1708 ;	src/radio.c:267: flush_rx();
      00078D 90r00r23         [24] 1709 	mov	dptr,#_spi_write_PARM_2
      000790 E4               [12] 1710 	clr	a
      000791 F0               [24] 1711 	movx	@dptr,a
      000792 A3               [24] 1712 	inc	dptr
      000793 F0               [24] 1713 	movx	@dptr,a
      000794 A3               [24] 1714 	inc	dptr
      000795 F0               [24] 1715 	movx	@dptr,a
      000796 90r00r26         [24] 1716 	mov	dptr,#_spi_write_PARM_3
      000799 F0               [24] 1717 	movx	@dptr,a
      00079A 75 82 E2         [24] 1718 	mov	dpl,#0xe2
                                   1719 ;	src/radio.c:268: return;
      00079D 02r03r9B         [24] 1720 	ljmp	_spi_write
      0007A0                       1721 00105$:
                                   1722 ;	src/radio.c:273: in1bc = 1;
      0007A0 90 C7 B7         [24] 1723 	mov	dptr,#0xc7b7
      0007A3 74 01            [12] 1724 	mov	a,#0x01
      0007A5 F0               [24] 1725 	movx	@dptr,a
                                   1726 ;	src/radio.c:274: in1buf[0] = 0xFF;
      0007A6 90 C6 80         [24] 1727 	mov	dptr,#_in1buf
      0007A9 74 FF            [12] 1728 	mov	a,#0xff
      0007AB F0               [24] 1729 	movx	@dptr,a
                                   1730 ;	src/radio.c:275: flush_rx();
      0007AC 90r00r23         [24] 1731 	mov	dptr,#_spi_write_PARM_2
      0007AF E4               [12] 1732 	clr	a
      0007B0 F0               [24] 1733 	movx	@dptr,a
      0007B1 A3               [24] 1734 	inc	dptr
      0007B2 F0               [24] 1735 	movx	@dptr,a
      0007B3 A3               [24] 1736 	inc	dptr
      0007B4 F0               [24] 1737 	movx	@dptr,a
      0007B5 90r00r26         [24] 1738 	mov	dptr,#_spi_write_PARM_3
      0007B8 F0               [24] 1739 	movx	@dptr,a
      0007B9 75 82 E2         [24] 1740 	mov	dpl,#0xe2
                                   1741 ;	src/radio.c:276: return;
      0007BC 02r03r9B         [24] 1742 	ljmp	_spi_write
      0007BF                       1743 00130$:
                                   1744 ;	src/radio.c:281: else if(radio_mode == promiscuous)
      0007BF BE 01 02         [24] 1745 	cjne	r6,#0x01,00533$
      0007C2 80 03            [24] 1746 	sjmp	00534$
      0007C4                       1747 00533$:
      0007C4 02r0Br27         [24] 1748 	ljmp	00127$
      0007C7                       1749 00534$:
                                   1750 ;	src/radio.c:289: for(x = 0; x < pm_prefix_length; x++) payload[pm_prefix_length - x - 1] = pm_prefix[x];
      0007C7 7C 00            [12] 1751 	mov	r4,#0x00
      0007C9 7D 00            [12] 1752 	mov	r5,#0x00
      0007CB                       1753 00228$:
      0007CB 90r00r02         [24] 1754 	mov	dptr,#_pm_prefix_length
      0007CE E0               [24] 1755 	movx	a,@dptr
      0007CF FA               [12] 1756 	mov	r2,a
      0007D0 A3               [24] 1757 	inc	dptr
      0007D1 E0               [24] 1758 	movx	a,@dptr
      0007D2 FB               [12] 1759 	mov	r3,a
      0007D3 C3               [12] 1760 	clr	c
      0007D4 EC               [12] 1761 	mov	a,r4
      0007D5 9A               [12] 1762 	subb	a,r2
      0007D6 ED               [12] 1763 	mov	a,r5
      0007D7 64 80            [12] 1764 	xrl	a,#0x80
      0007D9 8B F0            [24] 1765 	mov	b,r3
      0007DB 63 F0 80         [24] 1766 	xrl	b,#0x80
      0007DE 95 F0            [12] 1767 	subb	a,b
      0007E0 50 30            [24] 1768 	jnc	00107$
      0007E2 8A 01            [24] 1769 	mov	ar1,r2
      0007E4 8C 00            [24] 1770 	mov	ar0,r4
      0007E6 E9               [12] 1771 	mov	a,r1
      0007E7 C3               [12] 1772 	clr	c
      0007E8 98               [12] 1773 	subb	a,r0
      0007E9 14               [12] 1774 	dec	a
      0007EA F8               [12] 1775 	mov	r0,a
      0007EB 33               [12] 1776 	rlc	a
      0007EC 95 E0            [12] 1777 	subb	a,acc
      0007EE F9               [12] 1778 	mov	r1,a
      0007EF E8               [12] 1779 	mov	a,r0
      0007F0 24r47            [12] 1780 	add	a,#_handle_radio_request_payload_262144_80
      0007F2 F5*0E            [12] 1781 	mov	_handle_radio_request_sloc1_1_0,a
      0007F4 E9               [12] 1782 	mov	a,r1
      0007F5 34s00            [12] 1783 	addc	a,#(_handle_radio_request_payload_262144_80 >> 8)
      0007F7 F5*0F            [12] 1784 	mov	(_handle_radio_request_sloc1_1_0 + 1),a
      0007F9 EC               [12] 1785 	mov	a,r4
      0007FA 24r04            [12] 1786 	add	a,#_pm_prefix
      0007FC F5 82            [12] 1787 	mov	dpl,a
      0007FE ED               [12] 1788 	mov	a,r5
      0007FF 34s00            [12] 1789 	addc	a,#(_pm_prefix >> 8)
      000801 F5 83            [12] 1790 	mov	dph,a
      000803 E0               [24] 1791 	movx	a,@dptr
      000804 85*0E 82         [24] 1792 	mov	dpl,_handle_radio_request_sloc1_1_0
      000807 85*0F 83         [24] 1793 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      00080A F0               [24] 1794 	movx	@dptr,a
      00080B 0C               [12] 1795 	inc	r4
      00080C BC 00 BC         [24] 1796 	cjne	r4,#0x00,00228$
      00080F 0D               [12] 1797 	inc	r5
      000810 80 B9            [24] 1798 	sjmp	00228$
      000812                       1799 00107$:
                                   1800 ;	src/radio.c:290: read_register(R_RX_PAYLOAD, &payload[pm_prefix_length], pm_payload_length);
      000812 EA               [12] 1801 	mov	a,r2
      000813 24r47            [12] 1802 	add	a,#_handle_radio_request_payload_262144_80
      000815 FA               [12] 1803 	mov	r2,a
      000816 EB               [12] 1804 	mov	a,r3
      000817 34s00            [12] 1805 	addc	a,#(_handle_radio_request_payload_262144_80 >> 8)
      000819 FB               [12] 1806 	mov	r3,a
      00081A 7D 00            [12] 1807 	mov	r5,#0x00
      00081C 90r00r09         [24] 1808 	mov	dptr,#_pm_payload_length
      00081F E0               [24] 1809 	movx	a,@dptr
      000820 FC               [12] 1810 	mov	r4,a
      000821 90r00r28         [24] 1811 	mov	dptr,#_spi_read_PARM_2
      000824 EA               [12] 1812 	mov	a,r2
      000825 F0               [24] 1813 	movx	@dptr,a
      000826 EB               [12] 1814 	mov	a,r3
      000827 A3               [24] 1815 	inc	dptr
      000828 F0               [24] 1816 	movx	@dptr,a
      000829 ED               [12] 1817 	mov	a,r5
      00082A A3               [24] 1818 	inc	dptr
      00082B F0               [24] 1819 	movx	@dptr,a
      00082C 90r00r2B         [24] 1820 	mov	dptr,#_spi_read_PARM_3
      00082F EC               [12] 1821 	mov	a,r4
      000830 F0               [24] 1822 	movx	@dptr,a
      000831 75 82 61         [24] 1823 	mov	dpl,#0x61
      000834 12r04r0F         [24] 1824 	lcall	_spi_read
                                   1825 ;	src/radio.c:297: for(offset = 0; offset < 2; offset++)
      000837 7C 00            [12] 1826 	mov	r4,#0x00
      000839 7D 00            [12] 1827 	mov	r5,#0x00
      00083B                       1828 00238$:
                                   1829 ;	src/radio.c:300: if(offset == 1)
      00083B BC 01 74         [24] 1830 	cjne	r4,#0x01,00113$
      00083E BD 00 71         [24] 1831 	cjne	r5,#0x00,00113$
                                   1832 ;	src/radio.c:302: for(x = 31; x >= 0; x--)
      000841 7A 1F            [12] 1833 	mov	r2,#0x1f
      000843 7B 00            [12] 1834 	mov	r3,#0x00
      000845                       1835 00230$:
                                   1836 ;	src/radio.c:304: if(x > 0) payload[x] = payload[x - 1] << 7 | payload[x] >> 1;
      000845 C3               [12] 1837 	clr	c
      000846 E4               [12] 1838 	clr	a
      000847 9A               [12] 1839 	subb	a,r2
      000848 74 80            [12] 1840 	mov	a,#(0x00 ^ 0x80)
      00084A 8B F0            [24] 1841 	mov	b,r3
      00084C 63 F0 80         [24] 1842 	xrl	b,#0x80
      00084F 95 F0            [12] 1843 	subb	a,b
      000851 50 3A            [24] 1844 	jnc	00109$
      000853 C0 04            [24] 1845 	push	ar4
      000855 C0 05            [24] 1846 	push	ar5
      000857 EA               [12] 1847 	mov	a,r2
      000858 24r47            [12] 1848 	add	a,#_handle_radio_request_payload_262144_80
      00085A F8               [12] 1849 	mov	r0,a
      00085B EB               [12] 1850 	mov	a,r3
      00085C 34s00            [12] 1851 	addc	a,#(_handle_radio_request_payload_262144_80 >> 8)
      00085E F9               [12] 1852 	mov	r1,a
      00085F 8A 05            [24] 1853 	mov	ar5,r2
      000861 1D               [12] 1854 	dec	r5
      000862 ED               [12] 1855 	mov	a,r5
      000863 33               [12] 1856 	rlc	a
      000864 95 E0            [12] 1857 	subb	a,acc
      000866 FC               [12] 1858 	mov	r4,a
      000867 ED               [12] 1859 	mov	a,r5
      000868 24r47            [12] 1860 	add	a,#_handle_radio_request_payload_262144_80
      00086A F5 82            [12] 1861 	mov	dpl,a
      00086C EC               [12] 1862 	mov	a,r4
      00086D 34s00            [12] 1863 	addc	a,#(_handle_radio_request_payload_262144_80 >> 8)
      00086F F5 83            [12] 1864 	mov	dph,a
      000871 E0               [24] 1865 	movx	a,@dptr
      000872 03               [12] 1866 	rr	a
      000873 54 80            [12] 1867 	anl	a,#0x80
      000875 FD               [12] 1868 	mov	r5,a
      000876 88 82            [24] 1869 	mov	dpl,r0
      000878 89 83            [24] 1870 	mov	dph,r1
      00087A E0               [24] 1871 	movx	a,@dptr
      00087B C3               [12] 1872 	clr	c
      00087C 13               [12] 1873 	rrc	a
      00087D FC               [12] 1874 	mov	r4,a
      00087E ED               [12] 1875 	mov	a,r5
      00087F 42 04            [12] 1876 	orl	ar4,a
      000881 88 82            [24] 1877 	mov	dpl,r0
      000883 89 83            [24] 1878 	mov	dph,r1
      000885 EC               [12] 1879 	mov	a,r4
      000886 F0               [24] 1880 	movx	@dptr,a
      000887 D0 05            [24] 1881 	pop	ar5
      000889 D0 04            [24] 1882 	pop	ar4
      00088B 80 1C            [24] 1883 	sjmp	00231$
      00088D                       1884 00109$:
                                   1885 ;	src/radio.c:305: else payload[x] = payload[x] >> 1;
      00088D C0 04            [24] 1886 	push	ar4
      00088F C0 05            [24] 1887 	push	ar5
      000891 EA               [12] 1888 	mov	a,r2
      000892 24r47            [12] 1889 	add	a,#_handle_radio_request_payload_262144_80
      000894 F8               [12] 1890 	mov	r0,a
      000895 EB               [12] 1891 	mov	a,r3
      000896 34s00            [12] 1892 	addc	a,#(_handle_radio_request_payload_262144_80 >> 8)
      000898 F9               [12] 1893 	mov	r1,a
      000899 88 82            [24] 1894 	mov	dpl,r0
      00089B 89 83            [24] 1895 	mov	dph,r1
      00089D E0               [24] 1896 	movx	a,@dptr
      00089E C3               [12] 1897 	clr	c
      00089F 13               [12] 1898 	rrc	a
      0008A0 88 82            [24] 1899 	mov	dpl,r0
      0008A2 89 83            [24] 1900 	mov	dph,r1
      0008A4 F0               [24] 1901 	movx	@dptr,a
                                   1902 ;	src/radio.c:583: in1bc = 1;
      0008A5 D0 05            [24] 1903 	pop	ar5
      0008A7 D0 04            [24] 1904 	pop	ar4
                                   1905 ;	src/radio.c:305: else payload[x] = payload[x] >> 1;
      0008A9                       1906 00231$:
                                   1907 ;	src/radio.c:302: for(x = 31; x >= 0; x--)
      0008A9 1A               [12] 1908 	dec	r2
      0008AA BA FF 01         [24] 1909 	cjne	r2,#0xff,00540$
      0008AD 1B               [12] 1910 	dec	r3
      0008AE                       1911 00540$:
      0008AE EB               [12] 1912 	mov	a,r3
      0008AF 30 E7 93         [24] 1913 	jnb	acc.7,00230$
      0008B2                       1914 00113$:
                                   1915 ;	src/radio.c:310: payload_length = payload[5] >> 2;
      0008B2 C0 04            [24] 1916 	push	ar4
      0008B4 C0 05            [24] 1917 	push	ar5
      0008B6 90r00r4C         [24] 1918 	mov	dptr,#(_handle_radio_request_payload_262144_80 + 0x0005)
      0008B9 E0               [24] 1919 	movx	a,@dptr
      0008BA 03               [12] 1920 	rr	a
      0008BB 03               [12] 1921 	rr	a
      0008BC 54 3F            [12] 1922 	anl	a,#0x3f
      0008BE FB               [12] 1923 	mov	r3,a
                                   1924 ;	src/radio.c:315: if(payload_length <= (pm_payload_length-9) + pm_prefix_length)
      0008BF 90r00r09         [24] 1925 	mov	dptr,#_pm_payload_length
      0008C2 E0               [24] 1926 	movx	a,@dptr
      0008C3 7A 00            [12] 1927 	mov	r2,#0x00
      0008C5 24 F7            [12] 1928 	add	a,#0xf7
      0008C7 F9               [12] 1929 	mov	r1,a
      0008C8 EA               [12] 1930 	mov	a,r2
      0008C9 34 FF            [12] 1931 	addc	a,#0xff
      0008CB FA               [12] 1932 	mov	r2,a
      0008CC 90r00r02         [24] 1933 	mov	dptr,#_pm_prefix_length
      0008CF E0               [24] 1934 	movx	a,@dptr
      0008D0 F8               [12] 1935 	mov	r0,a
      0008D1 A3               [24] 1936 	inc	dptr
      0008D2 E0               [24] 1937 	movx	a,@dptr
      0008D3 FD               [12] 1938 	mov	r5,a
      0008D4 E8               [12] 1939 	mov	a,r0
      0008D5 29               [12] 1940 	add	a,r1
      0008D6 F9               [12] 1941 	mov	r1,a
      0008D7 ED               [12] 1942 	mov	a,r5
      0008D8 3A               [12] 1943 	addc	a,r2
      0008D9 FA               [12] 1944 	mov	r2,a
      0008DA 8B*0E            [24] 1945 	mov	_handle_radio_request_sloc1_1_0,r3
      0008DC 75*0F 00         [24] 1946 	mov	(_handle_radio_request_sloc1_1_0 + 1),#0x00
      0008DF C3               [12] 1947 	clr	c
      0008E0 E9               [12] 1948 	mov	a,r1
      0008E1 95*0E            [12] 1949 	subb	a,_handle_radio_request_sloc1_1_0
      0008E3 EA               [12] 1950 	mov	a,r2
      0008E4 64 80            [12] 1951 	xrl	a,#0x80
      0008E6 85*0F F0         [24] 1952 	mov	b,(_handle_radio_request_sloc1_1_0 + 1)
      0008E9 63 F0 80         [24] 1953 	xrl	b,#0x80
      0008EC 95 F0            [12] 1954 	subb	a,b
      0008EE D0 05            [24] 1955 	pop	ar5
      0008F0 D0 04            [24] 1956 	pop	ar4
      0008F2 50 03            [24] 1957 	jnc	00542$
      0008F4 02r0Br11         [24] 1958 	ljmp	00239$
      0008F7                       1959 00542$:
                                   1960 ;	src/radio.c:318: crc_given = (payload[6 + payload_length] << 9) | ((payload[7 + payload_length]) << 1);
      0008F7 C0 04            [24] 1961 	push	ar4
      0008F9 C0 05            [24] 1962 	push	ar5
      0008FB 74 06            [12] 1963 	mov	a,#0x06
      0008FD 2B               [12] 1964 	add	a,r3
      0008FE F9               [12] 1965 	mov	r1,a
      0008FF 33               [12] 1966 	rlc	a
      000900 95 E0            [12] 1967 	subb	a,acc
      000902 FA               [12] 1968 	mov	r2,a
      000903 E9               [12] 1969 	mov	a,r1
      000904 24r47            [12] 1970 	add	a,#_handle_radio_request_payload_262144_80
      000906 F5 82            [12] 1971 	mov	dpl,a
      000908 EA               [12] 1972 	mov	a,r2
      000909 34s00            [12] 1973 	addc	a,#(_handle_radio_request_payload_262144_80 >> 8)
      00090B F5 83            [12] 1974 	mov	dph,a
      00090D E0               [24] 1975 	movx	a,@dptr
      00090E F9               [12] 1976 	mov	r1,a
      00090F 7A 00            [12] 1977 	mov	r2,#0x00
      000911 29               [12] 1978 	add	a,r1
      000912 CA               [12] 1979 	xch	a,r2
      000913 79 00            [12] 1980 	mov	r1,#0x00
      000915 74 07            [12] 1981 	mov	a,#0x07
      000917 2B               [12] 1982 	add	a,r3
      000918 F8               [12] 1983 	mov	r0,a
      000919 33               [12] 1984 	rlc	a
      00091A 95 E0            [12] 1985 	subb	a,acc
      00091C FD               [12] 1986 	mov	r5,a
      00091D E8               [12] 1987 	mov	a,r0
      00091E 24r47            [12] 1988 	add	a,#_handle_radio_request_payload_262144_80
      000920 F5 82            [12] 1989 	mov	dpl,a
      000922 ED               [12] 1990 	mov	a,r5
      000923 34s00            [12] 1991 	addc	a,#(_handle_radio_request_payload_262144_80 >> 8)
      000925 F5 83            [12] 1992 	mov	dph,a
      000927 E0               [24] 1993 	movx	a,@dptr
      000928 7C 00            [12] 1994 	mov	r4,#0x00
      00092A 25 E0            [12] 1995 	add	a,acc
      00092C FD               [12] 1996 	mov	r5,a
      00092D EC               [12] 1997 	mov	a,r4
      00092E 33               [12] 1998 	rlc	a
      00092F FC               [12] 1999 	mov	r4,a
      000930 ED               [12] 2000 	mov	a,r5
      000931 42 01            [12] 2001 	orl	ar1,a
      000933 EC               [12] 2002 	mov	a,r4
      000934 42 02            [12] 2003 	orl	ar2,a
                                   2004 ;	src/radio.c:319: crc_given = (crc_given << 8) | (crc_given >> 8);
      000936 8A*11            [24] 2005 	mov	_handle_radio_request_sloc2_1_0,r2
      000938 89*12            [24] 2006 	mov	(_handle_radio_request_sloc2_1_0 + 1),r1
      00093A 90r00r45         [24] 2007 	mov	dptr,#_handle_radio_request_crc_given_262144_80
      00093D E5*11            [12] 2008 	mov	a,_handle_radio_request_sloc2_1_0
      00093F F0               [24] 2009 	movx	@dptr,a
      000940 E5*12            [12] 2010 	mov	a,(_handle_radio_request_sloc2_1_0 + 1)
      000942 A3               [24] 2011 	inc	dptr
      000943 F0               [24] 2012 	movx	@dptr,a
                                   2013 ;	src/radio.c:320: if(payload[8 + payload_length] & 0x80) crc_given |= 0x100;
      000944 74 08            [12] 2014 	mov	a,#0x08
      000946 2B               [12] 2015 	add	a,r3
      000947 FD               [12] 2016 	mov	r5,a
      000948 33               [12] 2017 	rlc	a
      000949 95 E0            [12] 2018 	subb	a,acc
      00094B FC               [12] 2019 	mov	r4,a
      00094C ED               [12] 2020 	mov	a,r5
      00094D 24r47            [12] 2021 	add	a,#_handle_radio_request_payload_262144_80
      00094F F5 82            [12] 2022 	mov	dpl,a
      000951 EC               [12] 2023 	mov	a,r4
      000952 34s00            [12] 2024 	addc	a,#(_handle_radio_request_payload_262144_80 >> 8)
      000954 F5 83            [12] 2025 	mov	dph,a
      000956 E0               [24] 2026 	movx	a,@dptr
      000957 D0 05            [24] 2027 	pop	ar5
      000959 D0 04            [24] 2028 	pop	ar4
      00095B 30 E7 0C         [24] 2029 	jnb	acc.7,00115$
      00095E 90r00r45         [24] 2030 	mov	dptr,#_handle_radio_request_crc_given_262144_80
      000961 E5*11            [12] 2031 	mov	a,_handle_radio_request_sloc2_1_0
      000963 F0               [24] 2032 	movx	@dptr,a
      000964 74 01            [12] 2033 	mov	a,#0x01
      000966 45*12            [12] 2034 	orl	a,(_handle_radio_request_sloc2_1_0 + 1)
      000968 A3               [24] 2035 	inc	dptr
      000969 F0               [24] 2036 	movx	@dptr,a
      00096A                       2037 00115$:
                                   2038 ;	src/radio.c:323: crc = 0xFFFF;
      00096A 90r00r43         [24] 2039 	mov	dptr,#_handle_radio_request_crc_262144_80
      00096D 74 FF            [12] 2040 	mov	a,#0xff
      00096F F0               [24] 2041 	movx	@dptr,a
      000970 A3               [24] 2042 	inc	dptr
      000971 F0               [24] 2043 	movx	@dptr,a
                                   2044 ;	src/radio.c:324: for(x = 0; x < 6 + payload_length; x++) crc = crc_update(crc, payload[x], 8);
      000972 74 06            [12] 2045 	mov	a,#0x06
      000974 25*0E            [12] 2046 	add	a,_handle_radio_request_sloc1_1_0
      000976 F9               [12] 2047 	mov	r1,a
      000977 E4               [12] 2048 	clr	a
      000978 35*0F            [12] 2049 	addc	a,(_handle_radio_request_sloc1_1_0 + 1)
      00097A FA               [12] 2050 	mov	r2,a
      00097B E4               [12] 2051 	clr	a
      00097C F5*11            [12] 2052 	mov	_handle_radio_request_sloc2_1_0,a
      00097E F5*12            [12] 2053 	mov	(_handle_radio_request_sloc2_1_0 + 1),a
      000980                       2054 00233$:
      000980 C3               [12] 2055 	clr	c
      000981 E5*11            [12] 2056 	mov	a,_handle_radio_request_sloc2_1_0
      000983 99               [12] 2057 	subb	a,r1
      000984 E5*12            [12] 2058 	mov	a,(_handle_radio_request_sloc2_1_0 + 1)
      000986 64 80            [12] 2059 	xrl	a,#0x80
      000988 8A F0            [24] 2060 	mov	b,r2
      00098A 63 F0 80         [24] 2061 	xrl	b,#0x80
      00098D 95 F0            [12] 2062 	subb	a,b
      00098F 50 5A            [24] 2063 	jnc	00116$
      000991 C0 04            [24] 2064 	push	ar4
      000993 C0 05            [24] 2065 	push	ar5
      000995 90r00r43         [24] 2066 	mov	dptr,#_handle_radio_request_crc_262144_80
      000998 E0               [24] 2067 	movx	a,@dptr
      000999 F8               [12] 2068 	mov	r0,a
      00099A A3               [24] 2069 	inc	dptr
      00099B E0               [24] 2070 	movx	a,@dptr
      00099C FD               [12] 2071 	mov	r5,a
      00099D E5*11            [12] 2072 	mov	a,_handle_radio_request_sloc2_1_0
      00099F 24r47            [12] 2073 	add	a,#_handle_radio_request_payload_262144_80
      0009A1 F5 82            [12] 2074 	mov	dpl,a
      0009A3 E5*12            [12] 2075 	mov	a,(_handle_radio_request_sloc2_1_0 + 1)
      0009A5 34s00            [12] 2076 	addc	a,#(_handle_radio_request_payload_262144_80 >> 8)
      0009A7 F5 83            [12] 2077 	mov	dph,a
      0009A9 E0               [24] 2078 	movx	a,@dptr
      0009AA FC               [12] 2079 	mov	r4,a
      0009AB 90r00r31         [24] 2080 	mov	dptr,#_crc_update_PARM_2
      0009AE F0               [24] 2081 	movx	@dptr,a
      0009AF 90r00r32         [24] 2082 	mov	dptr,#_crc_update_PARM_3
      0009B2 74 08            [12] 2083 	mov	a,#0x08
      0009B4 F0               [24] 2084 	movx	@dptr,a
      0009B5 88 82            [24] 2085 	mov	dpl,r0
      0009B7 8D 83            [24] 2086 	mov	dph,r5
      0009B9 C0 05            [24] 2087 	push	ar5
      0009BB C0 04            [24] 2088 	push	ar4
      0009BD C0 03            [24] 2089 	push	ar3
      0009BF C0 02            [24] 2090 	push	ar2
      0009C1 C0 01            [24] 2091 	push	ar1
      0009C3 12r04rD0         [24] 2092 	lcall	_crc_update
      0009C6 E5 82            [12] 2093 	mov	a,dpl
      0009C8 85 83 F0         [24] 2094 	mov	b,dph
      0009CB D0 01            [24] 2095 	pop	ar1
      0009CD D0 02            [24] 2096 	pop	ar2
      0009CF D0 03            [24] 2097 	pop	ar3
      0009D1 D0 04            [24] 2098 	pop	ar4
      0009D3 D0 05            [24] 2099 	pop	ar5
      0009D5 90r00r43         [24] 2100 	mov	dptr,#_handle_radio_request_crc_262144_80
      0009D8 F0               [24] 2101 	movx	@dptr,a
      0009D9 E5 F0            [12] 2102 	mov	a,b
      0009DB A3               [24] 2103 	inc	dptr
      0009DC F0               [24] 2104 	movx	@dptr,a
      0009DD 05*11            [12] 2105 	inc	_handle_radio_request_sloc2_1_0
      0009DF E4               [12] 2106 	clr	a
      0009E0 B5*11 02         [24] 2107 	cjne	a,_handle_radio_request_sloc2_1_0,00545$
      0009E3 05*12            [12] 2108 	inc	(_handle_radio_request_sloc2_1_0 + 1)
      0009E5                       2109 00545$:
      0009E5 D0 05            [24] 2110 	pop	ar5
      0009E7 D0 04            [24] 2111 	pop	ar4
      0009E9 80 95            [24] 2112 	sjmp	00233$
      0009EB                       2113 00116$:
                                   2114 ;	src/radio.c:325: crc = crc_update(crc, payload[6 + payload_length] & 0x80, 1);
      0009EB C0 04            [24] 2115 	push	ar4
      0009ED C0 05            [24] 2116 	push	ar5
      0009EF 90r00r43         [24] 2117 	mov	dptr,#_handle_radio_request_crc_262144_80
      0009F2 E0               [24] 2118 	movx	a,@dptr
      0009F3 F9               [12] 2119 	mov	r1,a
      0009F4 A3               [24] 2120 	inc	dptr
      0009F5 E0               [24] 2121 	movx	a,@dptr
      0009F6 FA               [12] 2122 	mov	r2,a
      0009F7 74 06            [12] 2123 	mov	a,#0x06
      0009F9 2B               [12] 2124 	add	a,r3
      0009FA F8               [12] 2125 	mov	r0,a
      0009FB 33               [12] 2126 	rlc	a
      0009FC 95 E0            [12] 2127 	subb	a,acc
      0009FE FD               [12] 2128 	mov	r5,a
      0009FF E8               [12] 2129 	mov	a,r0
      000A00 24r47            [12] 2130 	add	a,#_handle_radio_request_payload_262144_80
      000A02 F5 82            [12] 2131 	mov	dpl,a
      000A04 ED               [12] 2132 	mov	a,r5
      000A05 34s00            [12] 2133 	addc	a,#(_handle_radio_request_payload_262144_80 >> 8)
      000A07 F5 83            [12] 2134 	mov	dph,a
      000A09 E0               [24] 2135 	movx	a,@dptr
      000A0A FD               [12] 2136 	mov	r5,a
      000A0B 90r00r31         [24] 2137 	mov	dptr,#_crc_update_PARM_2
      000A0E 74 80            [12] 2138 	mov	a,#0x80
      000A10 5D               [12] 2139 	anl	a,r5
      000A11 F0               [24] 2140 	movx	@dptr,a
      000A12 90r00r32         [24] 2141 	mov	dptr,#_crc_update_PARM_3
      000A15 74 01            [12] 2142 	mov	a,#0x01
      000A17 F0               [24] 2143 	movx	@dptr,a
      000A18 89 82            [24] 2144 	mov	dpl,r1
      000A1A 8A 83            [24] 2145 	mov	dph,r2
      000A1C C0 03            [24] 2146 	push	ar3
      000A1E 12r04rD0         [24] 2147 	lcall	_crc_update
      000A21 AC 82            [24] 2148 	mov	r4,dpl
      000A23 AD 83            [24] 2149 	mov	r5,dph
      000A25 D0 03            [24] 2150 	pop	ar3
                                   2151 ;	src/radio.c:326: crc = (crc << 8) | (crc >> 8);
      000A27 EC               [12] 2152 	mov	a,r4
      000A28 8D 04            [24] 2153 	mov	ar4,r5
      000A2A FD               [12] 2154 	mov	r5,a
                                   2155 ;	src/radio.c:329: if(crc == crc_given)
      000A2B 90r00r45         [24] 2156 	mov	dptr,#_handle_radio_request_crc_given_262144_80
      000A2E E0               [24] 2157 	movx	a,@dptr
      000A2F F9               [12] 2158 	mov	r1,a
      000A30 A3               [24] 2159 	inc	dptr
      000A31 E0               [24] 2160 	movx	a,@dptr
      000A32 FA               [12] 2161 	mov	r2,a
      000A33 EC               [12] 2162 	mov	a,r4
      000A34 B5 01 06         [24] 2163 	cjne	a,ar1,00546$
      000A37 ED               [12] 2164 	mov	a,r5
      000A38 B5 02 02         [24] 2165 	cjne	a,ar2,00546$
      000A3B 80 07            [24] 2166 	sjmp	00547$
      000A3D                       2167 00546$:
      000A3D D0 05            [24] 2168 	pop	ar5
      000A3F D0 04            [24] 2169 	pop	ar4
      000A41 02r0Br11         [24] 2170 	ljmp	00239$
      000A44                       2171 00547$:
      000A44 D0 05            [24] 2172 	pop	ar5
      000A46 D0 04            [24] 2173 	pop	ar4
                                   2174 ;	src/radio.c:332: memcpy(in1buf, payload, 5);
      000A48 90r00r00         [24] 2175 	mov	dptr,#_memcpy_PARM_2
      000A4B 74r47            [12] 2176 	mov	a,#_handle_radio_request_payload_262144_80
      000A4D F0               [24] 2177 	movx	@dptr,a
      000A4E 74s00            [12] 2178 	mov	a,#(_handle_radio_request_payload_262144_80 >> 8)
      000A50 A3               [24] 2179 	inc	dptr
      000A51 F0               [24] 2180 	movx	@dptr,a
      000A52 E4               [12] 2181 	clr	a
      000A53 A3               [24] 2182 	inc	dptr
      000A54 F0               [24] 2183 	movx	@dptr,a
      000A55 90r00r00         [24] 2184 	mov	dptr,#_memcpy_PARM_3
      000A58 74 05            [12] 2185 	mov	a,#0x05
      000A5A F0               [24] 2186 	movx	@dptr,a
      000A5B E4               [12] 2187 	clr	a
      000A5C A3               [24] 2188 	inc	dptr
      000A5D F0               [24] 2189 	movx	@dptr,a
      000A5E 90 C6 80         [24] 2190 	mov	dptr,#_in1buf
      000A61 75 F0 00         [24] 2191 	mov	b,#0x00
      000A64 C0 03            [24] 2192 	push	ar3
      000A66 12r00r00         [24] 2193 	lcall	_memcpy
      000A69 D0 03            [24] 2194 	pop	ar3
                                   2195 ;	src/radio.c:335: for(x = 0; x < payload_length + 3; x++)
      000A6B 74 03            [12] 2196 	mov	a,#0x03
      000A6D 25*0E            [12] 2197 	add	a,_handle_radio_request_sloc1_1_0
      000A6F F9               [12] 2198 	mov	r1,a
      000A70 E4               [12] 2199 	clr	a
      000A71 35*0F            [12] 2200 	addc	a,(_handle_radio_request_sloc1_1_0 + 1)
      000A73 FA               [12] 2201 	mov	r2,a
      000A74 E4               [12] 2202 	clr	a
      000A75 F5*11            [12] 2203 	mov	_handle_radio_request_sloc2_1_0,a
      000A77 F5*12            [12] 2204 	mov	(_handle_radio_request_sloc2_1_0 + 1),a
      000A79                       2205 00236$:
      000A79 C3               [12] 2206 	clr	c
      000A7A E5*11            [12] 2207 	mov	a,_handle_radio_request_sloc2_1_0
      000A7C 99               [12] 2208 	subb	a,r1
      000A7D E5*12            [12] 2209 	mov	a,(_handle_radio_request_sloc2_1_0 + 1)
      000A7F 64 80            [12] 2210 	xrl	a,#0x80
      000A81 8A F0            [24] 2211 	mov	b,r2
      000A83 63 F0 80         [24] 2212 	xrl	b,#0x80
      000A86 95 F0            [12] 2213 	subb	a,b
      000A88 50 6D            [24] 2214 	jnc	00117$
                                   2215 ;	src/radio.c:336: in1buf[5+x] = ((payload[6 + x] << 1) & 0xFF) | (payload[7 + x] >> 7);
      000A8A C0 01            [24] 2216 	push	ar1
      000A8C C0 02            [24] 2217 	push	ar2
      000A8E A8*11            [24] 2218 	mov	r0,_handle_radio_request_sloc2_1_0
      000A90 74 05            [12] 2219 	mov	a,#0x05
      000A92 28               [12] 2220 	add	a,r0
      000A93 F9               [12] 2221 	mov	r1,a
      000A94 33               [12] 2222 	rlc	a
      000A95 95 E0            [12] 2223 	subb	a,acc
      000A97 FA               [12] 2224 	mov	r2,a
      000A98 E9               [12] 2225 	mov	a,r1
      000A99 24 80            [12] 2226 	add	a,#_in1buf
      000A9B F5*0E            [12] 2227 	mov	_handle_radio_request_sloc1_1_0,a
      000A9D EA               [12] 2228 	mov	a,r2
      000A9E 34 C6            [12] 2229 	addc	a,#(_in1buf >> 8)
      000AA0 F5*0F            [12] 2230 	mov	(_handle_radio_request_sloc1_1_0 + 1),a
      000AA2 74 06            [12] 2231 	mov	a,#0x06
      000AA4 28               [12] 2232 	add	a,r0
      000AA5 F9               [12] 2233 	mov	r1,a
      000AA6 33               [12] 2234 	rlc	a
      000AA7 95 E0            [12] 2235 	subb	a,acc
      000AA9 FA               [12] 2236 	mov	r2,a
      000AAA E9               [12] 2237 	mov	a,r1
      000AAB 24r47            [12] 2238 	add	a,#_handle_radio_request_payload_262144_80
      000AAD F5 82            [12] 2239 	mov	dpl,a
      000AAF EA               [12] 2240 	mov	a,r2
      000AB0 34s00            [12] 2241 	addc	a,#(_handle_radio_request_payload_262144_80 >> 8)
      000AB2 F5 83            [12] 2242 	mov	dph,a
      000AB4 E0               [24] 2243 	movx	a,@dptr
      000AB5 25 E0            [12] 2244 	add	a,acc
      000AB7 F9               [12] 2245 	mov	r1,a
      000AB8 33               [12] 2246 	rlc	a
      000AB9 95 E0            [12] 2247 	subb	a,acc
      000ABB 89*13            [24] 2248 	mov	_handle_radio_request_sloc3_1_0,r1
      000ABD 75*14 00         [24] 2249 	mov	(_handle_radio_request_sloc3_1_0 + 1),#0x00
      000AC0 74 07            [12] 2250 	mov	a,#0x07
      000AC2 28               [12] 2251 	add	a,r0
      000AC3 F8               [12] 2252 	mov	r0,a
      000AC4 33               [12] 2253 	rlc	a
      000AC5 95 E0            [12] 2254 	subb	a,acc
      000AC7 FA               [12] 2255 	mov	r2,a
      000AC8 E8               [12] 2256 	mov	a,r0
      000AC9 24r47            [12] 2257 	add	a,#_handle_radio_request_payload_262144_80
      000ACB F5 82            [12] 2258 	mov	dpl,a
      000ACD EA               [12] 2259 	mov	a,r2
      000ACE 34s00            [12] 2260 	addc	a,#(_handle_radio_request_payload_262144_80 >> 8)
      000AD0 F5 83            [12] 2261 	mov	dph,a
      000AD2 E0               [24] 2262 	movx	a,@dptr
      000AD3 23               [12] 2263 	rl	a
      000AD4 54 01            [12] 2264 	anl	a,#0x01
      000AD6 F9               [12] 2265 	mov	r1,a
      000AD7 7A 00            [12] 2266 	mov	r2,#0x00
      000AD9 E5*13            [12] 2267 	mov	a,_handle_radio_request_sloc3_1_0
      000ADB 42 01            [12] 2268 	orl	ar1,a
      000ADD E5*14            [12] 2269 	mov	a,(_handle_radio_request_sloc3_1_0 + 1)
      000ADF 42 02            [12] 2270 	orl	ar2,a
      000AE1 85*0E 82         [24] 2271 	mov	dpl,_handle_radio_request_sloc1_1_0
      000AE4 85*0F 83         [24] 2272 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      000AE7 E9               [12] 2273 	mov	a,r1
      000AE8 F0               [24] 2274 	movx	@dptr,a
                                   2275 ;	src/radio.c:335: for(x = 0; x < payload_length + 3; x++)
      000AE9 05*11            [12] 2276 	inc	_handle_radio_request_sloc2_1_0
      000AEB E4               [12] 2277 	clr	a
      000AEC B5*11 02         [24] 2278 	cjne	a,_handle_radio_request_sloc2_1_0,00549$
      000AEF 05*12            [12] 2279 	inc	(_handle_radio_request_sloc2_1_0 + 1)
      000AF1                       2280 00549$:
      000AF1 D0 02            [24] 2281 	pop	ar2
      000AF3 D0 01            [24] 2282 	pop	ar1
      000AF5 80 82            [24] 2283 	sjmp	00236$
      000AF7                       2284 00117$:
                                   2285 ;	src/radio.c:337: in1bc = 5 + payload_length;
      000AF7 74 05            [12] 2286 	mov	a,#0x05
      000AF9 2B               [12] 2287 	add	a,r3
      000AFA 90 C7 B7         [24] 2288 	mov	dptr,#0xc7b7
      000AFD F0               [24] 2289 	movx	@dptr,a
                                   2290 ;	src/radio.c:338: flush_rx();
      000AFE 90r00r23         [24] 2291 	mov	dptr,#_spi_write_PARM_2
      000B01 E4               [12] 2292 	clr	a
      000B02 F0               [24] 2293 	movx	@dptr,a
      000B03 A3               [24] 2294 	inc	dptr
      000B04 F0               [24] 2295 	movx	@dptr,a
      000B05 A3               [24] 2296 	inc	dptr
      000B06 F0               [24] 2297 	movx	@dptr,a
      000B07 90r00r26         [24] 2298 	mov	dptr,#_spi_write_PARM_3
      000B0A F0               [24] 2299 	movx	@dptr,a
      000B0B 75 82 E2         [24] 2300 	mov	dpl,#0xe2
                                   2301 ;	src/radio.c:339: return;
      000B0E 02r03r9B         [24] 2302 	ljmp	_spi_write
      000B11                       2303 00239$:
                                   2304 ;	src/radio.c:297: for(offset = 0; offset < 2; offset++)
      000B11 0C               [12] 2305 	inc	r4
      000B12 BC 00 01         [24] 2306 	cjne	r4,#0x00,00550$
      000B15 0D               [12] 2307 	inc	r5
      000B16                       2308 00550$:
      000B16 C3               [12] 2309 	clr	c
      000B17 EC               [12] 2310 	mov	a,r4
      000B18 94 02            [12] 2311 	subb	a,#0x02
      000B1A ED               [12] 2312 	mov	a,r5
      000B1B 64 80            [12] 2313 	xrl	a,#0x80
      000B1D 94 80            [12] 2314 	subb	a,#0x80
      000B1F 50 03            [24] 2315 	jnc	00551$
      000B21 02r08r3B         [24] 2316 	ljmp	00238$
      000B24                       2317 00551$:
      000B24 02r0BrDF         [24] 2318 	ljmp	00133$
      000B27                       2319 00127$:
                                   2320 ;	src/radio.c:346: else if(radio_mode == promiscuous_generic)
      000B27 BE 02 02         [24] 2321 	cjne	r6,#0x02,00552$
      000B2A 80 03            [24] 2322 	sjmp	00553$
      000B2C                       2323 00552$:
      000B2C 02r0BrDF         [24] 2324 	ljmp	00133$
      000B2F                       2325 00553$:
                                   2326 ;	src/radio.c:352: for(x = 0; x < pm_prefix_length; x++) payload[pm_prefix_length - x - 1] = pm_prefix[x];
      000B2F 7D 00            [12] 2327 	mov	r5,#0x00
      000B31 7E 00            [12] 2328 	mov	r6,#0x00
      000B33                       2329 00241$:
      000B33 90r00r02         [24] 2330 	mov	dptr,#_pm_prefix_length
      000B36 E0               [24] 2331 	movx	a,@dptr
      000B37 FB               [12] 2332 	mov	r3,a
      000B38 A3               [24] 2333 	inc	dptr
      000B39 E0               [24] 2334 	movx	a,@dptr
      000B3A FC               [12] 2335 	mov	r4,a
      000B3B C3               [12] 2336 	clr	c
      000B3C ED               [12] 2337 	mov	a,r5
      000B3D 9B               [12] 2338 	subb	a,r3
      000B3E EE               [12] 2339 	mov	a,r6
      000B3F 64 80            [12] 2340 	xrl	a,#0x80
      000B41 8C F0            [24] 2341 	mov	b,r4
      000B43 63 F0 80         [24] 2342 	xrl	b,#0x80
      000B46 95 F0            [12] 2343 	subb	a,b
      000B48 50 2C            [24] 2344 	jnc	00123$
      000B4A 8B 02            [24] 2345 	mov	ar2,r3
      000B4C 8D 01            [24] 2346 	mov	ar1,r5
      000B4E EA               [12] 2347 	mov	a,r2
      000B4F C3               [12] 2348 	clr	c
      000B50 99               [12] 2349 	subb	a,r1
      000B51 14               [12] 2350 	dec	a
      000B52 F9               [12] 2351 	mov	r1,a
      000B53 33               [12] 2352 	rlc	a
      000B54 95 E0            [12] 2353 	subb	a,acc
      000B56 FA               [12] 2354 	mov	r2,a
      000B57 E9               [12] 2355 	mov	a,r1
      000B58 24r6C            [12] 2356 	add	a,#_handle_radio_request_payload_262144_91
      000B5A F9               [12] 2357 	mov	r1,a
      000B5B EA               [12] 2358 	mov	a,r2
      000B5C 34s00            [12] 2359 	addc	a,#(_handle_radio_request_payload_262144_91 >> 8)
      000B5E FA               [12] 2360 	mov	r2,a
      000B5F ED               [12] 2361 	mov	a,r5
      000B60 24r04            [12] 2362 	add	a,#_pm_prefix
      000B62 F5 82            [12] 2363 	mov	dpl,a
      000B64 EE               [12] 2364 	mov	a,r6
      000B65 34s00            [12] 2365 	addc	a,#(_pm_prefix >> 8)
      000B67 F5 83            [12] 2366 	mov	dph,a
      000B69 E0               [24] 2367 	movx	a,@dptr
      000B6A 89 82            [24] 2368 	mov	dpl,r1
      000B6C 8A 83            [24] 2369 	mov	dph,r2
      000B6E F0               [24] 2370 	movx	@dptr,a
      000B6F 0D               [12] 2371 	inc	r5
      000B70 BD 00 C0         [24] 2372 	cjne	r5,#0x00,00241$
      000B73 0E               [12] 2373 	inc	r6
      000B74 80 BD            [24] 2374 	sjmp	00241$
      000B76                       2375 00123$:
                                   2376 ;	src/radio.c:353: read_register(R_RX_PAYLOAD, &payload[pm_prefix_length], pm_payload_length);
      000B76 EB               [12] 2377 	mov	a,r3
      000B77 24r6C            [12] 2378 	add	a,#_handle_radio_request_payload_262144_91
      000B79 FB               [12] 2379 	mov	r3,a
      000B7A EC               [12] 2380 	mov	a,r4
      000B7B 34s00            [12] 2381 	addc	a,#(_handle_radio_request_payload_262144_91 >> 8)
      000B7D FC               [12] 2382 	mov	r4,a
      000B7E 7E 00            [12] 2383 	mov	r6,#0x00
      000B80 90r00r09         [24] 2384 	mov	dptr,#_pm_payload_length
      000B83 E0               [24] 2385 	movx	a,@dptr
      000B84 FD               [12] 2386 	mov	r5,a
      000B85 90r00r28         [24] 2387 	mov	dptr,#_spi_read_PARM_2
      000B88 EB               [12] 2388 	mov	a,r3
      000B89 F0               [24] 2389 	movx	@dptr,a
      000B8A EC               [12] 2390 	mov	a,r4
      000B8B A3               [24] 2391 	inc	dptr
      000B8C F0               [24] 2392 	movx	@dptr,a
      000B8D EE               [12] 2393 	mov	a,r6
      000B8E A3               [24] 2394 	inc	dptr
      000B8F F0               [24] 2395 	movx	@dptr,a
      000B90 90r00r2B         [24] 2396 	mov	dptr,#_spi_read_PARM_3
      000B93 ED               [12] 2397 	mov	a,r5
      000B94 F0               [24] 2398 	movx	@dptr,a
      000B95 75 82 61         [24] 2399 	mov	dpl,#0x61
      000B98 12r04r0F         [24] 2400 	lcall	_spi_read
                                   2401 ;	src/radio.c:356: memcpy(in1buf, payload, pm_prefix_length + pm_payload_length);
      000B9B 90r00r09         [24] 2402 	mov	dptr,#_pm_payload_length
      000B9E E0               [24] 2403 	movx	a,@dptr
      000B9F FE               [12] 2404 	mov	r6,a
      000BA0 7D 00            [12] 2405 	mov	r5,#0x00
      000BA2 90r00r02         [24] 2406 	mov	dptr,#_pm_prefix_length
      000BA5 E0               [24] 2407 	movx	a,@dptr
      000BA6 FB               [12] 2408 	mov	r3,a
      000BA7 A3               [24] 2409 	inc	dptr
      000BA8 E0               [24] 2410 	movx	a,@dptr
      000BA9 FC               [12] 2411 	mov	r4,a
      000BAA EE               [12] 2412 	mov	a,r6
      000BAB 2B               [12] 2413 	add	a,r3
      000BAC FE               [12] 2414 	mov	r6,a
      000BAD ED               [12] 2415 	mov	a,r5
      000BAE 3C               [12] 2416 	addc	a,r4
      000BAF FD               [12] 2417 	mov	r5,a
      000BB0 90r00r00         [24] 2418 	mov	dptr,#_memcpy_PARM_2
      000BB3 74r6C            [12] 2419 	mov	a,#_handle_radio_request_payload_262144_91
      000BB5 F0               [24] 2420 	movx	@dptr,a
      000BB6 74s00            [12] 2421 	mov	a,#(_handle_radio_request_payload_262144_91 >> 8)
      000BB8 A3               [24] 2422 	inc	dptr
      000BB9 F0               [24] 2423 	movx	@dptr,a
      000BBA E4               [12] 2424 	clr	a
      000BBB A3               [24] 2425 	inc	dptr
      000BBC F0               [24] 2426 	movx	@dptr,a
      000BBD 90r00r00         [24] 2427 	mov	dptr,#_memcpy_PARM_3
      000BC0 EE               [12] 2428 	mov	a,r6
      000BC1 F0               [24] 2429 	movx	@dptr,a
      000BC2 ED               [12] 2430 	mov	a,r5
      000BC3 A3               [24] 2431 	inc	dptr
      000BC4 F0               [24] 2432 	movx	@dptr,a
      000BC5 90 C6 80         [24] 2433 	mov	dptr,#_in1buf
      000BC8 75 F0 00         [24] 2434 	mov	b,#0x00
      000BCB 12r00r00         [24] 2435 	lcall	_memcpy
                                   2436 ;	src/radio.c:357: in1bc = pm_prefix_length + pm_payload_length;
      000BCE 90r00r02         [24] 2437 	mov	dptr,#_pm_prefix_length
      000BD1 E0               [24] 2438 	movx	a,@dptr
      000BD2 FD               [12] 2439 	mov	r5,a
      000BD3 A3               [24] 2440 	inc	dptr
      000BD4 E0               [24] 2441 	movx	a,@dptr
      000BD5 90r00r09         [24] 2442 	mov	dptr,#_pm_payload_length
      000BD8 E0               [24] 2443 	movx	a,@dptr
      000BD9 2D               [12] 2444 	add	a,r5
      000BDA 90 C7 B7         [24] 2445 	mov	dptr,#0xc7b7
      000BDD F0               [24] 2446 	movx	@dptr,a
                                   2447 ;	src/radio.c:359: return;
      000BDE 22               [24] 2448 	ret
      000BDF                       2449 00133$:
                                   2450 ;	src/radio.c:364: in1bc = 1;
      000BDF 90 C7 B7         [24] 2451 	mov	dptr,#0xc7b7
      000BE2 74 01            [12] 2452 	mov	a,#0x01
      000BE4 F0               [24] 2453 	movx	@dptr,a
                                   2454 ;	src/radio.c:365: in1buf[0] = 0xFF;
      000BE5 90 C6 80         [24] 2455 	mov	dptr,#_in1buf
      000BE8 74 FF            [12] 2456 	mov	a,#0xff
      000BEA F0               [24] 2457 	movx	@dptr,a
                                   2458 ;	src/radio.c:366: return;
      000BEB 22               [24] 2459 	ret
      000BEC                       2460 00189$:
                                   2461 ;	src/radio.c:370: else if(request == ENTER_SNIFFER_MODE)
      000BEC BF 05 02         [24] 2462 	cjne	r7,#0x05,00556$
      000BEF 80 03            [24] 2463 	sjmp	00557$
      000BF1                       2464 00556$:
      000BF1 02r0CrA7         [24] 2465 	ljmp	00186$
      000BF4                       2466 00557$:
                                   2467 ;	src/radio.c:372: radio_mode = sniffer;
      000BF4 90r00r01         [24] 2468 	mov	dptr,#_radio_mode
      000BF7 E4               [12] 2469 	clr	a
      000BF8 F0               [24] 2470 	movx	@dptr,a
                                   2471 ;	src/radio.c:375: if(data[0] > 5) data[0] = 5;
      000BF9 90r00r35         [24] 2472 	mov	dptr,#_handle_radio_request_PARM_2
      000BFC E0               [24] 2473 	movx	a,@dptr
      000BFD FC               [12] 2474 	mov	r4,a
      000BFE A3               [24] 2475 	inc	dptr
      000BFF E0               [24] 2476 	movx	a,@dptr
      000C00 FD               [12] 2477 	mov	r5,a
      000C01 A3               [24] 2478 	inc	dptr
      000C02 E0               [24] 2479 	movx	a,@dptr
      000C03 FE               [12] 2480 	mov	r6,a
      000C04 8C 82            [24] 2481 	mov	dpl,r4
      000C06 8D 83            [24] 2482 	mov	dph,r5
      000C08 8E F0            [24] 2483 	mov	b,r6
      000C0A 12r00r00         [24] 2484 	lcall	__gptrget
      000C0D 24 FA            [12] 2485 	add	a,#0xff - 0x05
      000C0F 50 0B            [24] 2486 	jnc	00135$
      000C11 8C 82            [24] 2487 	mov	dpl,r4
      000C13 8D 83            [24] 2488 	mov	dph,r5
      000C15 8E F0            [24] 2489 	mov	b,r6
      000C17 74 05            [12] 2490 	mov	a,#0x05
      000C19 12r00r00         [24] 2491 	lcall	__gptrput
      000C1C                       2492 00135$:
                                   2493 ;	src/radio.c:376: if(data[0] < 2) data[0] = 2;
      000C1C 8C 82            [24] 2494 	mov	dpl,r4
      000C1E 8D 83            [24] 2495 	mov	dph,r5
      000C20 8E F0            [24] 2496 	mov	b,r6
      000C22 12r00r00         [24] 2497 	lcall	__gptrget
      000C25 FB               [12] 2498 	mov	r3,a
      000C26 BB 02 00         [24] 2499 	cjne	r3,#0x02,00559$
      000C29                       2500 00559$:
      000C29 50 0B            [24] 2501 	jnc	00137$
      000C2B 8C 82            [24] 2502 	mov	dpl,r4
      000C2D 8D 83            [24] 2503 	mov	dph,r5
      000C2F 8E F0            [24] 2504 	mov	b,r6
      000C31 74 02            [12] 2505 	mov	a,#0x02
      000C33 12r00r00         [24] 2506 	lcall	__gptrput
      000C36                       2507 00137$:
                                   2508 ;	src/radio.c:379: rfce = 0;
                                   2509 ;	assignBit
      000C36 C2 90            [12] 2510 	clr	_rfce
                                   2511 ;	src/radio.c:382: configure_address(&data[1], data[0]);
      000C38 74 01            [12] 2512 	mov	a,#0x01
      000C3A 2C               [12] 2513 	add	a,r4
      000C3B F9               [12] 2514 	mov	r1,a
      000C3C E4               [12] 2515 	clr	a
      000C3D 3D               [12] 2516 	addc	a,r5
      000C3E FA               [12] 2517 	mov	r2,a
      000C3F 8E 03            [24] 2518 	mov	ar3,r6
      000C41 8C 82            [24] 2519 	mov	dpl,r4
      000C43 8D 83            [24] 2520 	mov	dph,r5
      000C45 8E F0            [24] 2521 	mov	b,r6
      000C47 12r00r00         [24] 2522 	lcall	__gptrget
      000C4A 90r00r18         [24] 2523 	mov	dptr,#_configure_address_PARM_2
      000C4D F0               [24] 2524 	movx	@dptr,a
      000C4E 89 82            [24] 2525 	mov	dpl,r1
      000C50 8A 83            [24] 2526 	mov	dph,r2
      000C52 8B F0            [24] 2527 	mov	b,r3
      000C54 12r02rB6         [24] 2528 	lcall	_configure_address
                                   2529 ;	src/radio.c:385: configure_mac(EN_DPL | EN_ACK_PAY, DPL_P0, ENAA_NONE);
      000C57 90r00r1C         [24] 2530 	mov	dptr,#_configure_mac_PARM_2
      000C5A 74 01            [12] 2531 	mov	a,#0x01
      000C5C F0               [24] 2532 	movx	@dptr,a
      000C5D 90r00r1D         [24] 2533 	mov	dptr,#_configure_mac_PARM_3
      000C60 E4               [12] 2534 	clr	a
      000C61 F0               [24] 2535 	movx	@dptr,a
      000C62 75 82 06         [24] 2536 	mov	dpl,#0x06
      000C65 12r03r2F         [24] 2537 	lcall	_configure_mac
                                   2538 ;	src/radio.c:388: configure_phy(EN_CRC | CRC0 | PRIM_RX | PWR_UP, RATE_2M, 0);
      000C68 90r00r1F         [24] 2539 	mov	dptr,#_configure_phy_PARM_2
      000C6B 74 08            [12] 2540 	mov	a,#0x08
      000C6D F0               [24] 2541 	movx	@dptr,a
      000C6E 90r00r20         [24] 2542 	mov	dptr,#_configure_phy_PARM_3
      000C71 E4               [12] 2543 	clr	a
      000C72 F0               [24] 2544 	movx	@dptr,a
      000C73 75 82 0F         [24] 2545 	mov	dpl,#0x0f
      000C76 12r03r5C         [24] 2546 	lcall	_configure_phy
                                   2547 ;	src/radio.c:391: rfce = 1;
                                   2548 ;	assignBit
      000C79 D2 90            [12] 2549 	setb	_rfce
                                   2550 ;	src/radio.c:394: flush_rx();
      000C7B 90r00r23         [24] 2551 	mov	dptr,#_spi_write_PARM_2
      000C7E E4               [12] 2552 	clr	a
      000C7F F0               [24] 2553 	movx	@dptr,a
      000C80 A3               [24] 2554 	inc	dptr
      000C81 F0               [24] 2555 	movx	@dptr,a
      000C82 A3               [24] 2556 	inc	dptr
      000C83 F0               [24] 2557 	movx	@dptr,a
      000C84 90r00r26         [24] 2558 	mov	dptr,#_spi_write_PARM_3
      000C87 F0               [24] 2559 	movx	@dptr,a
      000C88 75 82 E2         [24] 2560 	mov	dpl,#0xe2
      000C8B 12r03r9B         [24] 2561 	lcall	_spi_write
                                   2562 ;	src/radio.c:395: flush_tx();
      000C8E 90r00r23         [24] 2563 	mov	dptr,#_spi_write_PARM_2
      000C91 E4               [12] 2564 	clr	a
      000C92 F0               [24] 2565 	movx	@dptr,a
      000C93 A3               [24] 2566 	inc	dptr
      000C94 F0               [24] 2567 	movx	@dptr,a
      000C95 A3               [24] 2568 	inc	dptr
      000C96 F0               [24] 2569 	movx	@dptr,a
      000C97 90r00r26         [24] 2570 	mov	dptr,#_spi_write_PARM_3
      000C9A F0               [24] 2571 	movx	@dptr,a
      000C9B 75 82 E1         [24] 2572 	mov	dpl,#0xe1
      000C9E 12r03r9B         [24] 2573 	lcall	_spi_write
                                   2574 ;	src/radio.c:396: in1bc = 0;
      000CA1 90 C7 B7         [24] 2575 	mov	dptr,#0xc7b7
      000CA4 E4               [12] 2576 	clr	a
      000CA5 F0               [24] 2577 	movx	@dptr,a
      000CA6 22               [24] 2578 	ret
      000CA7                       2579 00186$:
                                   2580 ;	src/radio.c:400: else if(request == TRANSMIT_ACK_PAYLOAD)
      000CA7 BF 08 02         [24] 2581 	cjne	r7,#0x08,00561$
      000CAA 80 03            [24] 2582 	sjmp	00562$
      000CAC                       2583 00561$:
      000CAC 02r0DrDA         [24] 2584 	ljmp	00183$
      000CAF                       2585 00562$:
                                   2586 ;	src/radio.c:406: if(data[0] > 32) data[0] = 32;
      000CAF 90r00r35         [24] 2587 	mov	dptr,#_handle_radio_request_PARM_2
      000CB2 E0               [24] 2588 	movx	a,@dptr
      000CB3 FC               [12] 2589 	mov	r4,a
      000CB4 A3               [24] 2590 	inc	dptr
      000CB5 E0               [24] 2591 	movx	a,@dptr
      000CB6 FD               [12] 2592 	mov	r5,a
      000CB7 A3               [24] 2593 	inc	dptr
      000CB8 E0               [24] 2594 	movx	a,@dptr
      000CB9 FE               [12] 2595 	mov	r6,a
      000CBA 8C 82            [24] 2596 	mov	dpl,r4
      000CBC 8D 83            [24] 2597 	mov	dph,r5
      000CBE 8E F0            [24] 2598 	mov	b,r6
      000CC0 12r00r00         [24] 2599 	lcall	__gptrget
      000CC3 24 DF            [12] 2600 	add	a,#0xff - 0x20
      000CC5 50 0B            [24] 2601 	jnc	00139$
      000CC7 8C 82            [24] 2602 	mov	dpl,r4
      000CC9 8D 83            [24] 2603 	mov	dph,r5
      000CCB 8E F0            [24] 2604 	mov	b,r6
      000CCD 74 20            [12] 2605 	mov	a,#0x20
      000CCF 12r00r00         [24] 2606 	lcall	__gptrput
      000CD2                       2607 00139$:
                                   2608 ;	src/radio.c:407: if(data[0] < 1) data[0] = 1;
      000CD2 8C 82            [24] 2609 	mov	dpl,r4
      000CD4 8D 83            [24] 2610 	mov	dph,r5
      000CD6 8E F0            [24] 2611 	mov	b,r6
      000CD8 12r00r00         [24] 2612 	lcall	__gptrget
      000CDB FB               [12] 2613 	mov	r3,a
      000CDC BB 01 00         [24] 2614 	cjne	r3,#0x01,00564$
      000CDF                       2615 00564$:
      000CDF 50 0B            [24] 2616 	jnc	00141$
      000CE1 8C 82            [24] 2617 	mov	dpl,r4
      000CE3 8D 83            [24] 2618 	mov	dph,r5
      000CE5 8E F0            [24] 2619 	mov	b,r6
      000CE7 74 01            [12] 2620 	mov	a,#0x01
      000CE9 12r00r00         [24] 2621 	lcall	__gptrput
      000CEC                       2622 00141$:
                                   2623 ;	src/radio.c:410: rfce = 0;
                                   2624 ;	assignBit
      000CEC C2 90            [12] 2625 	clr	_rfce
                                   2626 ;	src/radio.c:413: flush_tx();
      000CEE 90r00r23         [24] 2627 	mov	dptr,#_spi_write_PARM_2
      000CF1 E4               [12] 2628 	clr	a
      000CF2 F0               [24] 2629 	movx	@dptr,a
      000CF3 A3               [24] 2630 	inc	dptr
      000CF4 F0               [24] 2631 	movx	@dptr,a
      000CF5 A3               [24] 2632 	inc	dptr
      000CF6 F0               [24] 2633 	movx	@dptr,a
      000CF7 90r00r26         [24] 2634 	mov	dptr,#_spi_write_PARM_3
      000CFA F0               [24] 2635 	movx	@dptr,a
      000CFB 75 82 E1         [24] 2636 	mov	dpl,#0xe1
      000CFE C0 06            [24] 2637 	push	ar6
      000D00 C0 05            [24] 2638 	push	ar5
      000D02 C0 04            [24] 2639 	push	ar4
      000D04 12r03r9B         [24] 2640 	lcall	_spi_write
      000D07 D0 04            [24] 2641 	pop	ar4
      000D09 D0 05            [24] 2642 	pop	ar5
      000D0B D0 06            [24] 2643 	pop	ar6
                                   2644 ;	src/radio.c:414: flush_rx();
      000D0D 90r00r23         [24] 2645 	mov	dptr,#_spi_write_PARM_2
      000D10 E4               [12] 2646 	clr	a
      000D11 F0               [24] 2647 	movx	@dptr,a
      000D12 A3               [24] 2648 	inc	dptr
      000D13 F0               [24] 2649 	movx	@dptr,a
      000D14 A3               [24] 2650 	inc	dptr
      000D15 F0               [24] 2651 	movx	@dptr,a
      000D16 90r00r26         [24] 2652 	mov	dptr,#_spi_write_PARM_3
      000D19 F0               [24] 2653 	movx	@dptr,a
      000D1A 75 82 E2         [24] 2654 	mov	dpl,#0xe2
      000D1D C0 06            [24] 2655 	push	ar6
      000D1F C0 05            [24] 2656 	push	ar5
      000D21 C0 04            [24] 2657 	push	ar4
      000D23 12r03r9B         [24] 2658 	lcall	_spi_write
                                   2659 ;	src/radio.c:417: write_register_byte(STATUS, MAX_RT | TX_DS | RX_DR);
      000D26 90r00r2D         [24] 2660 	mov	dptr,#_write_register_byte_PARM_2
      000D29 74 70            [12] 2661 	mov	a,#0x70
      000D2B F0               [24] 2662 	movx	@dptr,a
      000D2C 75 82 07         [24] 2663 	mov	dpl,#0x07
      000D2F 12r04r88         [24] 2664 	lcall	_write_register_byte
                                   2665 ;	src/radio.c:420: write_register_byte(EN_AA, ENAA_P0);
      000D32 90r00r2D         [24] 2666 	mov	dptr,#_write_register_byte_PARM_2
      000D35 74 01            [12] 2667 	mov	a,#0x01
      000D37 F0               [24] 2668 	movx	@dptr,a
      000D38 75 82 01         [24] 2669 	mov	dpl,#0x01
      000D3B 12r04r88         [24] 2670 	lcall	_write_register_byte
                                   2671 ;	src/radio.c:421: write_register_byte(FEATURE, EN_DPL | EN_ACK_PAY);
      000D3E 90r00r2D         [24] 2672 	mov	dptr,#_write_register_byte_PARM_2
      000D41 74 06            [12] 2673 	mov	a,#0x06
      000D43 F0               [24] 2674 	movx	@dptr,a
      000D44 75 82 1D         [24] 2675 	mov	dpl,#0x1d
      000D47 12r04r88         [24] 2676 	lcall	_write_register_byte
      000D4A D0 04            [24] 2677 	pop	ar4
      000D4C D0 05            [24] 2678 	pop	ar5
      000D4E D0 06            [24] 2679 	pop	ar6
                                   2680 ;	src/radio.c:424: spi_write(W_ACK_PAYLOAD, &data[1], data[0]);
      000D50 74 01            [12] 2681 	mov	a,#0x01
      000D52 2C               [12] 2682 	add	a,r4
      000D53 F9               [12] 2683 	mov	r1,a
      000D54 E4               [12] 2684 	clr	a
      000D55 3D               [12] 2685 	addc	a,r5
      000D56 FA               [12] 2686 	mov	r2,a
      000D57 8E 03            [24] 2687 	mov	ar3,r6
      000D59 8C 82            [24] 2688 	mov	dpl,r4
      000D5B 8D 83            [24] 2689 	mov	dph,r5
      000D5D 8E F0            [24] 2690 	mov	b,r6
      000D5F 12r00r00         [24] 2691 	lcall	__gptrget
      000D62 FC               [12] 2692 	mov	r4,a
      000D63 90r00r23         [24] 2693 	mov	dptr,#_spi_write_PARM_2
      000D66 E9               [12] 2694 	mov	a,r1
      000D67 F0               [24] 2695 	movx	@dptr,a
      000D68 EA               [12] 2696 	mov	a,r2
      000D69 A3               [24] 2697 	inc	dptr
      000D6A F0               [24] 2698 	movx	@dptr,a
      000D6B EB               [12] 2699 	mov	a,r3
      000D6C A3               [24] 2700 	inc	dptr
      000D6D F0               [24] 2701 	movx	@dptr,a
      000D6E 90r00r26         [24] 2702 	mov	dptr,#_spi_write_PARM_3
      000D71 EC               [12] 2703 	mov	a,r4
      000D72 F0               [24] 2704 	movx	@dptr,a
      000D73 75 82 A8         [24] 2705 	mov	dpl,#0xa8
      000D76 12r03r9B         [24] 2706 	lcall	_spi_write
                                   2707 ;	src/radio.c:427: rfce = 1;
                                   2708 ;	assignBit
      000D79 D2 90            [12] 2709 	setb	_rfce
                                   2710 ;	src/radio.c:431: in1buf[0] = 0;
      000D7B 90 C6 80         [24] 2711 	mov	dptr,#_in1buf
      000D7E E4               [12] 2712 	clr	a
      000D7F F0               [24] 2713 	movx	@dptr,a
                                   2714 ;	src/radio.c:432: while(elapsed < 500)
      000D80 7D 00            [12] 2715 	mov	r5,#0x00
      000D82 7E 00            [12] 2716 	mov	r6,#0x00
      000D84                       2717 00144$:
      000D84 C3               [12] 2718 	clr	c
      000D85 ED               [12] 2719 	mov	a,r5
      000D86 94 F4            [12] 2720 	subb	a,#0xf4
      000D88 EE               [12] 2721 	mov	a,r6
      000D89 94 01            [12] 2722 	subb	a,#0x01
      000D8B 50 3B            [24] 2723 	jnc	00146$
                                   2724 ;	src/radio.c:434: status = read_register_byte(STATUS);
      000D8D 75 82 07         [24] 2725 	mov	dpl,#0x07
      000D90 C0 06            [24] 2726 	push	ar6
      000D92 C0 05            [24] 2727 	push	ar5
      000D94 12r04rAA         [24] 2728 	lcall	_read_register_byte
      000D97 AC 82            [24] 2729 	mov	r4,dpl
      000D99 D0 05            [24] 2730 	pop	ar5
      000D9B D0 06            [24] 2731 	pop	ar6
                                   2732 ;	src/radio.c:435: if((status & RX_DR) == RX_DR)
      000D9D 53 04 40         [24] 2733 	anl	ar4,#0x40
      000DA0 7B 00            [12] 2734 	mov	r3,#0x00
      000DA2 BC 40 0B         [24] 2735 	cjne	r4,#0x40,00285$
      000DA5 BB 00 08         [24] 2736 	cjne	r3,#0x00,00285$
                                   2737 ;	src/radio.c:437: in1buf[0] = 1;
      000DA8 90 C6 80         [24] 2738 	mov	dptr,#_in1buf
      000DAB 74 01            [12] 2739 	mov	a,#0x01
      000DAD F0               [24] 2740 	movx	@dptr,a
                                   2741 ;	src/radio.c:438: break;
                                   2742 ;	src/nRF24LU1P.h:35: inline void delay_us(uint16_t us) { do nop_us(); while(--us); }
      000DAE 80 18            [24] 2743 	sjmp	00146$
      000DB0                       2744 00285$:
      000DB0 7B E8            [12] 2745 	mov	r3,#0xe8
      000DB2 7C 03            [12] 2746 	mov	r4,#0x03
      000DB4                       2747 00212$:
      000DB4 00               [12] 2748 	nop 
      000DB5 00               [12] 2749 	nop 
      000DB6 00               [12] 2750 	nop 
      000DB7 00               [12] 2751 	nop 
      000DB8 1B               [12] 2752 	dec	r3
      000DB9 BB FF 01         [24] 2753 	cjne	r3,#0xff,00569$
      000DBC 1C               [12] 2754 	dec	r4
      000DBD                       2755 00569$:
      000DBD EB               [12] 2756 	mov	a,r3
      000DBE 4C               [12] 2757 	orl	a,r4
      000DBF 70 F3            [24] 2758 	jnz	00212$
                                   2759 ;	src/radio.c:442: elapsed++;
      000DC1 0D               [12] 2760 	inc	r5
      000DC2 BD 00 BF         [24] 2761 	cjne	r5,#0x00,00144$
      000DC5 0E               [12] 2762 	inc	r6
      000DC6 80 BC            [24] 2763 	sjmp	00144$
      000DC8                       2764 00146$:
                                   2765 ;	src/radio.c:446: write_register_byte(EN_AA, ENAA_NONE);
      000DC8 90r00r2D         [24] 2766 	mov	dptr,#_write_register_byte_PARM_2
      000DCB E4               [12] 2767 	clr	a
      000DCC F0               [24] 2768 	movx	@dptr,a
      000DCD 75 82 01         [24] 2769 	mov	dpl,#0x01
      000DD0 12r04r88         [24] 2770 	lcall	_write_register_byte
                                   2771 ;	src/radio.c:448: in1bc = 1;
      000DD3 90 C7 B7         [24] 2772 	mov	dptr,#0xc7b7
      000DD6 74 01            [12] 2773 	mov	a,#0x01
      000DD8 F0               [24] 2774 	movx	@dptr,a
      000DD9 22               [24] 2775 	ret
      000DDA                       2776 00183$:
                                   2777 ;	src/radio.c:452: else if(request == TRANSMIT_PAYLOAD)
      000DDA BF 04 02         [24] 2778 	cjne	r7,#0x04,00572$
      000DDD 80 03            [24] 2779 	sjmp	00573$
      000DDF                       2780 00572$:
      000DDF 02r0Fr70         [24] 2781 	ljmp	00180$
      000DE2                       2782 00573$:
                                   2783 ;	src/radio.c:455: if(data[0] > 32) data[0] = 32;
      000DE2 90r00r35         [24] 2784 	mov	dptr,#_handle_radio_request_PARM_2
      000DE5 E0               [24] 2785 	movx	a,@dptr
      000DE6 FC               [12] 2786 	mov	r4,a
      000DE7 A3               [24] 2787 	inc	dptr
      000DE8 E0               [24] 2788 	movx	a,@dptr
      000DE9 FD               [12] 2789 	mov	r5,a
      000DEA A3               [24] 2790 	inc	dptr
      000DEB E0               [24] 2791 	movx	a,@dptr
      000DEC FE               [12] 2792 	mov	r6,a
      000DED 8C 82            [24] 2793 	mov	dpl,r4
      000DEF 8D 83            [24] 2794 	mov	dph,r5
      000DF1 8E F0            [24] 2795 	mov	b,r6
      000DF3 12r00r00         [24] 2796 	lcall	__gptrget
      000DF6 24 DF            [12] 2797 	add	a,#0xff - 0x20
      000DF8 50 0B            [24] 2798 	jnc	00148$
      000DFA 8C 82            [24] 2799 	mov	dpl,r4
      000DFC 8D 83            [24] 2800 	mov	dph,r5
      000DFE 8E F0            [24] 2801 	mov	b,r6
      000E00 74 20            [12] 2802 	mov	a,#0x20
      000E02 12r00r00         [24] 2803 	lcall	__gptrput
      000E05                       2804 00148$:
                                   2805 ;	src/radio.c:456: if(data[0] < 1) data[0] = 1;
      000E05 8C 82            [24] 2806 	mov	dpl,r4
      000E07 8D 83            [24] 2807 	mov	dph,r5
      000E09 8E F0            [24] 2808 	mov	b,r6
      000E0B 12r00r00         [24] 2809 	lcall	__gptrget
      000E0E FB               [12] 2810 	mov	r3,a
      000E0F BB 01 00         [24] 2811 	cjne	r3,#0x01,00575$
      000E12                       2812 00575$:
      000E12 50 0B            [24] 2813 	jnc	00150$
      000E14 8C 82            [24] 2814 	mov	dpl,r4
      000E16 8D 83            [24] 2815 	mov	dph,r5
      000E18 8E F0            [24] 2816 	mov	b,r6
      000E1A 74 01            [12] 2817 	mov	a,#0x01
      000E1C 12r00r00         [24] 2818 	lcall	__gptrput
      000E1F                       2819 00150$:
                                   2820 ;	src/radio.c:459: rfce = 0;
                                   2821 ;	assignBit
      000E1F C2 90            [12] 2822 	clr	_rfce
                                   2823 ;	src/radio.c:463: write_register_byte(SETUP_RETR, (1 << data[1]) | data[2]);
      000E21 74 01            [12] 2824 	mov	a,#0x01
      000E23 2C               [12] 2825 	add	a,r4
      000E24 F9               [12] 2826 	mov	r1,a
      000E25 E4               [12] 2827 	clr	a
      000E26 3D               [12] 2828 	addc	a,r5
      000E27 FA               [12] 2829 	mov	r2,a
      000E28 8E 03            [24] 2830 	mov	ar3,r6
      000E2A 89 82            [24] 2831 	mov	dpl,r1
      000E2C 8A 83            [24] 2832 	mov	dph,r2
      000E2E 8B F0            [24] 2833 	mov	b,r3
      000E30 12r00r00         [24] 2834 	lcall	__gptrget
      000E33 F9               [12] 2835 	mov	r1,a
      000E34 89 F0            [24] 2836 	mov	b,r1
      000E36 05 F0            [12] 2837 	inc	b
      000E38 74 01            [12] 2838 	mov	a,#0x01
      000E3A 80 02            [24] 2839 	sjmp	00579$
      000E3C                       2840 00577$:
      000E3C 25 E0            [12] 2841 	add	a,acc
      000E3E                       2842 00579$:
      000E3E D5 F0 FB         [24] 2843 	djnz	b,00577$
      000E41 F9               [12] 2844 	mov	r1,a
      000E42 74 02            [12] 2845 	mov	a,#0x02
      000E44 2C               [12] 2846 	add	a,r4
      000E45 F8               [12] 2847 	mov	r0,a
      000E46 E4               [12] 2848 	clr	a
      000E47 3D               [12] 2849 	addc	a,r5
      000E48 FA               [12] 2850 	mov	r2,a
      000E49 8E 03            [24] 2851 	mov	ar3,r6
      000E4B 88 82            [24] 2852 	mov	dpl,r0
      000E4D 8A 83            [24] 2853 	mov	dph,r2
      000E4F 8B F0            [24] 2854 	mov	b,r3
      000E51 12r00r00         [24] 2855 	lcall	__gptrget
      000E54 90r00r2D         [24] 2856 	mov	dptr,#_write_register_byte_PARM_2
      000E57 49               [12] 2857 	orl	a,r1
      000E58 F0               [24] 2858 	movx	@dptr,a
      000E59 75 82 04         [24] 2859 	mov	dpl,#0x04
      000E5C C0 06            [24] 2860 	push	ar6
      000E5E C0 05            [24] 2861 	push	ar5
      000E60 C0 04            [24] 2862 	push	ar4
      000E62 12r04r88         [24] 2863 	lcall	_write_register_byte
      000E65 D0 04            [24] 2864 	pop	ar4
      000E67 D0 05            [24] 2865 	pop	ar5
      000E69 D0 06            [24] 2866 	pop	ar6
                                   2867 ;	src/radio.c:466: flush_tx();
      000E6B 90r00r23         [24] 2868 	mov	dptr,#_spi_write_PARM_2
      000E6E E4               [12] 2869 	clr	a
      000E6F F0               [24] 2870 	movx	@dptr,a
      000E70 A3               [24] 2871 	inc	dptr
      000E71 F0               [24] 2872 	movx	@dptr,a
      000E72 A3               [24] 2873 	inc	dptr
      000E73 F0               [24] 2874 	movx	@dptr,a
      000E74 90r00r26         [24] 2875 	mov	dptr,#_spi_write_PARM_3
      000E77 F0               [24] 2876 	movx	@dptr,a
      000E78 75 82 E1         [24] 2877 	mov	dpl,#0xe1
      000E7B C0 06            [24] 2878 	push	ar6
      000E7D C0 05            [24] 2879 	push	ar5
      000E7F C0 04            [24] 2880 	push	ar4
      000E81 12r03r9B         [24] 2881 	lcall	_spi_write
      000E84 D0 04            [24] 2882 	pop	ar4
      000E86 D0 05            [24] 2883 	pop	ar5
      000E88 D0 06            [24] 2884 	pop	ar6
                                   2885 ;	src/radio.c:467: flush_rx();
      000E8A 90r00r23         [24] 2886 	mov	dptr,#_spi_write_PARM_2
      000E8D E4               [12] 2887 	clr	a
      000E8E F0               [24] 2888 	movx	@dptr,a
      000E8F A3               [24] 2889 	inc	dptr
      000E90 F0               [24] 2890 	movx	@dptr,a
      000E91 A3               [24] 2891 	inc	dptr
      000E92 F0               [24] 2892 	movx	@dptr,a
      000E93 90r00r26         [24] 2893 	mov	dptr,#_spi_write_PARM_3
      000E96 F0               [24] 2894 	movx	@dptr,a
      000E97 75 82 E2         [24] 2895 	mov	dpl,#0xe2
      000E9A C0 06            [24] 2896 	push	ar6
      000E9C C0 05            [24] 2897 	push	ar5
      000E9E C0 04            [24] 2898 	push	ar4
      000EA0 12r03r9B         [24] 2899 	lcall	_spi_write
                                   2900 ;	src/radio.c:470: write_register_byte(STATUS, MAX_RT | TX_DS | RX_DR);
      000EA3 90r00r2D         [24] 2901 	mov	dptr,#_write_register_byte_PARM_2
      000EA6 74 70            [12] 2902 	mov	a,#0x70
      000EA8 F0               [24] 2903 	movx	@dptr,a
      000EA9 75 82 07         [24] 2904 	mov	dpl,#0x07
      000EAC 12r04r88         [24] 2905 	lcall	_write_register_byte
                                   2906 ;	src/radio.c:473: write_register_byte(CONFIG, read_register_byte(CONFIG) & ~PRIM_RX);
      000EAF 75 82 00         [24] 2907 	mov	dpl,#0x00
      000EB2 12r04rAA         [24] 2908 	lcall	_read_register_byte
      000EB5 E5 82            [12] 2909 	mov	a,dpl
      000EB7 90r00r2D         [24] 2910 	mov	dptr,#_write_register_byte_PARM_2
      000EBA 54 FE            [12] 2911 	anl	a,#0xfe
      000EBC F0               [24] 2912 	movx	@dptr,a
      000EBD 75 82 00         [24] 2913 	mov	dpl,#0x00
      000EC0 12r04r88         [24] 2914 	lcall	_write_register_byte
                                   2915 ;	src/radio.c:476: write_register_byte(EN_AA, ENAA_P0);
      000EC3 90r00r2D         [24] 2916 	mov	dptr,#_write_register_byte_PARM_2
      000EC6 74 01            [12] 2917 	mov	a,#0x01
      000EC8 F0               [24] 2918 	movx	@dptr,a
      000EC9 75 82 01         [24] 2919 	mov	dpl,#0x01
      000ECC 12r04r88         [24] 2920 	lcall	_write_register_byte
      000ECF D0 04            [24] 2921 	pop	ar4
      000ED1 D0 05            [24] 2922 	pop	ar5
      000ED3 D0 06            [24] 2923 	pop	ar6
                                   2924 ;	src/radio.c:479: spi_write(W_TX_PAYLOAD, &data[3], data[0]);
      000ED5 74 03            [12] 2925 	mov	a,#0x03
      000ED7 2C               [12] 2926 	add	a,r4
      000ED8 F9               [12] 2927 	mov	r1,a
      000ED9 E4               [12] 2928 	clr	a
      000EDA 3D               [12] 2929 	addc	a,r5
      000EDB FA               [12] 2930 	mov	r2,a
      000EDC 8E 03            [24] 2931 	mov	ar3,r6
      000EDE 8C 82            [24] 2932 	mov	dpl,r4
      000EE0 8D 83            [24] 2933 	mov	dph,r5
      000EE2 8E F0            [24] 2934 	mov	b,r6
      000EE4 12r00r00         [24] 2935 	lcall	__gptrget
      000EE7 FC               [12] 2936 	mov	r4,a
      000EE8 90r00r23         [24] 2937 	mov	dptr,#_spi_write_PARM_2
      000EEB E9               [12] 2938 	mov	a,r1
      000EEC F0               [24] 2939 	movx	@dptr,a
      000EED EA               [12] 2940 	mov	a,r2
      000EEE A3               [24] 2941 	inc	dptr
      000EEF F0               [24] 2942 	movx	@dptr,a
      000EF0 EB               [12] 2943 	mov	a,r3
      000EF1 A3               [24] 2944 	inc	dptr
      000EF2 F0               [24] 2945 	movx	@dptr,a
      000EF3 90r00r26         [24] 2946 	mov	dptr,#_spi_write_PARM_3
      000EF6 EC               [12] 2947 	mov	a,r4
      000EF7 F0               [24] 2948 	movx	@dptr,a
      000EF8 75 82 A0         [24] 2949 	mov	dpl,#0xa0
      000EFB 12r03r9B         [24] 2950 	lcall	_spi_write
                                   2951 ;	src/radio.c:482: rfce = 1;
                                   2952 ;	assignBit
      000EFE D2 90            [12] 2953 	setb	_rfce
                                   2954 ;	src/nRF24LU1P.h:35: inline void delay_us(uint16_t us) { do nop_us(); while(--us); }
      000F00 7D 0A            [12] 2955 	mov	r5,#0x0a
      000F02 7E 00            [12] 2956 	mov	r6,#0x00
      000F04                       2957 00216$:
      000F04 00               [12] 2958 	nop 
      000F05 00               [12] 2959 	nop 
      000F06 00               [12] 2960 	nop 
      000F07 00               [12] 2961 	nop 
      000F08 1D               [12] 2962 	dec	r5
      000F09 BD FF 01         [24] 2963 	cjne	r5,#0xff,00580$
      000F0C 1E               [12] 2964 	dec	r6
      000F0D                       2965 00580$:
      000F0D ED               [12] 2966 	mov	a,r5
      000F0E 4E               [12] 2967 	orl	a,r6
      000F0F 70 F3            [24] 2968 	jnz	00216$
                                   2969 ;	src/radio.c:484: rfce = 0;
                                   2970 ;	assignBit
      000F11 C2 90            [12] 2971 	clr	_rfce
                                   2972 ;	src/radio.c:487: while(true)
      000F13                       2973 00159$:
                                   2974 ;	src/radio.c:490: rfcsn = 0;
                                   2975 ;	assignBit
      000F13 C2 91            [12] 2976 	clr	_rfcsn
                                   2977 ;	src/radio.c:491: RFDAT = _NOP;
      000F15 75 E5 FF         [24] 2978 	mov	_RFDAT,#0xff
                                   2979 ;	src/radio.c:492: RFRDY = 0;
                                   2980 ;	assignBit
      000F18 C2 C0            [12] 2981 	clr	_RFRDY
                                   2982 ;	src/radio.c:493: while(!RFRDY);
      000F1A                       2983 00151$:
      000F1A 30 C0 FD         [24] 2984 	jnb	_RFRDY,00151$
                                   2985 ;	src/radio.c:494: rfcsn = 1;
                                   2986 ;	assignBit
      000F1D D2 91            [12] 2987 	setb	_rfcsn
                                   2988 ;	src/radio.c:497: if((RFDAT & 0x10) == 0x10)
      000F1F AD E5            [24] 2989 	mov	r5,_RFDAT
      000F21 53 05 10         [24] 2990 	anl	ar5,#0x10
      000F24 7E 00            [12] 2991 	mov	r6,#0x00
      000F26 BD 10 0A         [24] 2992 	cjne	r5,#0x10,00155$
      000F29 BE 00 07         [24] 2993 	cjne	r6,#0x00,00155$
                                   2994 ;	src/radio.c:499: in1buf[0] = 0;
      000F2C 90 C6 80         [24] 2995 	mov	dptr,#_in1buf
      000F2F E4               [12] 2996 	clr	a
      000F30 F0               [24] 2997 	movx	@dptr,a
                                   2998 ;	src/radio.c:500: break;
      000F31 80 13            [24] 2999 	sjmp	00160$
      000F33                       3000 00155$:
                                   3001 ;	src/radio.c:504: if((RFDAT & 0x20) == 0x20)
      000F33 AD E5            [24] 3002 	mov	r5,_RFDAT
      000F35 53 05 20         [24] 3003 	anl	ar5,#0x20
      000F38 7E 00            [12] 3004 	mov	r6,#0x00
      000F3A BD 20 D6         [24] 3005 	cjne	r5,#0x20,00159$
      000F3D BE 00 D3         [24] 3006 	cjne	r6,#0x00,00159$
                                   3007 ;	src/radio.c:506: in1buf[0] = 1;
      000F40 90 C6 80         [24] 3008 	mov	dptr,#_in1buf
      000F43 74 01            [12] 3009 	mov	a,#0x01
      000F45 F0               [24] 3010 	movx	@dptr,a
                                   3011 ;	src/radio.c:507: break;
      000F46                       3012 00160$:
                                   3013 ;	src/radio.c:512: write_register_byte(EN_AA, ENAA_NONE);
      000F46 90r00r2D         [24] 3014 	mov	dptr,#_write_register_byte_PARM_2
      000F49 E4               [12] 3015 	clr	a
      000F4A F0               [24] 3016 	movx	@dptr,a
      000F4B 75 82 01         [24] 3017 	mov	dpl,#0x01
      000F4E 12r04r88         [24] 3018 	lcall	_write_register_byte
                                   3019 ;	src/radio.c:515: write_register_byte(CONFIG, read_register_byte(CONFIG) | PRIM_RX);
      000F51 75 82 00         [24] 3020 	mov	dpl,#0x00
      000F54 12r04rAA         [24] 3021 	lcall	_read_register_byte
      000F57 AE 82            [24] 3022 	mov	r6,dpl
      000F59 43 06 01         [24] 3023 	orl	ar6,#0x01
      000F5C 90r00r2D         [24] 3024 	mov	dptr,#_write_register_byte_PARM_2
      000F5F EE               [12] 3025 	mov	a,r6
      000F60 F0               [24] 3026 	movx	@dptr,a
      000F61 75 82 00         [24] 3027 	mov	dpl,#0x00
      000F64 12r04r88         [24] 3028 	lcall	_write_register_byte
                                   3029 ;	src/radio.c:518: rfce = 1;
                                   3030 ;	assignBit
      000F67 D2 90            [12] 3031 	setb	_rfce
                                   3032 ;	src/radio.c:519: in1bc = 1;
      000F69 90 C7 B7         [24] 3033 	mov	dptr,#0xc7b7
      000F6C 74 01            [12] 3034 	mov	a,#0x01
      000F6E F0               [24] 3035 	movx	@dptr,a
      000F6F 22               [24] 3036 	ret
      000F70                       3037 00180$:
                                   3038 ;	src/radio.c:523: else if(request == TRANSMIT_PAYLOAD_GENERIC)
      000F70 BF 0C 02         [24] 3039 	cjne	r7,#0x0c,00587$
      000F73 80 01            [24] 3040 	sjmp	00588$
      000F75                       3041 00587$:
      000F75 22               [24] 3042 	ret
      000F76                       3043 00588$:
                                   3044 ;	src/radio.c:525: uint8_t address_start = data[0] + data[1] + 2;
      000F76 90r00r35         [24] 3045 	mov	dptr,#_handle_radio_request_PARM_2
      000F79 E0               [24] 3046 	movx	a,@dptr
      000F7A FD               [12] 3047 	mov	r5,a
      000F7B A3               [24] 3048 	inc	dptr
      000F7C E0               [24] 3049 	movx	a,@dptr
      000F7D FE               [12] 3050 	mov	r6,a
      000F7E A3               [24] 3051 	inc	dptr
      000F7F E0               [24] 3052 	movx	a,@dptr
      000F80 FF               [12] 3053 	mov	r7,a
      000F81 8D 82            [24] 3054 	mov	dpl,r5
      000F83 8E 83            [24] 3055 	mov	dph,r6
      000F85 8F F0            [24] 3056 	mov	b,r7
      000F87 12r00r00         [24] 3057 	lcall	__gptrget
      000F8A FC               [12] 3058 	mov	r4,a
      000F8B 74 01            [12] 3059 	mov	a,#0x01
      000F8D 2D               [12] 3060 	add	a,r5
      000F8E F5*0E            [12] 3061 	mov	_handle_radio_request_sloc1_1_0,a
      000F90 E4               [12] 3062 	clr	a
      000F91 3E               [12] 3063 	addc	a,r6
      000F92 F5*0F            [12] 3064 	mov	(_handle_radio_request_sloc1_1_0 + 1),a
      000F94 8F*10            [24] 3065 	mov	(_handle_radio_request_sloc1_1_0 + 2),r7
      000F96 85*0E 82         [24] 3066 	mov	dpl,_handle_radio_request_sloc1_1_0
      000F99 85*0F 83         [24] 3067 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      000F9C 85*10 F0         [24] 3068 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      000F9F 12r00r00         [24] 3069 	lcall	__gptrget
      000FA2 2C               [12] 3070 	add	a,r4
      000FA3 F8               [12] 3071 	mov	r0,a
      000FA4 08               [12] 3072 	inc	r0
      000FA5 08               [12] 3073 	inc	r0
                                   3074 ;	src/radio.c:528: if(data[0] > 32) data[0] = 32;
      000FA6 EC               [12] 3075 	mov	a,r4
      000FA7 24 DF            [12] 3076 	add	a,#0xff - 0x20
      000FA9 50 0B            [24] 3077 	jnc	00162$
      000FAB 8D 82            [24] 3078 	mov	dpl,r5
      000FAD 8E 83            [24] 3079 	mov	dph,r6
      000FAF 8F F0            [24] 3080 	mov	b,r7
      000FB1 74 20            [12] 3081 	mov	a,#0x20
      000FB3 12r00r00         [24] 3082 	lcall	__gptrput
      000FB6                       3083 00162$:
                                   3084 ;	src/radio.c:529: if(data[0] < 1) data[0] = 1;
      000FB6 8D 82            [24] 3085 	mov	dpl,r5
      000FB8 8E 83            [24] 3086 	mov	dph,r6
      000FBA 8F F0            [24] 3087 	mov	b,r7
      000FBC 12r00r00         [24] 3088 	lcall	__gptrget
      000FBF FC               [12] 3089 	mov	r4,a
      000FC0 BC 01 00         [24] 3090 	cjne	r4,#0x01,00590$
      000FC3                       3091 00590$:
      000FC3 50 0B            [24] 3092 	jnc	00164$
      000FC5 8D 82            [24] 3093 	mov	dpl,r5
      000FC7 8E 83            [24] 3094 	mov	dph,r6
      000FC9 8F F0            [24] 3095 	mov	b,r7
      000FCB 74 01            [12] 3096 	mov	a,#0x01
      000FCD 12r00r00         [24] 3097 	lcall	__gptrput
      000FD0                       3098 00164$:
                                   3099 ;	src/radio.c:532: if(data[1] > 5) data[1] = 5;
      000FD0 85*0E 82         [24] 3100 	mov	dpl,_handle_radio_request_sloc1_1_0
      000FD3 85*0F 83         [24] 3101 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      000FD6 85*10 F0         [24] 3102 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      000FD9 12r00r00         [24] 3103 	lcall	__gptrget
      000FDC 24 FA            [12] 3104 	add	a,#0xff - 0x05
      000FDE 50 0E            [24] 3105 	jnc	00166$
      000FE0 85*0E 82         [24] 3106 	mov	dpl,_handle_radio_request_sloc1_1_0
      000FE3 85*0F 83         [24] 3107 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      000FE6 85*10 F0         [24] 3108 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      000FE9 74 05            [12] 3109 	mov	a,#0x05
      000FEB 12r00r00         [24] 3110 	lcall	__gptrput
      000FEE                       3111 00166$:
                                   3112 ;	src/radio.c:533: if(data[1] < 1) data[1] = 1;
      000FEE 85*0E 82         [24] 3113 	mov	dpl,_handle_radio_request_sloc1_1_0
      000FF1 85*0F 83         [24] 3114 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      000FF4 85*10 F0         [24] 3115 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      000FF7 12r00r00         [24] 3116 	lcall	__gptrget
      000FFA FC               [12] 3117 	mov	r4,a
      000FFB BC 01 00         [24] 3118 	cjne	r4,#0x01,00593$
      000FFE                       3119 00593$:
      000FFE 50 0E            [24] 3120 	jnc	00168$
      001000 85*0E 82         [24] 3121 	mov	dpl,_handle_radio_request_sloc1_1_0
      001003 85*0F 83         [24] 3122 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      001006 85*10 F0         [24] 3123 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      001009 74 01            [12] 3124 	mov	a,#0x01
      00100B 12r00r00         [24] 3125 	lcall	__gptrput
      00100E                       3126 00168$:
                                   3127 ;	src/radio.c:536: rfce = 0;
                                   3128 ;	assignBit
      00100E C2 90            [12] 3129 	clr	_rfce
                                   3130 ;	src/radio.c:539: flush_tx();
      001010 90r00r23         [24] 3131 	mov	dptr,#_spi_write_PARM_2
      001013 E4               [12] 3132 	clr	a
      001014 F0               [24] 3133 	movx	@dptr,a
      001015 A3               [24] 3134 	inc	dptr
      001016 F0               [24] 3135 	movx	@dptr,a
      001017 A3               [24] 3136 	inc	dptr
      001018 F0               [24] 3137 	movx	@dptr,a
      001019 90r00r26         [24] 3138 	mov	dptr,#_spi_write_PARM_3
      00101C F0               [24] 3139 	movx	@dptr,a
      00101D 75 82 E1         [24] 3140 	mov	dpl,#0xe1
      001020 C0 07            [24] 3141 	push	ar7
      001022 C0 06            [24] 3142 	push	ar6
      001024 C0 05            [24] 3143 	push	ar5
      001026 C0 00            [24] 3144 	push	ar0
      001028 12r03r9B         [24] 3145 	lcall	_spi_write
      00102B D0 00            [24] 3146 	pop	ar0
      00102D D0 05            [24] 3147 	pop	ar5
      00102F D0 06            [24] 3148 	pop	ar6
      001031 D0 07            [24] 3149 	pop	ar7
                                   3150 ;	src/radio.c:540: flush_rx();
      001033 90r00r23         [24] 3151 	mov	dptr,#_spi_write_PARM_2
      001036 E4               [12] 3152 	clr	a
      001037 F0               [24] 3153 	movx	@dptr,a
      001038 A3               [24] 3154 	inc	dptr
      001039 F0               [24] 3155 	movx	@dptr,a
      00103A A3               [24] 3156 	inc	dptr
      00103B F0               [24] 3157 	movx	@dptr,a
      00103C 90r00r26         [24] 3158 	mov	dptr,#_spi_write_PARM_3
      00103F F0               [24] 3159 	movx	@dptr,a
      001040 75 82 E2         [24] 3160 	mov	dpl,#0xe2
      001043 C0 07            [24] 3161 	push	ar7
      001045 C0 06            [24] 3162 	push	ar6
      001047 C0 05            [24] 3163 	push	ar5
      001049 C0 00            [24] 3164 	push	ar0
      00104B 12r03r9B         [24] 3165 	lcall	_spi_write
                                   3166 ;	src/radio.c:543: write_register_byte(STATUS, MAX_RT | TX_DS | RX_DR);
      00104E 90r00r2D         [24] 3167 	mov	dptr,#_write_register_byte_PARM_2
      001051 74 70            [12] 3168 	mov	a,#0x70
      001053 F0               [24] 3169 	movx	@dptr,a
      001054 75 82 07         [24] 3170 	mov	dpl,#0x07
      001057 12r04r88         [24] 3171 	lcall	_write_register_byte
                                   3172 ;	src/radio.c:546: write_register_byte(CONFIG, read_register_byte(CONFIG) & ~PRIM_RX);
      00105A 75 82 00         [24] 3173 	mov	dpl,#0x00
      00105D 12r04rAA         [24] 3174 	lcall	_read_register_byte
      001060 E5 82            [12] 3175 	mov	a,dpl
      001062 90r00r2D         [24] 3176 	mov	dptr,#_write_register_byte_PARM_2
      001065 54 FE            [12] 3177 	anl	a,#0xfe
      001067 F0               [24] 3178 	movx	@dptr,a
      001068 75 82 00         [24] 3179 	mov	dpl,#0x00
      00106B 12r04r88         [24] 3180 	lcall	_write_register_byte
      00106E D0 00            [24] 3181 	pop	ar0
      001070 D0 05            [24] 3182 	pop	ar5
      001072 D0 06            [24] 3183 	pop	ar6
      001074 D0 07            [24] 3184 	pop	ar7
                                   3185 ;	src/radio.c:549: configure_address(&data[address_start], data[1]);
      001076 E8               [12] 3186 	mov	a,r0
      001077 2D               [12] 3187 	add	a,r5
      001078 F8               [12] 3188 	mov	r0,a
      001079 E4               [12] 3189 	clr	a
      00107A 3E               [12] 3190 	addc	a,r6
      00107B FB               [12] 3191 	mov	r3,a
      00107C 8F 04            [24] 3192 	mov	ar4,r7
      00107E 85*0E 82         [24] 3193 	mov	dpl,_handle_radio_request_sloc1_1_0
      001081 85*0F 83         [24] 3194 	mov	dph,(_handle_radio_request_sloc1_1_0 + 1)
      001084 85*10 F0         [24] 3195 	mov	b,(_handle_radio_request_sloc1_1_0 + 2)
      001087 12r00r00         [24] 3196 	lcall	__gptrget
      00108A 90r00r18         [24] 3197 	mov	dptr,#_configure_address_PARM_2
      00108D F0               [24] 3198 	movx	@dptr,a
      00108E 88 82            [24] 3199 	mov	dpl,r0
      001090 8B 83            [24] 3200 	mov	dph,r3
      001092 8C F0            [24] 3201 	mov	b,r4
      001094 C0 07            [24] 3202 	push	ar7
      001096 C0 06            [24] 3203 	push	ar6
      001098 C0 05            [24] 3204 	push	ar5
      00109A 12r02rB6         [24] 3205 	lcall	_configure_address
      00109D D0 05            [24] 3206 	pop	ar5
      00109F D0 06            [24] 3207 	pop	ar6
      0010A1 D0 07            [24] 3208 	pop	ar7
                                   3209 ;	src/radio.c:552: spi_write(W_TX_PAYLOAD, &data[2], data[0]);
      0010A3 74 02            [12] 3210 	mov	a,#0x02
      0010A5 2D               [12] 3211 	add	a,r5
      0010A6 FA               [12] 3212 	mov	r2,a
      0010A7 E4               [12] 3213 	clr	a
      0010A8 3E               [12] 3214 	addc	a,r6
      0010A9 FB               [12] 3215 	mov	r3,a
      0010AA 8F 04            [24] 3216 	mov	ar4,r7
      0010AC 8D 82            [24] 3217 	mov	dpl,r5
      0010AE 8E 83            [24] 3218 	mov	dph,r6
      0010B0 8F F0            [24] 3219 	mov	b,r7
      0010B2 12r00r00         [24] 3220 	lcall	__gptrget
      0010B5 FD               [12] 3221 	mov	r5,a
      0010B6 90r00r23         [24] 3222 	mov	dptr,#_spi_write_PARM_2
      0010B9 EA               [12] 3223 	mov	a,r2
      0010BA F0               [24] 3224 	movx	@dptr,a
      0010BB EB               [12] 3225 	mov	a,r3
      0010BC A3               [24] 3226 	inc	dptr
      0010BD F0               [24] 3227 	movx	@dptr,a
      0010BE EC               [12] 3228 	mov	a,r4
      0010BF A3               [24] 3229 	inc	dptr
      0010C0 F0               [24] 3230 	movx	@dptr,a
      0010C1 90r00r26         [24] 3231 	mov	dptr,#_spi_write_PARM_3
      0010C4 ED               [12] 3232 	mov	a,r5
      0010C5 F0               [24] 3233 	movx	@dptr,a
      0010C6 75 82 A0         [24] 3234 	mov	dpl,#0xa0
      0010C9 12r03r9B         [24] 3235 	lcall	_spi_write
                                   3236 ;	src/radio.c:555: rfce = 1;
                                   3237 ;	assignBit
      0010CC D2 90            [12] 3238 	setb	_rfce
                                   3239 ;	src/nRF24LU1P.h:35: inline void delay_us(uint16_t us) { do nop_us(); while(--us); }
      0010CE 7E 0A            [12] 3240 	mov	r6,#0x0a
      0010D0 7F 00            [12] 3241 	mov	r7,#0x00
      0010D2                       3242 00220$:
      0010D2 00               [12] 3243 	nop 
      0010D3 00               [12] 3244 	nop 
      0010D4 00               [12] 3245 	nop 
      0010D5 00               [12] 3246 	nop 
      0010D6 1E               [12] 3247 	dec	r6
      0010D7 BE FF 01         [24] 3248 	cjne	r6,#0xff,00595$
      0010DA 1F               [12] 3249 	dec	r7
      0010DB                       3250 00595$:
      0010DB EE               [12] 3251 	mov	a,r6
      0010DC 4F               [12] 3252 	orl	a,r7
      0010DD 70 F3            [24] 3253 	jnz	00220$
                                   3254 ;	src/radio.c:557: rfce = 0;
                                   3255 ;	assignBit
      0010DF C2 90            [12] 3256 	clr	_rfce
                                   3257 ;	src/radio.c:560: while(true)
      0010E1                       3258 00175$:
                                   3259 ;	src/radio.c:563: rfcsn = 0;
                                   3260 ;	assignBit
      0010E1 C2 91            [12] 3261 	clr	_rfcsn
                                   3262 ;	src/radio.c:564: RFDAT = _NOP;
      0010E3 75 E5 FF         [24] 3263 	mov	_RFDAT,#0xff
                                   3264 ;	src/radio.c:565: RFRDY = 0;
                                   3265 ;	assignBit
      0010E6 C2 C0            [12] 3266 	clr	_RFRDY
                                   3267 ;	src/radio.c:566: while(!RFRDY);
      0010E8                       3268 00169$:
      0010E8 30 C0 FD         [24] 3269 	jnb	_RFRDY,00169$
                                   3270 ;	src/radio.c:567: rfcsn = 1;
                                   3271 ;	assignBit
      0010EB D2 91            [12] 3272 	setb	_rfcsn
                                   3273 ;	src/radio.c:570: if((RFDAT & TX_DS) == TX_DS)
      0010ED AE E5            [24] 3274 	mov	r6,_RFDAT
      0010EF 53 06 20         [24] 3275 	anl	ar6,#0x20
      0010F2 7F 00            [12] 3276 	mov	r7,#0x00
      0010F4 BE 20 EA         [24] 3277 	cjne	r6,#0x20,00175$
      0010F7 BF 00 E7         [24] 3278 	cjne	r7,#0x00,00175$
                                   3279 ;	src/radio.c:572: in1buf[0] = 1;
      0010FA 90 C6 80         [24] 3280 	mov	dptr,#_in1buf
      0010FD 74 01            [12] 3281 	mov	a,#0x01
      0010FF F0               [24] 3282 	movx	@dptr,a
                                   3283 ;	src/radio.c:578: write_register_byte(CONFIG, read_register_byte(CONFIG) | PRIM_RX);
      001100 75 82 00         [24] 3284 	mov	dpl,#0x00
      001103 12r04rAA         [24] 3285 	lcall	_read_register_byte
      001106 AF 82            [24] 3286 	mov	r7,dpl
      001108 43 07 01         [24] 3287 	orl	ar7,#0x01
      00110B 90r00r2D         [24] 3288 	mov	dptr,#_write_register_byte_PARM_2
      00110E EF               [12] 3289 	mov	a,r7
      00110F F0               [24] 3290 	movx	@dptr,a
      001110 75 82 00         [24] 3291 	mov	dpl,#0x00
      001113 12r04r88         [24] 3292 	lcall	_write_register_byte
                                   3293 ;	src/radio.c:579: configure_address(pm_prefix, pm_prefix_length);
      001116 90r00r02         [24] 3294 	mov	dptr,#_pm_prefix_length
      001119 E0               [24] 3295 	movx	a,@dptr
      00111A FE               [12] 3296 	mov	r6,a
      00111B A3               [24] 3297 	inc	dptr
      00111C E0               [24] 3298 	movx	a,@dptr
      00111D 90r00r18         [24] 3299 	mov	dptr,#_configure_address_PARM_2
      001120 EE               [12] 3300 	mov	a,r6
      001121 F0               [24] 3301 	movx	@dptr,a
      001122 90r00r04         [24] 3302 	mov	dptr,#_pm_prefix
      001125 75 F0 00         [24] 3303 	mov	b,#0x00
      001128 12r02rB6         [24] 3304 	lcall	_configure_address
                                   3305 ;	src/radio.c:582: rfce = 1;
                                   3306 ;	assignBit
      00112B D2 90            [12] 3307 	setb	_rfce
                                   3308 ;	src/radio.c:583: in1bc = 1;
      00112D 90 C7 B7         [24] 3309 	mov	dptr,#0xc7b7
      001130 74 01            [12] 3310 	mov	a,#0x01
      001132 F0               [24] 3311 	movx	@dptr,a
                                   3312 ;	src/radio.c:585: }
      001133 22               [24] 3313 	ret
                                   3314 	.area CSEG    (CODE)
                                   3315 	.area CONST   (CODE)
                                   3316 	.area XINIT   (CODE)
      000000                       3317 __xinit__nordic_bootloader:
      000000 00 78                 3318 	.byte #0x00,#0x78
      000002                       3319 __xinit__logitech_bootloader:
      000002 00 74                 3320 	.byte #0x00,#0x74
      000004                       3321 __xinit__promiscuous_address:
      000004 AA                    3322 	.db #0xaa	; 170
      000005 00                    3323 	.db #0x00	; 0
                                   3324 	.area CABS    (ABS,CODE)
