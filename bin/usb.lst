                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module usb
                                      6 	.optsdcc -mmcs51 --model-large
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _write_descriptor
                                     12 	.globl _write_device_string
                                     13 	.globl _handle_radio_request
                                     14 	.globl _strlen
                                     15 	.globl _memset
                                     16 	.globl _memcpy
                                     17 	.globl _RFRDY
                                     18 	.globl _rfcsn
                                     19 	.globl _rfce
                                     20 	.globl _ien1
                                     21 	.globl _ien0
                                     22 	.globl _REGXC
                                     23 	.globl _REGXL
                                     24 	.globl _REGXH
                                     25 	.globl _TICKDV
                                     26 	.globl _RFDAT
                                     27 	.globl _P0DIR
                                     28 	.globl _P0
                                     29 	.globl _AESIA1
                                     30 	.globl _AESIV
                                     31 	.globl _usbcon
                                     32 	.globl _rfcon
                                     33 	.globl _rfctl
                                     34 	.globl _request
                                     35 	.globl _setupbuf
                                     36 	.globl _out1buf
                                     37 	.globl _in1buf
                                     38 	.globl _in0buf
                                     39 	.globl _init_usb
                                     40 	.globl _usb_reset_config
                                     41 	.globl _usb_irq
                                     42 	.globl _handle_setup_request
                                     43 ;--------------------------------------------------------
                                     44 ; special function registers
                                     45 ;--------------------------------------------------------
                                     46 	.area RSEG    (ABS,DATA)
      000000                         47 	.org 0x0000
                           0000E6    48 _rfctl	=	0x00e6
                           000090    49 _rfcon	=	0x0090
                           0000A0    50 _usbcon	=	0x00a0
                           0000F2    51 _AESIV	=	0x00f2
                           0000F5    52 _AESIA1	=	0x00f5
                           000080    53 _P0	=	0x0080
                           000094    54 _P0DIR	=	0x0094
                           0000E5    55 _RFDAT	=	0x00e5
                           0000AB    56 _TICKDV	=	0x00ab
                           0000AB    57 _REGXH	=	0x00ab
                           0000AC    58 _REGXL	=	0x00ac
                           0000AD    59 _REGXC	=	0x00ad
                           0000A8    60 _ien0	=	0x00a8
                           0000B8    61 _ien1	=	0x00b8
                                     62 ;--------------------------------------------------------
                                     63 ; special function bits
                                     64 ;--------------------------------------------------------
                                     65 	.area RSEG    (ABS,DATA)
      000000                         66 	.org 0x0000
                           000090    67 _rfce	=	0x0090
                           000091    68 _rfcsn	=	0x0091
                           0000C0    69 _RFRDY	=	0x00c0
                                     70 ;--------------------------------------------------------
                                     71 ; overlayable register banks
                                     72 ;--------------------------------------------------------
                                     73 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         74 	.ds 8
                                     75 	.area REG_BANK_1	(REL,OVR,DATA)
      000000                         76 	.ds 8
                                     77 ;--------------------------------------------------------
                                     78 ; overlayable bit register bank
                                     79 ;--------------------------------------------------------
                                     80 	.area BIT_BANK	(REL,OVR,DATA)
      000000                         81 bits:
      000000                         82 	.ds 1
                           008000    83 	b0 = bits[0]
                           008100    84 	b1 = bits[1]
                           008200    85 	b2 = bits[2]
                           008300    86 	b3 = bits[3]
                           008400    87 	b4 = bits[4]
                           008500    88 	b5 = bits[5]
                           008600    89 	b6 = bits[6]
                           008700    90 	b7 = bits[7]
                                     91 ;--------------------------------------------------------
                                     92 ; internal ram data
                                     93 ;--------------------------------------------------------
                                     94 	.area DSEG    (DATA)
      000000                         95 _write_device_string_sloc0_1_0:
      000000                         96 	.ds 2
                                     97 ;--------------------------------------------------------
                                     98 ; overlayable items in internal ram 
                                     99 ;--------------------------------------------------------
                                    100 ;--------------------------------------------------------
                                    101 ; indirectly addressable internal ram data
                                    102 ;--------------------------------------------------------
                                    103 	.area ISEG    (DATA)
                                    104 ;--------------------------------------------------------
                                    105 ; absolute internal ram data
                                    106 ;--------------------------------------------------------
                                    107 	.area IABS    (ABS,DATA)
                                    108 	.area IABS    (ABS,DATA)
                                    109 ;--------------------------------------------------------
                                    110 ; bit data
                                    111 ;--------------------------------------------------------
                                    112 	.area BSEG    (BIT)
                                    113 ;--------------------------------------------------------
                                    114 ; paged external ram data
                                    115 ;--------------------------------------------------------
                                    116 	.area PSEG    (PAG,XDATA)
                                    117 ;--------------------------------------------------------
                                    118 ; external ram data
                                    119 ;--------------------------------------------------------
                                    120 	.area XSEG    (XDATA)
                           00C700   121 _in0buf	=	0xc700
                           00C680   122 _in1buf	=	0xc680
                           00C640   123 _out1buf	=	0xc640
                           00C7E8   124 _setupbuf	=	0xc7e8
      000000                        125 _configured:
      000000                        126 	.ds 1
      000001                        127 _write_device_string_string_65536_77:
      000001                        128 	.ds 3
      000004                        129 _write_descriptor_desc_len_65536_80:
      000004                        130 	.ds 1
      000005                        131 _handle_setup_request_handled_65536_82:
      000005                        132 	.ds 1
                                    133 ;--------------------------------------------------------
                                    134 ; absolute external ram data
                                    135 ;--------------------------------------------------------
                                    136 	.area XABS    (ABS,XDATA)
                                    137 ;--------------------------------------------------------
                                    138 ; external initialized ram data
                                    139 ;--------------------------------------------------------
                                    140 	.area XISEG   (XDATA)
      000000                        141 _nordic_bootloader:
      000000                        142 	.ds 2
      000002                        143 _logitech_bootloader:
      000002                        144 	.ds 2
      000004                        145 _request::
      000004                        146 	.ds 2
                                    147 	.area HOME    (CODE)
                                    148 	.area GSINIT0 (CODE)
                                    149 	.area GSINIT1 (CODE)
                                    150 	.area GSINIT2 (CODE)
                                    151 	.area GSINIT3 (CODE)
                                    152 	.area GSINIT4 (CODE)
                                    153 	.area GSINIT5 (CODE)
                                    154 	.area GSINIT  (CODE)
                                    155 	.area GSFINAL (CODE)
                                    156 	.area CSEG    (CODE)
                                    157 ;--------------------------------------------------------
                                    158 ; global & static initialisations
                                    159 ;--------------------------------------------------------
                                    160 	.area HOME    (CODE)
                                    161 	.area GSINIT  (CODE)
                                    162 	.area GSFINAL (CODE)
                                    163 	.area GSINIT  (CODE)
                                    164 ;--------------------------------------------------------
                                    165 ; Home
                                    166 ;--------------------------------------------------------
                                    167 	.area HOME    (CODE)
                                    168 	.area HOME    (CODE)
                                    169 ;--------------------------------------------------------
                                    170 ; code
                                    171 ;--------------------------------------------------------
                                    172 	.area CSEG    (CODE)
                                    173 ;------------------------------------------------------------
                                    174 ;Allocation info for local variables in function 'init_usb'
                                    175 ;------------------------------------------------------------
                                    176 ;ms_elapsed                Allocated with name '_init_usb_ms_elapsed_65536_70'
                                    177 ;__1310720005              Allocated with name '_init_usb___1310720005_131072_71'
                                    178 ;us                        Allocated with name '_init_usb_us_196608_72'
                                    179 ;------------------------------------------------------------
                                    180 ;	src/usb.c:29: bool init_usb() 
                                    181 ;	-----------------------------------------
                                    182 ;	 function init_usb
                                    183 ;	-----------------------------------------
      000000                        184 _init_usb:
                           000007   185 	ar7 = 0x07
                           000006   186 	ar6 = 0x06
                           000005   187 	ar5 = 0x05
                           000004   188 	ar4 = 0x04
                           000003   189 	ar3 = 0x03
                           000002   190 	ar2 = 0x02
                           000001   191 	ar1 = 0x01
                           000000   192 	ar0 = 0x00
                                    193 ;	src/usb.c:32: configured = false;
      000000 90r00r00         [24]  194 	mov	dptr,#_configured
      000003 E4               [12]  195 	clr	a
      000004 F0               [24]  196 	movx	@dptr,a
                                    197 ;	src/usb.c:35: usbcon = 0x40; 
      000005 75 A0 40         [24]  198 	mov	_usbcon,#0x40
                                    199 ;	src/usb.c:38: usbcs |= 0x08;
      000008 90 C7 D6         [24]  200 	mov	dptr,#0xc7d6
      00000B E0               [24]  201 	movx	a,@dptr
      00000C FF               [12]  202 	mov	r7,a
      00000D 43 07 08         [24]  203 	orl	ar7,#0x08
      000010 90 C7 D6         [24]  204 	mov	dptr,#0xc7d6
      000013 EF               [12]  205 	mov	a,r7
      000014 F0               [24]  206 	movx	@dptr,a
                                    207 ;	src/nRF24LU1P.h:35: inline void delay_us(uint16_t us) { do nop_us(); while(--us); }
      000015 7E 50            [12]  208 	mov	r6,#0x50
      000017 7F C3            [12]  209 	mov	r7,#0xc3
      000019                        210 00104$:
      000019 00               [12]  211 	nop 
      00001A 00               [12]  212 	nop 
      00001B 00               [12]  213 	nop 
      00001C 00               [12]  214 	nop 
      00001D 1E               [12]  215 	dec	r6
      00001E BE FF 01         [24]  216 	cjne	r6,#0xff,00127$
      000021 1F               [12]  217 	dec	r7
      000022                        218 00127$:
      000022 EE               [12]  219 	mov	a,r6
      000023 4F               [12]  220 	orl	a,r7
      000024 70 F3            [24]  221 	jnz	00104$
                                    222 ;	src/usb.c:40: usbcs &= ~0x08;
      000026 90 C7 D6         [24]  223 	mov	dptr,#0xc7d6
      000029 E0               [24]  224 	movx	a,@dptr
      00002A 54 F7            [12]  225 	anl	a,#0xf7
      00002C F0               [24]  226 	movx	@dptr,a
                                    227 ;	src/usb.c:43: usb_reset_config();
      00002D 12r00r3A         [24]  228 	lcall	_usb_reset_config
                                    229 ;	src/usb.c:46: while(!configured);
      000030                        230 00101$:
      000030 90r00r00         [24]  231 	mov	dptr,#_configured
      000033 E0               [24]  232 	movx	a,@dptr
      000034 60 FA            [24]  233 	jz	00101$
                                    234 ;	src/usb.c:49: return true;
      000036 75 82 01         [24]  235 	mov	dpl,#0x01
                                    236 ;	src/usb.c:50: }
      000039 22               [24]  237 	ret
                                    238 ;------------------------------------------------------------
                                    239 ;Allocation info for local variables in function 'usb_reset_config'
                                    240 ;------------------------------------------------------------
                                    241 ;	src/usb.c:53: void usb_reset_config()
                                    242 ;	-----------------------------------------
                                    243 ;	 function usb_reset_config
                                    244 ;	-----------------------------------------
      00003A                        245 _usb_reset_config:
                                    246 ;	src/usb.c:56: usbien = 0x11;  // USB reset and setup data valid
      00003A 90 C7 AE         [24]  247 	mov	dptr,#0xc7ae
      00003D 74 11            [12]  248 	mov	a,#0x11
      00003F F0               [24]  249 	movx	@dptr,a
                                    250 ;	src/usb.c:57: in_ien = 0x00;  // Disable EP IN interrupts
      000040 90 C7 AC         [24]  251 	mov	dptr,#0xc7ac
      000043 E4               [12]  252 	clr	a
      000044 F0               [24]  253 	movx	@dptr,a
                                    254 ;	src/usb.c:58: out_ien = 0x02; // Enable EP1 OUT interrupt
      000045 90 C7 AD         [24]  255 	mov	dptr,#0xc7ad
      000048 74 02            [12]  256 	mov	a,#0x02
      00004A F0               [24]  257 	movx	@dptr,a
                                    258 ;	src/usb.c:59: ien1 = 0x10;    // Enable USB interrupt
      00004B 75 B8 10         [24]  259 	mov	_ien1,#0x10
                                    260 ;	src/usb.c:60: in_irq = 0x1F;  // Clear IN IRQ flags
      00004E 90 C7 A9         [24]  261 	mov	dptr,#0xc7a9
      000051 74 1F            [12]  262 	mov	a,#0x1f
      000053 F0               [24]  263 	movx	@dptr,a
                                    264 ;	src/usb.c:61: out_irq = 0x1F; // Clear OUT IRQ flags
      000054 90 C7 AA         [24]  265 	mov	dptr,#0xc7aa
      000057 F0               [24]  266 	movx	@dptr,a
                                    267 ;	src/usb.c:64: inbulkval = 0x02;
      000058 90 C7 DE         [24]  268 	mov	dptr,#0xc7de
      00005B 74 02            [12]  269 	mov	a,#0x02
      00005D F0               [24]  270 	movx	@dptr,a
                                    271 ;	src/usb.c:65: outbulkval = 0x02;
      00005E 90 C7 DF         [24]  272 	mov	dptr,#0xc7df
      000061 F0               [24]  273 	movx	@dptr,a
                                    274 ;	src/usb.c:66: inisoval = 0x00;
      000062 90 C7 E0         [24]  275 	mov	dptr,#0xc7e0
      000065 E4               [12]  276 	clr	a
      000066 F0               [24]  277 	movx	@dptr,a
                                    278 ;	src/usb.c:67: outisoval = 0x00;  
      000067 90 C7 E1         [24]  279 	mov	dptr,#0xc7e1
      00006A F0               [24]  280 	movx	@dptr,a
                                    281 ;	src/usb.c:70: bout1addr = 32;
      00006B 90 C7 81         [24]  282 	mov	dptr,#0xc781
      00006E 74 20            [12]  283 	mov	a,#0x20
      000070 F0               [24]  284 	movx	@dptr,a
                                    285 ;	src/usb.c:71: bout2addr = 64;
      000071 90 C7 82         [24]  286 	mov	dptr,#0xc782
      000074 23               [12]  287 	rl	a
      000075 F0               [24]  288 	movx	@dptr,a
                                    289 ;	src/usb.c:72: binstaddr = 16;
      000076 90 C7 88         [24]  290 	mov	dptr,#0xc788
      000079 74 10            [12]  291 	mov	a,#0x10
      00007B F0               [24]  292 	movx	@dptr,a
                                    293 ;	src/usb.c:73: bin1addr  = 32;
      00007C 90 C7 89         [24]  294 	mov	dptr,#0xc789
      00007F 23               [12]  295 	rl	a
      000080 F0               [24]  296 	movx	@dptr,a
                                    297 ;	src/usb.c:74: bin2addr  = 64;
      000081 90 C7 8A         [24]  298 	mov	dptr,#0xc78a
      000084 23               [12]  299 	rl	a
      000085 F0               [24]  300 	movx	@dptr,a
                                    301 ;	src/usb.c:75: out1bc    = 0xFF;
      000086 90 C7 C7         [24]  302 	mov	dptr,#0xc7c7
      000089 74 FF            [12]  303 	mov	a,#0xff
      00008B F0               [24]  304 	movx	@dptr,a
                                    305 ;	src/usb.c:76: }
      00008C 22               [24]  306 	ret
                                    307 ;------------------------------------------------------------
                                    308 ;Allocation info for local variables in function 'usb_irq'
                                    309 ;------------------------------------------------------------
                                    310 ;	src/usb.c:79: void usb_irq() __interrupt(12)  __using(1)
                                    311 ;	-----------------------------------------
                                    312 ;	 function usb_irq
                                    313 ;	-----------------------------------------
      00008D                        314 _usb_irq:
                           00000F   315 	ar7 = 0x0f
                           00000E   316 	ar6 = 0x0e
                           00000D   317 	ar5 = 0x0d
                           00000C   318 	ar4 = 0x0c
                           00000B   319 	ar3 = 0x0b
                           00000A   320 	ar2 = 0x0a
                           000009   321 	ar1 = 0x09
                           000008   322 	ar0 = 0x08
      00008D C0*00            [24]  323 	push	bits
      00008F C0 E0            [24]  324 	push	acc
      000091 C0 F0            [24]  325 	push	b
      000093 C0 82            [24]  326 	push	dpl
      000095 C0 83            [24]  327 	push	dph
      000097 C0 07            [24]  328 	push	(0+7)
      000099 C0 06            [24]  329 	push	(0+6)
      00009B C0 05            [24]  330 	push	(0+5)
      00009D C0 04            [24]  331 	push	(0+4)
      00009F C0 03            [24]  332 	push	(0+3)
      0000A1 C0 02            [24]  333 	push	(0+2)
      0000A3 C0 01            [24]  334 	push	(0+1)
      0000A5 C0 00            [24]  335 	push	(0+0)
      0000A7 C0 D0            [24]  336 	push	psw
      0000A9 75 D0 08         [24]  337 	mov	psw,#0x08
                                    338 ;	src/usb.c:83: switch (ivec) 
      0000AC 90 C7 A8         [24]  339 	mov	dptr,#0xc7a8
      0000AF E0               [24]  340 	movx	a,@dptr
      0000B0 FF               [12]  341 	mov	r7,a
      0000B1 60 0A            [24]  342 	jz	00101$
      0000B3 BF 10 02         [24]  343 	cjne	r7,#0x10,00120$
      0000B6 80 16            [24]  344 	sjmp	00102$
      0000B8                        345 00120$:
                                    346 ;	src/usb.c:86: case 0x00:
      0000B8 BF 24 4D         [24]  347 	cjne	r7,#0x24,00105$
      0000BB 80 22            [24]  348 	sjmp	00103$
      0000BD                        349 00101$:
                                    350 ;	src/usb.c:87: handle_setup_request();
      0000BD 75 D0 00         [24]  351 	mov	psw,#0x00
      0000C0 12r02rDA         [24]  352 	lcall	_handle_setup_request
      0000C3 75 D0 08         [24]  353 	mov	psw,#0x08
                                    354 ;	src/usb.c:88: usbirq = 0x01;
      0000C6 90 C7 AB         [24]  355 	mov	dptr,#0xc7ab
      0000C9 74 01            [12]  356 	mov	a,#0x01
      0000CB F0               [24]  357 	movx	@dptr,a
                                    358 ;	src/usb.c:89: break;
                                    359 ;	src/usb.c:92: case 0x10:
      0000CC 80 3A            [24]  360 	sjmp	00105$
      0000CE                        361 00102$:
                                    362 ;	src/usb.c:93: usb_reset_config();
      0000CE 75 D0 00         [24]  363 	mov	psw,#0x00
      0000D1 12r00r3A         [24]  364 	lcall	_usb_reset_config
      0000D4 75 D0 08         [24]  365 	mov	psw,#0x08
                                    366 ;	src/usb.c:94: usbirq = 0x10;
      0000D7 90 C7 AB         [24]  367 	mov	dptr,#0xc7ab
      0000DA 74 10            [12]  368 	mov	a,#0x10
      0000DC F0               [24]  369 	movx	@dptr,a
                                    370 ;	src/usb.c:95: break;
                                    371 ;	src/usb.c:98: case 0x24:
      0000DD 80 29            [24]  372 	sjmp	00105$
      0000DF                        373 00103$:
                                    374 ;	src/usb.c:99: handle_radio_request(out1buf[0], &out1buf[1]);
      0000DF 90 C6 40         [24]  375 	mov	dptr,#_out1buf
      0000E2 E0               [24]  376 	movx	a,@dptr
      0000E3 FF               [12]  377 	mov	r7,a
      0000E4 90r00r00         [24]  378 	mov	dptr,#_handle_radio_request_PARM_2
      0000E7 74 41            [12]  379 	mov	a,#(_out1buf + 0x0001)
      0000E9 F0               [24]  380 	movx	@dptr,a
      0000EA 74 C6            [12]  381 	mov	a,#((_out1buf + 0x0001) >> 8)
      0000EC A3               [24]  382 	inc	dptr
      0000ED F0               [24]  383 	movx	@dptr,a
      0000EE E4               [12]  384 	clr	a
      0000EF A3               [24]  385 	inc	dptr
      0000F0 F0               [24]  386 	movx	@dptr,a
      0000F1 8F 82            [24]  387 	mov	dpl,r7
      0000F3 75 D0 00         [24]  388 	mov	psw,#0x00
      0000F6 12r00r00         [24]  389 	lcall	_handle_radio_request
      0000F9 75 D0 08         [24]  390 	mov	psw,#0x08
                                    391 ;	src/usb.c:100: out_irq = 0x02;
      0000FC 90 C7 AA         [24]  392 	mov	dptr,#0xc7aa
      0000FF 74 02            [12]  393 	mov	a,#0x02
      000101 F0               [24]  394 	movx	@dptr,a
                                    395 ;	src/usb.c:101: out1bc = 0xFF;
      000102 90 C7 C7         [24]  396 	mov	dptr,#0xc7c7
      000105 74 FF            [12]  397 	mov	a,#0xff
      000107 F0               [24]  398 	movx	@dptr,a
                                    399 ;	src/usb.c:103: }
      000108                        400 00105$:
                                    401 ;	src/usb.c:104: }
      000108 D0 D0            [24]  402 	pop	psw
      00010A D0 00            [24]  403 	pop	(0+0)
      00010C D0 01            [24]  404 	pop	(0+1)
      00010E D0 02            [24]  405 	pop	(0+2)
      000110 D0 03            [24]  406 	pop	(0+3)
      000112 D0 04            [24]  407 	pop	(0+4)
      000114 D0 05            [24]  408 	pop	(0+5)
      000116 D0 06            [24]  409 	pop	(0+6)
      000118 D0 07            [24]  410 	pop	(0+7)
      00011A D0 83            [24]  411 	pop	dph
      00011C D0 82            [24]  412 	pop	dpl
      00011E D0 F0            [24]  413 	pop	b
      000120 D0 E0            [24]  414 	pop	acc
      000122 D0*00            [24]  415 	pop	bits
      000124 32               [24]  416 	reti
                                    417 ;------------------------------------------------------------
                                    418 ;Allocation info for local variables in function 'write_device_string'
                                    419 ;------------------------------------------------------------
                                    420 ;sloc0                     Allocated with name '_write_device_string_sloc0_1_0'
                                    421 ;string                    Allocated with name '_write_device_string_string_65536_77'
                                    422 ;x                         Allocated with name '_write_device_string_x_65536_78'
                                    423 ;length                    Allocated with name '_write_device_string_length_65536_78'
                                    424 ;------------------------------------------------------------
                                    425 ;	src/usb.c:107: void write_device_string(const char * string)
                                    426 ;	-----------------------------------------
                                    427 ;	 function write_device_string
                                    428 ;	-----------------------------------------
      000125                        429 _write_device_string:
                           000007   430 	ar7 = 0x07
                           000006   431 	ar6 = 0x06
                           000005   432 	ar5 = 0x05
                           000004   433 	ar4 = 0x04
                           000003   434 	ar3 = 0x03
                           000002   435 	ar2 = 0x02
                           000001   436 	ar1 = 0x01
                           000000   437 	ar0 = 0x00
      000125 AF F0            [24]  438 	mov	r7,b
      000127 AE 83            [24]  439 	mov	r6,dph
      000129 E5 82            [12]  440 	mov	a,dpl
      00012B 90r00r01         [24]  441 	mov	dptr,#_write_device_string_string_65536_77
      00012E F0               [24]  442 	movx	@dptr,a
      00012F EE               [12]  443 	mov	a,r6
      000130 A3               [24]  444 	inc	dptr
      000131 F0               [24]  445 	movx	@dptr,a
      000132 EF               [12]  446 	mov	a,r7
      000133 A3               [24]  447 	inc	dptr
      000134 F0               [24]  448 	movx	@dptr,a
                                    449 ;	src/usb.c:110: int length = strlen(string);
      000135 90r00r01         [24]  450 	mov	dptr,#_write_device_string_string_65536_77
      000138 E0               [24]  451 	movx	a,@dptr
      000139 FD               [12]  452 	mov	r5,a
      00013A A3               [24]  453 	inc	dptr
      00013B E0               [24]  454 	movx	a,@dptr
      00013C FE               [12]  455 	mov	r6,a
      00013D A3               [24]  456 	inc	dptr
      00013E E0               [24]  457 	movx	a,@dptr
      00013F FF               [12]  458 	mov	r7,a
      000140 8D 82            [24]  459 	mov	dpl,r5
      000142 8E 83            [24]  460 	mov	dph,r6
      000144 8F F0            [24]  461 	mov	b,r7
      000146 12r00r00         [24]  462 	lcall	_strlen
      000149 AE 82            [24]  463 	mov	r6,dpl
      00014B AF 83            [24]  464 	mov	r7,dph
                                    465 ;	src/usb.c:111: memset(in0buf+2, 0, 64);
      00014D 90r00r00         [24]  466 	mov	dptr,#_memset_PARM_2
      000150 E4               [12]  467 	clr	a
      000151 F0               [24]  468 	movx	@dptr,a
      000152 90r00r00         [24]  469 	mov	dptr,#_memset_PARM_3
      000155 74 40            [12]  470 	mov	a,#0x40
      000157 F0               [24]  471 	movx	@dptr,a
      000158 E4               [12]  472 	clr	a
      000159 A3               [24]  473 	inc	dptr
      00015A F0               [24]  474 	movx	@dptr,a
      00015B 90 C7 02         [24]  475 	mov	dptr,#(_in0buf + 0x0002)
      00015E 75 F0 00         [24]  476 	mov	b,#0x00
      000161 C0 07            [24]  477 	push	ar7
      000163 C0 06            [24]  478 	push	ar6
      000165 12r00r00         [24]  479 	lcall	_memset
      000168 D0 06            [24]  480 	pop	ar6
      00016A D0 07            [24]  481 	pop	ar7
                                    482 ;	src/usb.c:112: in0buf[0] = 2+length*2;
      00016C 8E 04            [24]  483 	mov	ar4,r6
      00016E 8F 05            [24]  484 	mov	ar5,r7
      000170 EC               [12]  485 	mov	a,r4
      000171 2C               [12]  486 	add	a,r4
      000172 FC               [12]  487 	mov	r4,a
      000173 0C               [12]  488 	inc	r4
      000174 0C               [12]  489 	inc	r4
      000175 90 C7 00         [24]  490 	mov	dptr,#_in0buf
      000178 EC               [12]  491 	mov	a,r4
      000179 F0               [24]  492 	movx	@dptr,a
                                    493 ;	src/usb.c:113: in0buf[1] = STRING_DESCRIPTOR;
      00017A 90 C7 01         [24]  494 	mov	dptr,#(_in0buf + 0x0001)
      00017D 74 03            [12]  495 	mov	a,#0x03
      00017F F0               [24]  496 	movx	@dptr,a
                                    497 ;	src/usb.c:114: for(x = 0; x < length; x++) in0buf[2+x*2] = string[x];
      000180 90r00r01         [24]  498 	mov	dptr,#_write_device_string_string_65536_77
      000183 E0               [24]  499 	movx	a,@dptr
      000184 FB               [12]  500 	mov	r3,a
      000185 A3               [24]  501 	inc	dptr
      000186 E0               [24]  502 	movx	a,@dptr
      000187 FC               [12]  503 	mov	r4,a
      000188 A3               [24]  504 	inc	dptr
      000189 E0               [24]  505 	movx	a,@dptr
      00018A FD               [12]  506 	mov	r5,a
      00018B 79 00            [12]  507 	mov	r1,#0x00
      00018D 7A 00            [12]  508 	mov	r2,#0x00
      00018F                        509 00103$:
      00018F C3               [12]  510 	clr	c
      000190 E9               [12]  511 	mov	a,r1
      000191 9E               [12]  512 	subb	a,r6
      000192 EA               [12]  513 	mov	a,r2
      000193 64 80            [12]  514 	xrl	a,#0x80
      000195 8F F0            [24]  515 	mov	b,r7
      000197 63 F0 80         [24]  516 	xrl	b,#0x80
      00019A 95 F0            [12]  517 	subb	a,b
      00019C 50 3B            [24]  518 	jnc	00101$
      00019E C0 06            [24]  519 	push	ar6
      0001A0 C0 07            [24]  520 	push	ar7
      0001A2 89 00            [24]  521 	mov	ar0,r1
      0001A4 E8               [12]  522 	mov	a,r0
      0001A5 28               [12]  523 	add	a,r0
      0001A6 F8               [12]  524 	mov	r0,a
      0001A7 08               [12]  525 	inc	r0
      0001A8 08               [12]  526 	inc	r0
      0001A9 E8               [12]  527 	mov	a,r0
      0001AA 33               [12]  528 	rlc	a
      0001AB 95 E0            [12]  529 	subb	a,acc
      0001AD FF               [12]  530 	mov	r7,a
      0001AE 88*00            [24]  531 	mov	_write_device_string_sloc0_1_0,r0
      0001B0 74 C7            [12]  532 	mov	a,#(_in0buf >> 8)
      0001B2 2F               [12]  533 	add	a,r7
      0001B3 F5*01            [12]  534 	mov	(_write_device_string_sloc0_1_0 + 1),a
      0001B5 E9               [12]  535 	mov	a,r1
      0001B6 2B               [12]  536 	add	a,r3
      0001B7 F8               [12]  537 	mov	r0,a
      0001B8 EA               [12]  538 	mov	a,r2
      0001B9 3C               [12]  539 	addc	a,r4
      0001BA FE               [12]  540 	mov	r6,a
      0001BB 8D 07            [24]  541 	mov	ar7,r5
      0001BD 88 82            [24]  542 	mov	dpl,r0
      0001BF 8E 83            [24]  543 	mov	dph,r6
      0001C1 8F F0            [24]  544 	mov	b,r7
      0001C3 12r00r00         [24]  545 	lcall	__gptrget
      0001C6 F8               [12]  546 	mov	r0,a
      0001C7 85*00 82         [24]  547 	mov	dpl,_write_device_string_sloc0_1_0
      0001CA 85*01 83         [24]  548 	mov	dph,(_write_device_string_sloc0_1_0 + 1)
      0001CD F0               [24]  549 	movx	@dptr,a
      0001CE 09               [12]  550 	inc	r1
      0001CF B9 00 01         [24]  551 	cjne	r1,#0x00,00117$
      0001D2 0A               [12]  552 	inc	r2
      0001D3                        553 00117$:
      0001D3 D0 07            [24]  554 	pop	ar7
      0001D5 D0 06            [24]  555 	pop	ar6
      0001D7 80 B6            [24]  556 	sjmp	00103$
      0001D9                        557 00101$:
                                    558 ;	src/usb.c:115: in0bc = in0buf[0];
      0001D9 90 C7 00         [24]  559 	mov	dptr,#_in0buf
      0001DC E0               [24]  560 	movx	a,@dptr
      0001DD 90 C7 B5         [24]  561 	mov	dptr,#0xc7b5
      0001E0 F0               [24]  562 	movx	@dptr,a
                                    563 ;	src/usb.c:116: }
      0001E1 22               [24]  564 	ret
                                    565 ;------------------------------------------------------------
                                    566 ;Allocation info for local variables in function 'write_descriptor'
                                    567 ;------------------------------------------------------------
                                    568 ;desc_len                  Allocated with name '_write_descriptor_desc_len_65536_80'
                                    569 ;------------------------------------------------------------
                                    570 ;	src/usb.c:119: bool write_descriptor()
                                    571 ;	-----------------------------------------
                                    572 ;	 function write_descriptor
                                    573 ;	-----------------------------------------
      0001E2                        574 _write_descriptor:
                                    575 ;	src/usb.c:121: uint8_t desc_len = request->wLength;
      0001E2 90r00r04         [24]  576 	mov	dptr,#_request
      0001E5 E0               [24]  577 	movx	a,@dptr
      0001E6 FE               [12]  578 	mov	r6,a
      0001E7 A3               [24]  579 	inc	dptr
      0001E8 E0               [24]  580 	movx	a,@dptr
      0001E9 FF               [12]  581 	mov	r7,a
      0001EA 74 06            [12]  582 	mov	a,#0x06
      0001EC 2E               [12]  583 	add	a,r6
      0001ED F5 82            [12]  584 	mov	dpl,a
      0001EF E4               [12]  585 	clr	a
      0001F0 3F               [12]  586 	addc	a,r7
      0001F1 F5 83            [12]  587 	mov	dph,a
      0001F3 E0               [24]  588 	movx	a,@dptr
      0001F4 FD               [12]  589 	mov	r5,a
      0001F5 90r00r04         [24]  590 	mov	dptr,#_write_descriptor_desc_len_65536_80
      0001F8 F0               [24]  591 	movx	@dptr,a
                                    592 ;	src/usb.c:123: switch(request->wValue >> 8)
      0001F9 8E 82            [24]  593 	mov	dpl,r6
      0001FB 8F 83            [24]  594 	mov	dph,r7
      0001FD A3               [24]  595 	inc	dptr
      0001FE A3               [24]  596 	inc	dptr
      0001FF E0               [24]  597 	movx	a,@dptr
      000200 A3               [24]  598 	inc	dptr
      000201 E0               [24]  599 	movx	a,@dptr
      000202 FE               [12]  600 	mov	r6,a
      000203 7F 00            [12]  601 	mov	r7,#0x00
      000205 BE 01 05         [24]  602 	cjne	r6,#0x01,00131$
      000208 BF 00 02         [24]  603 	cjne	r7,#0x00,00131$
      00020B 80 14            [24]  604 	sjmp	00101$
      00020D                        605 00131$:
      00020D BE 02 05         [24]  606 	cjne	r6,#0x02,00132$
      000210 BF 00 02         [24]  607 	cjne	r7,#0x00,00132$
      000213 80 4F            [24]  608 	sjmp	00104$
      000215                        609 00132$:
      000215 BE 03 06         [24]  610 	cjne	r6,#0x03,00133$
      000218 BF 00 03         [24]  611 	cjne	r7,#0x00,00133$
      00021B 02r02rB0         [24]  612 	ljmp	00107$
      00021E                        613 00133$:
      00021E 02r02rD6         [24]  614 	ljmp	00108$
                                    615 ;	src/usb.c:126: case DEVICE_DESCRIPTOR:
      000221                        616 00101$:
                                    617 ;	src/usb.c:127: if(desc_len > device_descriptor.bLength) desc_len = device_descriptor.bLength;
      000221 90r00r00         [24]  618 	mov	dptr,#_device_descriptor
      000224 E4               [12]  619 	clr	a
      000225 93               [24]  620 	movc	a,@a+dptr
      000226 FF               [12]  621 	mov	r7,a
      000227 C3               [12]  622 	clr	c
      000228 9D               [12]  623 	subb	a,r5
      000229 50 05            [24]  624 	jnc	00103$
      00022B 90r00r04         [24]  625 	mov	dptr,#_write_descriptor_desc_len_65536_80
      00022E EF               [12]  626 	mov	a,r7
      00022F F0               [24]  627 	movx	@dptr,a
      000230                        628 00103$:
                                    629 ;	src/usb.c:128: memcpy(in0buf, &device_descriptor, desc_len);
      000230 90r00r04         [24]  630 	mov	dptr,#_write_descriptor_desc_len_65536_80
      000233 E0               [24]  631 	movx	a,@dptr
      000234 FF               [12]  632 	mov	r7,a
      000235 FC               [12]  633 	mov	r4,a
      000236 7E 00            [12]  634 	mov	r6,#0x00
      000238 90r00r00         [24]  635 	mov	dptr,#_memcpy_PARM_2
      00023B 74r00            [12]  636 	mov	a,#_device_descriptor
      00023D F0               [24]  637 	movx	@dptr,a
      00023E 74s00            [12]  638 	mov	a,#(_device_descriptor >> 8)
      000240 A3               [24]  639 	inc	dptr
      000241 F0               [24]  640 	movx	@dptr,a
      000242 74 80            [12]  641 	mov	a,#0x80
      000244 A3               [24]  642 	inc	dptr
      000245 F0               [24]  643 	movx	@dptr,a
      000246 90r00r00         [24]  644 	mov	dptr,#_memcpy_PARM_3
      000249 EC               [12]  645 	mov	a,r4
      00024A F0               [24]  646 	movx	@dptr,a
      00024B EE               [12]  647 	mov	a,r6
      00024C A3               [24]  648 	inc	dptr
      00024D F0               [24]  649 	movx	@dptr,a
      00024E 90 C7 00         [24]  650 	mov	dptr,#_in0buf
      000251 75 F0 00         [24]  651 	mov	b,#0x00
      000254 C0 07            [24]  652 	push	ar7
      000256 12r00r00         [24]  653 	lcall	_memcpy
      000259 D0 07            [24]  654 	pop	ar7
                                    655 ;	src/usb.c:129: in0bc = desc_len;
      00025B 90 C7 B5         [24]  656 	mov	dptr,#0xc7b5
      00025E EF               [12]  657 	mov	a,r7
      00025F F0               [24]  658 	movx	@dptr,a
                                    659 ;	src/usb.c:130: return true;
      000260 75 82 01         [24]  660 	mov	dpl,#0x01
      000263 22               [24]  661 	ret
                                    662 ;	src/usb.c:133: case CONFIGURATION_DESCRIPTOR:
      000264                        663 00104$:
                                    664 ;	src/usb.c:134: if(desc_len > configuration_descriptor.wTotalLength) desc_len = configuration_descriptor.wTotalLength;
      000264 90r00r02         [24]  665 	mov	dptr,#(_configuration_descriptor + 0x0002)
      000267 E4               [12]  666 	clr	a
      000268 93               [24]  667 	movc	a,@a+dptr
      000269 FE               [12]  668 	mov	r6,a
      00026A A3               [24]  669 	inc	dptr
      00026B E4               [12]  670 	clr	a
      00026C 93               [24]  671 	movc	a,@a+dptr
      00026D FF               [12]  672 	mov	r7,a
      00026E 7C 00            [12]  673 	mov	r4,#0x00
      000270 C3               [12]  674 	clr	c
      000271 EE               [12]  675 	mov	a,r6
      000272 9D               [12]  676 	subb	a,r5
      000273 EF               [12]  677 	mov	a,r7
      000274 9C               [12]  678 	subb	a,r4
      000275 50 05            [24]  679 	jnc	00106$
      000277 90r00r04         [24]  680 	mov	dptr,#_write_descriptor_desc_len_65536_80
      00027A EE               [12]  681 	mov	a,r6
      00027B F0               [24]  682 	movx	@dptr,a
      00027C                        683 00106$:
                                    684 ;	src/usb.c:135: memcpy(in0buf, &configuration_descriptor, desc_len);
      00027C 90r00r04         [24]  685 	mov	dptr,#_write_descriptor_desc_len_65536_80
      00027F E0               [24]  686 	movx	a,@dptr
      000280 FF               [12]  687 	mov	r7,a
      000281 FD               [12]  688 	mov	r5,a
      000282 7E 00            [12]  689 	mov	r6,#0x00
      000284 90r00r00         [24]  690 	mov	dptr,#_memcpy_PARM_2
      000287 74r00            [12]  691 	mov	a,#_configuration_descriptor
      000289 F0               [24]  692 	movx	@dptr,a
      00028A 74s00            [12]  693 	mov	a,#(_configuration_descriptor >> 8)
      00028C A3               [24]  694 	inc	dptr
      00028D F0               [24]  695 	movx	@dptr,a
      00028E 74 80            [12]  696 	mov	a,#0x80
      000290 A3               [24]  697 	inc	dptr
      000291 F0               [24]  698 	movx	@dptr,a
      000292 90r00r00         [24]  699 	mov	dptr,#_memcpy_PARM_3
      000295 ED               [12]  700 	mov	a,r5
      000296 F0               [24]  701 	movx	@dptr,a
      000297 EE               [12]  702 	mov	a,r6
      000298 A3               [24]  703 	inc	dptr
      000299 F0               [24]  704 	movx	@dptr,a
      00029A 90 C7 00         [24]  705 	mov	dptr,#_in0buf
      00029D 75 F0 00         [24]  706 	mov	b,#0x00
      0002A0 C0 07            [24]  707 	push	ar7
      0002A2 12r00r00         [24]  708 	lcall	_memcpy
      0002A5 D0 07            [24]  709 	pop	ar7
                                    710 ;	src/usb.c:136: in0bc = desc_len;
      0002A7 90 C7 B5         [24]  711 	mov	dptr,#0xc7b5
      0002AA EF               [12]  712 	mov	a,r7
      0002AB F0               [24]  713 	movx	@dptr,a
                                    714 ;	src/usb.c:137: return true;
      0002AC 75 82 01         [24]  715 	mov	dpl,#0x01
                                    716 ;	src/usb.c:141: case STRING_DESCRIPTOR:
      0002AF 22               [24]  717 	ret
      0002B0                        718 00107$:
                                    719 ;	src/usb.c:142: write_device_string(device_strings[setupbuf[2]]);
      0002B0 90 C7 EA         [24]  720 	mov	dptr,#(_setupbuf + 0x0002)
      0002B3 E0               [24]  721 	movx	a,@dptr
      0002B4 75 F0 02         [24]  722 	mov	b,#0x02
      0002B7 A4               [48]  723 	mul	ab
      0002B8 24r00            [12]  724 	add	a,#_device_strings
      0002BA F5 82            [12]  725 	mov	dpl,a
      0002BC 74s00            [12]  726 	mov	a,#(_device_strings >> 8)
      0002BE 35 F0            [12]  727 	addc	a,b
      0002C0 F5 83            [12]  728 	mov	dph,a
      0002C2 E0               [24]  729 	movx	a,@dptr
      0002C3 FE               [12]  730 	mov	r6,a
      0002C4 A3               [24]  731 	inc	dptr
      0002C5 E0               [24]  732 	movx	a,@dptr
      0002C6 FF               [12]  733 	mov	r7,a
      0002C7 7D 80            [12]  734 	mov	r5,#0x80
      0002C9 8E 82            [24]  735 	mov	dpl,r6
      0002CB 8F 83            [24]  736 	mov	dph,r7
      0002CD 8D F0            [24]  737 	mov	b,r5
      0002CF 12r01r25         [24]  738 	lcall	_write_device_string
                                    739 ;	src/usb.c:143: return true;   
      0002D2 75 82 01         [24]  740 	mov	dpl,#0x01
                                    741 ;	src/usb.c:144: }  
      0002D5 22               [24]  742 	ret
      0002D6                        743 00108$:
                                    744 ;	src/usb.c:147: return false;
      0002D6 75 82 00         [24]  745 	mov	dpl,#0x00
                                    746 ;	src/usb.c:148: }
      0002D9 22               [24]  747 	ret
                                    748 ;------------------------------------------------------------
                                    749 ;Allocation info for local variables in function 'handle_setup_request'
                                    750 ;------------------------------------------------------------
                                    751 ;handled                   Allocated with name '_handle_setup_request_handled_65536_82'
                                    752 ;------------------------------------------------------------
                                    753 ;	src/usb.c:151: void handle_setup_request()
                                    754 ;	-----------------------------------------
                                    755 ;	 function handle_setup_request
                                    756 ;	-----------------------------------------
      0002DA                        757 _handle_setup_request:
                                    758 ;	src/usb.c:153: bool handled = false;
      0002DA 90r00r05         [24]  759 	mov	dptr,#_handle_setup_request_handled_65536_82
      0002DD E4               [12]  760 	clr	a
      0002DE F0               [24]  761 	movx	@dptr,a
                                    762 ;	src/usb.c:154: switch(request->bRequest)
      0002DF 90r00r04         [24]  763 	mov	dptr,#_request
      0002E2 E0               [24]  764 	movx	a,@dptr
      0002E3 FE               [12]  765 	mov	r6,a
      0002E4 A3               [24]  766 	inc	dptr
      0002E5 E0               [24]  767 	movx	a,@dptr
      0002E6 FF               [12]  768 	mov	r7,a
      0002E7 8E 82            [24]  769 	mov	dpl,r6
      0002E9 8F 83            [24]  770 	mov	dph,r7
      0002EB A3               [24]  771 	inc	dptr
      0002EC E0               [24]  772 	movx	a,@dptr
      0002ED FD               [12]  773 	mov	r5,a
      0002EE 60 6B            [24]  774 	jz	00110$
      0002F0 BD 05 02         [24]  775 	cjne	r5,#0x05,00164$
      0002F3 80 25            [24]  776 	sjmp	00104$
      0002F5                        777 00164$:
      0002F5 BD 06 02         [24]  778 	cjne	r5,#0x06,00165$
      0002F8 80 0D            [24]  779 	sjmp	00101$
      0002FA                        780 00165$:
      0002FA BD 08 02         [24]  781 	cjne	r5,#0x08,00166$
      0002FD 80 47            [24]  782 	sjmp	00109$
      0002FF                        783 00166$:
      0002FF BD 09 02         [24]  784 	cjne	r5,#0x09,00167$
      000302 80 1F            [24]  785 	sjmp	00105$
      000304                        786 00167$:
      000304 02r03r9E         [24]  787 	ljmp	00117$
                                    788 ;	src/usb.c:157: case GET_DESCRIPTOR:
      000307                        789 00101$:
                                    790 ;	src/usb.c:158: if(write_descriptor()) handled = true;
      000307 12r01rE2         [24]  791 	lcall	_write_descriptor
      00030A E5 82            [12]  792 	mov	a,dpl
      00030C 70 03            [24]  793 	jnz	00168$
      00030E 02r03r9E         [24]  794 	ljmp	00117$
      000311                        795 00168$:
      000311 90r00r05         [24]  796 	mov	dptr,#_handle_setup_request_handled_65536_82
      000314 74 01            [12]  797 	mov	a,#0x01
      000316 F0               [24]  798 	movx	@dptr,a
                                    799 ;	src/usb.c:159: break;
      000317 02r03r9E         [24]  800 	ljmp	00117$
                                    801 ;	src/usb.c:162: case SET_ADDRESS:
      00031A                        802 00104$:
                                    803 ;	src/usb.c:163: handled = true;
      00031A 90r00r05         [24]  804 	mov	dptr,#_handle_setup_request_handled_65536_82
      00031D 74 01            [12]  805 	mov	a,#0x01
      00031F F0               [24]  806 	movx	@dptr,a
                                    807 ;	src/usb.c:164: break;
      000320 02r03r9E         [24]  808 	ljmp	00117$
                                    809 ;	src/usb.c:167: case SET_CONFIGURATION:   
      000323                        810 00105$:
                                    811 ;	src/usb.c:168: if (request->wValue == 0) configured = false; // Not configured, drop back to powered state
      000323 8E 82            [24]  812 	mov	dpl,r6
      000325 8F 83            [24]  813 	mov	dph,r7
      000327 A3               [24]  814 	inc	dptr
      000328 A3               [24]  815 	inc	dptr
      000329 E0               [24]  816 	movx	a,@dptr
      00032A FC               [12]  817 	mov	r4,a
      00032B A3               [24]  818 	inc	dptr
      00032C E0               [24]  819 	movx	a,@dptr
      00032D FD               [12]  820 	mov	r5,a
      00032E 4C               [12]  821 	orl	a,r4
      00032F 70 07            [24]  822 	jnz	00107$
      000331 90r00r00         [24]  823 	mov	dptr,#_configured
      000334 E4               [12]  824 	clr	a
      000335 F0               [24]  825 	movx	@dptr,a
      000336 80 06            [24]  826 	sjmp	00108$
      000338                        827 00107$:
                                    828 ;	src/usb.c:169: else configured = true;                       // Configured
      000338 90r00r00         [24]  829 	mov	dptr,#_configured
      00033B 74 01            [12]  830 	mov	a,#0x01
      00033D F0               [24]  831 	movx	@dptr,a
      00033E                        832 00108$:
                                    833 ;	src/usb.c:170: handled = true;
      00033E 90r00r05         [24]  834 	mov	dptr,#_handle_setup_request_handled_65536_82
      000341 74 01            [12]  835 	mov	a,#0x01
      000343 F0               [24]  836 	movx	@dptr,a
                                    837 ;	src/usb.c:171: break;
                                    838 ;	src/usb.c:174: case GET_CONFIGURATION:
      000344 80 58            [24]  839 	sjmp	00117$
      000346                        840 00109$:
                                    841 ;	src/usb.c:175: in0buf[0] = configured;
      000346 90r00r00         [24]  842 	mov	dptr,#_configured
      000349 E0               [24]  843 	movx	a,@dptr
      00034A FD               [12]  844 	mov	r5,a
      00034B 90 C7 00         [24]  845 	mov	dptr,#_in0buf
      00034E F0               [24]  846 	movx	@dptr,a
                                    847 ;	src/usb.c:176: in0bc = 1;
      00034F 90 C7 B5         [24]  848 	mov	dptr,#0xc7b5
      000352 74 01            [12]  849 	mov	a,#0x01
      000354 F0               [24]  850 	movx	@dptr,a
                                    851 ;	src/usb.c:177: handled = true;
      000355 90r00r05         [24]  852 	mov	dptr,#_handle_setup_request_handled_65536_82
      000358 F0               [24]  853 	movx	@dptr,a
                                    854 ;	src/usb.c:178: break;
                                    855 ;	src/usb.c:181: case GET_STATUS:
      000359 80 43            [24]  856 	sjmp	00117$
      00035B                        857 00110$:
                                    858 ;	src/usb.c:184: if (request->bmRequestType == 0x82)
      00035B 8E 82            [24]  859 	mov	dpl,r6
      00035D 8F 83            [24]  860 	mov	dph,r7
      00035F E0               [24]  861 	movx	a,@dptr
      000360 FE               [12]  862 	mov	r6,a
      000361 BE 82 26         [24]  863 	cjne	r6,#0x82,00115$
                                    864 ;	src/usb.c:186: if ((setupbuf[4] & 0x80) == 0x80) in0buf[0] = in1cs;
      000364 90 C7 EC         [24]  865 	mov	dptr,#(_setupbuf + 0x0004)
      000367 E0               [24]  866 	movx	a,@dptr
      000368 FF               [12]  867 	mov	r7,a
      000369 53 07 80         [24]  868 	anl	ar7,#0x80
      00036C 7E 00            [12]  869 	mov	r6,#0x00
      00036E BF 80 0E         [24]  870 	cjne	r7,#0x80,00112$
      000371 BE 00 0B         [24]  871 	cjne	r6,#0x00,00112$
      000374 90 C7 B6         [24]  872 	mov	dptr,#0xc7b6
      000377 E0               [24]  873 	movx	a,@dptr
      000378 FF               [12]  874 	mov	r7,a
      000379 90 C7 00         [24]  875 	mov	dptr,#_in0buf
      00037C F0               [24]  876 	movx	@dptr,a
      00037D 80 14            [24]  877 	sjmp	00116$
      00037F                        878 00112$:
                                    879 ;	src/usb.c:187: else in0buf[0] = out1cs; 
      00037F 90 C7 C6         [24]  880 	mov	dptr,#0xc7c6
      000382 E0               [24]  881 	movx	a,@dptr
      000383 FF               [12]  882 	mov	r7,a
      000384 90 C7 00         [24]  883 	mov	dptr,#_in0buf
      000387 F0               [24]  884 	movx	@dptr,a
      000388 80 09            [24]  885 	sjmp	00116$
      00038A                        886 00115$:
                                    887 ;	src/usb.c:194: in0buf[0] = 0;
      00038A 90 C7 00         [24]  888 	mov	dptr,#_in0buf
      00038D E4               [12]  889 	clr	a
      00038E F0               [24]  890 	movx	@dptr,a
                                    891 ;	src/usb.c:195: in0buf[1] = 0;
      00038F 90 C7 01         [24]  892 	mov	dptr,#(_in0buf + 0x0001)
      000392 F0               [24]  893 	movx	@dptr,a
      000393                        894 00116$:
                                    895 ;	src/usb.c:198: in0bc = 2;
      000393 90 C7 B5         [24]  896 	mov	dptr,#0xc7b5
      000396 74 02            [12]  897 	mov	a,#0x02
      000398 F0               [24]  898 	movx	@dptr,a
                                    899 ;	src/usb.c:199: handled = true;
      000399 90r00r05         [24]  900 	mov	dptr,#_handle_setup_request_handled_65536_82
      00039C 14               [12]  901 	dec	a
      00039D F0               [24]  902 	movx	@dptr,a
                                    903 ;	src/usb.c:201: }
      00039E                        904 00117$:
                                    905 ;	src/usb.c:204: if(handled) ep0cs = 0x02; // hsnak
      00039E 90r00r05         [24]  906 	mov	dptr,#_handle_setup_request_handled_65536_82
      0003A1 E0               [24]  907 	movx	a,@dptr
      0003A2 60 07            [24]  908 	jz	00119$
      0003A4 90 C7 B4         [24]  909 	mov	dptr,#0xc7b4
      0003A7 74 02            [12]  910 	mov	a,#0x02
      0003A9 F0               [24]  911 	movx	@dptr,a
      0003AA 22               [24]  912 	ret
      0003AB                        913 00119$:
                                    914 ;	src/usb.c:205: else ep0cs = 0x01; // ep0stall
      0003AB 90 C7 B4         [24]  915 	mov	dptr,#0xc7b4
      0003AE 74 01            [12]  916 	mov	a,#0x01
      0003B0 F0               [24]  917 	movx	@dptr,a
                                    918 ;	src/usb.c:206: }
      0003B1 22               [24]  919 	ret
                                    920 	.area CSEG    (CODE)
                                    921 	.area CONST   (CODE)
                                    922 	.area XINIT   (CODE)
      000000                        923 __xinit__nordic_bootloader:
      000000 00 78                  924 	.byte #0x00,#0x78
      000002                        925 __xinit__logitech_bootloader:
      000002 00 74                  926 	.byte #0x00,#0x74
      000004                        927 __xinit__request:
      000004 E8 C7                  928 	.byte _setupbuf, (_setupbuf >> 8)
                                    929 	.area CABS    (ABS,CODE)
